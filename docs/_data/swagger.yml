consumes:
- application/json
produces:
- application/json
schemes:
- http
swagger: "2.0"
info:
  description: |-
    the purpose of this application is to provide an application
    that is using plain go code to define an API

    This should demonstrate all the possible comment annotations
    that are available to turn go code into a fully compliant swagger 2.0 spec
  title: Meshery API.
  license:
    name: Apache-2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.txt
  version: 0.4.27
basePath: /
paths:
  /api/experimental/pattern:
    get:
      description: |-
        Returns the list of all the patterns saved by the current user
        This will return all the patterns with their details
      tags:
      - PatternsAPI
      summary: Handle GET request for patterns
      operationId: idGetPatternFiles
      responses:
        "200":
          description: Returns all meshery patterns
          schema:
            description: PatternsAPIResponse response retruned by patternfile endpoint
              on meshery server
            type: object
            properties:
              page:
                type: integer
                format: uint64
                x-go-name: Page
              page_size:
                type: integer
                format: uint64
                x-go-name: PageSize
              patterns:
                type: array
                items:
                  description: MesheryPattern represents the patterns that needs to
                    be saved
                  type: object
                  properties:
                    created_at:
                      type: string
                      format: date-time
                      x-go-name: CreatedAt
                    id:
                      type: array
                      title: UUID is an array type to represent the value of a UUID,
                        as defined in RFC-4122.
                      items:
                        type: integer
                        format: uint8
                      x-go-package: github.com/gofrs/uuid
                    location:
                      description: |-
                        It implements native SQL driver interfaces and hence can
                        be used for SQL json or jsonb types as a drop in replacement
                        of golang native maps
                      type: object
                      title: Map type is an alias for map[string]interface{}
                      additionalProperties:
                        type: object
                      x-go-package: github.com/layer5io/meshery/internal/sql
                    name:
                      type: string
                      x-go-name: Name
                    pattern_file:
                      type: string
                      x-go-name: PatternFile
                    updated_at:
                      type: string
                      format: date-time
                      x-go-name: UpdatedAt
                    user_id:
                      description: |-
                        Meshery doesn't have the user id fields
                        but the remote provider is allowed to provide one
                      type: string
                      x-go-name: UserID
                  x-go-package: github.com/layer5io/meshery/models
                x-go-name: Patterns
              total_size:
                type: integer
                format: uint64
                x-go-name: TotalCount
            x-go-package: github.com/layer5io/meshery/models
    post:
      description: Edit/update a meshery pattern
      tags:
      - PatternsAPI
      summary: Handle POST requests for patterns
      operationId: idPostPatternFile
      responses:
        "200":
          description: Returns a single meshery pattern
          schema:
            description: MesheryPattern represents the patterns that needs to be saved
            type: object
            properties:
              created_at:
                type: string
                format: date-time
                x-go-name: CreatedAt
              id:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              location:
                description: |-
                  It implements native SQL driver interfaces and hence can
                  be used for SQL json or jsonb types as a drop in replacement
                  of golang native maps
                type: object
                title: Map type is an alias for map[string]interface{}
                additionalProperties:
                  type: object
                x-go-package: github.com/layer5io/meshery/internal/sql
              name:
                type: string
                x-go-name: Name
              pattern_file:
                type: string
                x-go-name: PatternFile
              updated_at:
                type: string
                format: date-time
                x-go-name: UpdatedAt
              user_id:
                description: |-
                  Meshery doesn't have the user id fields
                  but the remote provider is allowed to provide one
                type: string
                x-go-name: UserID
            x-go-package: github.com/layer5io/meshery/models
  /api/experimental/pattern/{id}:
    get:
      description: Fetches the pattern with the given id
      tags:
      - PatternsAPI
      summary: Handle GET for a Meshery Pattern
      operationId: idGetMesheryPattern
      parameters:
      - type: string
        format: uuid
        x-go-name: ID
        description: id for a specific
        name: id
        in: path
        required: true
      responses:
        "200":
          description: Returns a single meshery pattern
          schema:
            description: MesheryPattern represents the patterns that needs to be saved
            type: object
            properties:
              created_at:
                type: string
                format: date-time
                x-go-name: CreatedAt
              id:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              location:
                description: |-
                  It implements native SQL driver interfaces and hence can
                  be used for SQL json or jsonb types as a drop in replacement
                  of golang native maps
                type: object
                title: Map type is an alias for map[string]interface{}
                additionalProperties:
                  type: object
                x-go-package: github.com/layer5io/meshery/internal/sql
              name:
                type: string
                x-go-name: Name
              pattern_file:
                type: string
                x-go-name: PatternFile
              updated_at:
                type: string
                format: date-time
                x-go-name: UpdatedAt
              user_id:
                description: |-
                  Meshery doesn't have the user id fields
                  but the remote provider is allowed to provide one
                type: string
                x-go-name: UserID
            x-go-package: github.com/layer5io/meshery/models
    delete:
      description: 'Deletes a meshery pattern with ID: id'
      tags:
      - PatternsAPI
      summary: Handle Delete for a Meshery Pattern
      operationId: idDeleteMesheryPattern
      parameters:
      - type: string
        format: uuid
        x-go-name: ID
        description: id for a specific
        name: id
        in: path
        required: true
      responses:
        "200":
          description: ""
  /api/oam/{type}:
    get:
      description: |-
        Getting list of workloads/traits/scopes

        {type} being of either trait, scope, workload; registration of adapter capabilities.
      tags:
      - PatternsAPI
      summary: Handles the get requests for the OAM objects
      operationId: idGETOAMMesheryPattern
      responses:
        "200":
          description: ""
    post:
      description: |-
        Adding a workload/trait/scope

        {type} being of either trait, scope, workload; registration of adapter capabilities.
      tags:
      - PatternsAPI
      summary: Handles registering OMA objects
      operationId: idPOSTOAMMesheryPattern
      responses:
        "200":
          description: ""
  /api/telemetry/metrics/board_import:
    post:
      description: Used for importing Grafana board for Prometheus
      tags:
      - PrometheusAPI
      summary: Handle POST request for Prometheus board import
      operationId: idPostPrometheusBoardImport
      responses:
        "200":
          description: Response for prometheus board import
          schema:
            description: GrafanaBoard represents a Grafana board
            type: object
            properties:
              org_id:
                type: integer
                format: uint64
                x-go-name: OrgID
              panels:
                type: array
                items:
                  $ref: '#/definitions/Panel'
                x-go-name: Panels
              slug:
                type: string
                x-go-name: Slug
              template_vars:
                type: array
                items:
                  description: GrafanaTemplateVars represents template variables in
                    a bboard
                  type: object
                  properties:
                    datasource:
                      description: GrafanaDataSource represents a Grafana datasource
                        like Prometheus
                      type: object
                      properties:
                        id:
                          type: integer
                          format: uint64
                          x-go-name: ID
                        name:
                          type: string
                          x-go-name: Name
                      x-go-package: github.com/layer5io/meshery/models
                    hide:
                      type: integer
                      format: uint8
                      x-go-name: Hide
                    name:
                      type: string
                      x-go-name: Name
                    query:
                      type: string
                      x-go-name: Query
                    value:
                      type: object
                      x-go-name: Value
                  x-go-package: github.com/layer5io/meshery/models
                x-go-name: TemplateVars
              title:
                type: string
                x-go-name: Title
              uid:
                type: string
                x-go-name: UID
              uri:
                type: string
                x-go-name: URI
            x-go-package: github.com/layer5io/meshery/models
  /api/telemetry/metrics/boards:
    post:
      description: Used to persist selected board and panels
      tags:
      - PrometheusAPI
      summary: Handle POST request for Prometheus board
      operationId: idPostPrometheusBoard
      parameters:
      - name: Body
        in: body
        required: true
        schema:
          type: array
          items:
            description: SelectedGrafanaConfig represents the selected boards, panels,
              and template variables
            type: object
            properties:
              board:
                description: GrafanaBoard represents a Grafana board
                type: object
                properties:
                  org_id:
                    type: integer
                    format: uint64
                    x-go-name: OrgID
                  panels:
                    type: array
                    items:
                      $ref: '#/definitions/Panel'
                    x-go-name: Panels
                  slug:
                    type: string
                    x-go-name: Slug
                  template_vars:
                    type: array
                    items:
                      description: GrafanaTemplateVars represents template variables
                        in a bboard
                      type: object
                      properties:
                        datasource:
                          description: GrafanaDataSource represents a Grafana datasource
                            like Prometheus
                          type: object
                          properties:
                            id:
                              type: integer
                              format: uint64
                              x-go-name: ID
                            name:
                              type: string
                              x-go-name: Name
                          x-go-package: github.com/layer5io/meshery/models
                        hide:
                          type: integer
                          format: uint8
                          x-go-name: Hide
                        name:
                          type: string
                          x-go-name: Name
                        query:
                          type: string
                          x-go-name: Query
                        value:
                          type: object
                          x-go-name: Value
                      x-go-package: github.com/layer5io/meshery/models
                    x-go-name: TemplateVars
                  title:
                    type: string
                    x-go-name: Title
                  uid:
                    type: string
                    x-go-name: UID
                  uri:
                    type: string
                    x-go-name: URI
                x-go-package: github.com/layer5io/meshery/models
              panels:
                type: array
                items:
                  $ref: '#/definitions/Panel'
                x-go-name: GrafanaPanels
              templateVars:
                type: array
                items:
                  type: string
                x-go-name: SelectedTemplateVars
            x-go-package: github.com/layer5io/meshery/models
      responses:
        "200":
          description: ""
  /api/telemetry/metrics/config:
    get:
      description: Used for fetching Prometheus configuration
      tags:
      - PrometheusAPI
      summary: Handle GET for Prometheus configuration
      operationId: idGetPrometheusConfig
      responses:
        "200":
          description: Returns prometheus configuration
          schema:
            description: Prometheus represents the prometheus session config
            type: object
            properties:
              prometheusURL:
                type: string
                x-go-name: PrometheusURL
              selectedPrometheusBoardsConfigs:
                type: array
                items:
                  description: SelectedGrafanaConfig represents the selected boards,
                    panels, and template variables
                  type: object
                  properties:
                    board:
                      description: GrafanaBoard represents a Grafana board
                      type: object
                      properties:
                        org_id:
                          type: integer
                          format: uint64
                          x-go-name: OrgID
                        panels:
                          type: array
                          items:
                            $ref: '#/definitions/Panel'
                          x-go-name: Panels
                        slug:
                          type: string
                          x-go-name: Slug
                        template_vars:
                          type: array
                          items:
                            description: GrafanaTemplateVars represents template variables
                              in a bboard
                            type: object
                            properties:
                              datasource:
                                description: GrafanaDataSource represents a Grafana
                                  datasource like Prometheus
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    format: uint64
                                    x-go-name: ID
                                  name:
                                    type: string
                                    x-go-name: Name
                                x-go-package: github.com/layer5io/meshery/models
                              hide:
                                type: integer
                                format: uint8
                                x-go-name: Hide
                              name:
                                type: string
                                x-go-name: Name
                              query:
                                type: string
                                x-go-name: Query
                              value:
                                type: object
                                x-go-name: Value
                            x-go-package: github.com/layer5io/meshery/models
                          x-go-name: TemplateVars
                        title:
                          type: string
                          x-go-name: Title
                        uid:
                          type: string
                          x-go-name: UID
                        uri:
                          type: string
                          x-go-name: URI
                      x-go-package: github.com/layer5io/meshery/models
                    panels:
                      type: array
                      items:
                        $ref: '#/definitions/Panel'
                      x-go-name: GrafanaPanels
                    templateVars:
                      type: array
                      items:
                        type: string
                      x-go-name: SelectedTemplateVars
                  x-go-package: github.com/layer5io/meshery/models
                x-go-name: SelectedPrometheusBoardsConfigs
            x-go-package: github.com/layer5io/meshery/models
    post:
      description: Used for persisting Prometheus configuration
      tags:
      - PrometheusAPI
      summary: Handle POST for Prometheus configuration
      operationId: idPostPrometheusConfig
      parameters:
      - x-go-name: PrometheusURL
        name: prometheusURL
        in: body
        schema:
          type: string
      responses:
        "200":
          description: ""
    delete:
      description: Used for deleting Prometheus configuration
      tags:
      - PrometheusAPI
      summary: Handle DELETE for Prometheus configuration
      operationId: idDeletePrometheusConfig
      responses:
        "200":
          description: ""
  /api/telemetry/metrics/grafana/boards:
    get:
      description: Used for fetching Grafana boards and panels
      tags:
      - GrafanaAPI
      summary: Handle GET request for Grafana boards
      operationId: idGetGrafanaBoards
      parameters:
      - type: string
        x-go-name: DashboardSearch
        name: dashboardSearch
        in: query
      responses:
        "200":
          description: Returns Grafana boards and panels
          schema:
            type: array
            items:
              description: GrafanaBoard represents a Grafana board
              type: object
              properties:
                org_id:
                  type: integer
                  format: uint64
                  x-go-name: OrgID
                panels:
                  type: array
                  items:
                    $ref: '#/definitions/Panel'
                  x-go-name: Panels
                slug:
                  type: string
                  x-go-name: Slug
                template_vars:
                  type: array
                  items:
                    description: GrafanaTemplateVars represents template variables
                      in a bboard
                    type: object
                    properties:
                      datasource:
                        description: GrafanaDataSource represents a Grafana datasource
                          like Prometheus
                        type: object
                        properties:
                          id:
                            type: integer
                            format: uint64
                            x-go-name: ID
                          name:
                            type: string
                            x-go-name: Name
                        x-go-package: github.com/layer5io/meshery/models
                      hide:
                        type: integer
                        format: uint8
                        x-go-name: Hide
                      name:
                        type: string
                        x-go-name: Name
                      query:
                        type: string
                        x-go-name: Query
                      value:
                        type: object
                        x-go-name: Value
                    x-go-package: github.com/layer5io/meshery/models
                  x-go-name: TemplateVars
                title:
                  type: string
                  x-go-name: Title
                uid:
                  type: string
                  x-go-name: UID
                uri:
                  type: string
                  x-go-name: URI
              x-go-package: github.com/layer5io/meshery/models
    post:
      description: Used for persist Grafana boards and panel selections
      tags:
      - GrafanaAPI
      summary: Handle POST request for Grafana boards
      operationId: idPostGrafanaBoards
      responses:
        "200":
          description: ""
  /api/telemetry/metrics/grafana/config:
    get:
      description: Used for fetching Grafana configuration
      tags:
      - GrafanaAPI
      summary: Handle GET request for Grafana configuration
      operationId: idGetGrafanaConfig
      responses:
        "200":
          description: Returns Grafana configs
          schema:
            description: Grafana represents the Grafana session config
            type: object
            properties:
              grafanaAPIKey:
                type: string
                x-go-name: GrafanaAPIKey
              grafanaURL:
                type: string
                x-go-name: GrafanaURL
              selectedBoardsConfigs:
                description: GrafanaBoardSearch string          `json:"grafanaBoardSearch,omitempty"`
                type: array
                items:
                  description: SelectedGrafanaConfig represents the selected boards,
                    panels, and template variables
                  type: object
                  properties:
                    board:
                      description: GrafanaBoard represents a Grafana board
                      type: object
                      properties:
                        org_id:
                          type: integer
                          format: uint64
                          x-go-name: OrgID
                        panels:
                          type: array
                          items:
                            $ref: '#/definitions/Panel'
                          x-go-name: Panels
                        slug:
                          type: string
                          x-go-name: Slug
                        template_vars:
                          type: array
                          items:
                            description: GrafanaTemplateVars represents template variables
                              in a bboard
                            type: object
                            properties:
                              datasource:
                                description: GrafanaDataSource represents a Grafana
                                  datasource like Prometheus
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    format: uint64
                                    x-go-name: ID
                                  name:
                                    type: string
                                    x-go-name: Name
                                x-go-package: github.com/layer5io/meshery/models
                              hide:
                                type: integer
                                format: uint8
                                x-go-name: Hide
                              name:
                                type: string
                                x-go-name: Name
                              query:
                                type: string
                                x-go-name: Query
                              value:
                                type: object
                                x-go-name: Value
                            x-go-package: github.com/layer5io/meshery/models
                          x-go-name: TemplateVars
                        title:
                          type: string
                          x-go-name: Title
                        uid:
                          type: string
                          x-go-name: UID
                        uri:
                          type: string
                          x-go-name: URI
                      x-go-package: github.com/layer5io/meshery/models
                    panels:
                      type: array
                      items:
                        $ref: '#/definitions/Panel'
                      x-go-name: GrafanaPanels
                    templateVars:
                      type: array
                      items:
                        type: string
                      x-go-name: SelectedTemplateVars
                  x-go-package: github.com/layer5io/meshery/models
                x-go-name: GrafanaBoards
            x-go-package: github.com/layer5io/meshery/models
    post:
      description: Used for persisting Grafana configuration
      tags:
      - GrafanaAPI
      summary: Handle POST request for Grafana configuration
      operationId: idPostGrafanaConfig
      parameters:
      - name: Body
        in: body
        required: true
        schema:
          description: Parameters to save Grafana configuration
          type: object
          properties:
            grafanaAPIKey:
              type: string
              x-go-name: GrafanaAPIKey
            grafanaURL:
              type: string
              x-go-name: GrafanaURL
          x-go-package: github.com/layer5io/meshery/models
      responses:
        "200":
          description: ""
    delete:
      description: Used for Delete Grafana configuration
      tags:
      - GrafanaAPI
      summary: Handle DELETE request for Grafana configuration
      operationId: idDeleteGrafanaConfig
      responses:
        "200":
          description: ""
  /api/telemetry/metrics/grafana/ping:
    get:
      description: Used to initiate a Grafana ping
      tags:
      - GrafanaAPI
      summary: Handle GET request for Grafana ping
      operationId: idGetGrafanaPing
      responses:
        "200":
          description: ""
  /api/telemetry/metrics/grafana/query:
    get:
      description: Used for handling Grafana queries
      tags:
      - GrafanaAPI
      summary: Handle GET request for Grafana queries
      operationId: idGetGrafanaQuery
      responses:
        "200":
          description: ""
  /api/telemetry/metrics/grafana/scan:
    get:
      description: Fetches and returns Grafana
      tags:
      - GrafanaAPI
      summary: Handle GET request for Grafana
      operationId: idGetGrafana
      responses:
        "200":
          description: Returns a map for v1 services
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                description: |-
                  Service is a named abstraction of software service (for example, mysql) consisting of local port
                  (for example 3306) that the proxy listens on, and the selector that determines which pods
                  will answer requests sent through the proxy.
                type: object
                properties:
                  annotations:
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: http://kubernetes.io/docs/user-guide/annotations
                      +optional
                    type: object
                    additionalProperties:
                      type: string
                    x-go-name: Annotations
                  apiVersion:
                    description: |-
                      APIVersion defines the versioned schema of this representation of an object.
                      Servers should convert recognized schemas to the latest internal value, and
                      may reject unrecognized values.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      +optional
                    type: string
                    x-go-name: APIVersion
                  clusterName:
                    description: |-
                      The name of the cluster which the object belongs to.
                      This is used to distinguish resources with same name and namespace in different clusters.
                      This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
                      +optional
                    type: string
                    x-go-name: ClusterName
                  creationTimestamp:
                    description: |-
                      +protobuf.options.marshal=false
                      +protobuf.as=Timestamp
                      +protobuf.options.(gogoproto.goproto_stringer)=false
                    type: object
                    title: |-
                      Time is a wrapper around time.Time which supports correct
                      marshaling to YAML and JSON.  Wrappers are provided for many
                      of the factory methods that the time package offers.
                    x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                  deletionGracePeriodSeconds:
                    description: |-
                      Number of seconds allowed for this object to gracefully terminate before
                      it will be removed from the system. Only set when deletionTimestamp is also set.
                      May only be shortened.
                      Read-only.
                      +optional
                    type: integer
                    format: int64
                    x-go-name: DeletionGracePeriodSeconds
                  deletionTimestamp:
                    description: |-
                      +protobuf.options.marshal=false
                      +protobuf.as=Timestamp
                      +protobuf.options.(gogoproto.goproto_stringer)=false
                    type: object
                    title: |-
                      Time is a wrapper around time.Time which supports correct
                      marshaling to YAML and JSON.  Wrappers are provided for many
                      of the factory methods that the time package offers.
                    x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                  finalizers:
                    description: |-
                      Must be empty before the object is deleted from the registry. Each entry
                      is an identifier for the responsible component that will remove the entry
                      from the list. If the deletionTimestamp of the object is non-nil, entries
                      in this list can only be removed.
                      Finalizers may be processed and removed in any order.  Order is NOT enforced
                      because it introduces significant risk of stuck finalizers.
                      finalizers is a shared field, any actor with permission can reorder it.
                      If the finalizer list is processed in order, then this can lead to a situation
                      in which the component responsible for the first finalizer in the list is
                      waiting for a signal (field value, external system, or other) produced by a
                      component responsible for a finalizer later in the list, resulting in a deadlock.
                      Without enforced ordering finalizers are free to order amongst themselves and
                      are not vulnerable to ordering changes in the list.
                      +optional
                      +patchStrategy=merge
                    type: array
                    items:
                      type: string
                    x-go-name: Finalizers
                  generateName:
                    description: |-
                      GenerateName is an optional prefix, used by the server, to generate a unique
                      name ONLY IF the Name field has not been provided.
                      If this field is used, the name returned to the client will be different
                      than the name passed. This value will also be combined with a unique suffix.
                      The provided value has the same validation rules as the Name field,
                      and may be truncated by the length of the suffix required to make the value
                      unique on the server.

                      If this field is specified and the generated name exists, the server will
                      NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
                      ServerTimeout indicating a unique name could not be found in the time allotted, and the client
                      should retry (optionally after the time indicated in the Retry-After header).

                      Applied only if Name is not specified.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                      +optional
                    type: string
                    x-go-name: GenerateName
                  generation:
                    description: |-
                      A sequence number representing a specific generation of the desired state.
                      Populated by the system. Read-only.
                      +optional
                    type: integer
                    format: int64
                    x-go-name: Generation
                  kind:
                    description: |-
                      Kind is a string value representing the REST resource this object represents.
                      Servers may infer this from the endpoint the client submits requests to.
                      Cannot be updated.
                      In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      +optional
                    type: string
                    x-go-name: Kind
                  labels:
                    description: |-
                      Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: http://kubernetes.io/docs/user-guide/labels
                      +optional
                    type: object
                    additionalProperties:
                      type: string
                    x-go-name: Labels
                  managedFields:
                    description: |-
                      ManagedFields maps workflow-id and version to the set of fields
                      that are managed by that workflow. This is mostly for internal
                      housekeeping, and users typically shouldn't need to set or
                      understand this field. A workflow can be the user's name, a
                      controller's name, or the name of a specific apply path like
                      "ci-cd". The set of fields is always in the version that the
                      workflow used when modifying the object.

                      +optional
                    type: array
                    items:
                      description: |-
                        ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource
                        that the fieldset applies to.
                      type: object
                      properties:
                        apiVersion:
                          description: |-
                            APIVersion defines the version of this resource that this field set
                            applies to. The format is "group/version" just like the top-level
                            APIVersion field. It is necessary to track the version of a field
                            set because it cannot be automatically converted.
                          type: string
                          x-go-name: APIVersion
                        fieldsType:
                          description: |-
                            FieldsType is the discriminator for the different fields format and version.
                            There is currently only one possible value: "FieldsV1"
                          type: string
                          x-go-name: FieldsType
                        fieldsV1:
                          description: |-
                            Each key is either a '.' representing the field itself, and will always map to an empty set,
                            or a string representing a sub-field or item. The string will follow one of these four formats:
                            'f:<name>', where <name> is the name of a field in a struct, or key in a map
                            'v:<value>', where <value> is the exact json formatted value of a list item
                            'i:<index>', where <index> is position of a item in a list
                            'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values
                            If a key maps to an empty Fields value, the field that key represents is part of the set.

                            The exact format is defined in sigs.k8s.io/structured-merge-diff
                          type: object
                          title: FieldsV1 stores a set of fields in a data structure
                            like a Trie, in JSON format.
                          x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                        manager:
                          description: Manager is an identifier of the workflow managing
                            these fields.
                          type: string
                          x-go-name: Manager
                        operation:
                          type: string
                          title: ManagedFieldsOperationType is the type of operation
                            which lead to a ManagedFieldsEntry being created.
                          x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                        time:
                          description: |-
                            +protobuf.options.marshal=false
                            +protobuf.as=Timestamp
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                          type: object
                          title: |-
                            Time is a wrapper around time.Time which supports correct
                            marshaling to YAML and JSON.  Wrappers are provided for many
                            of the factory methods that the time package offers.
                          x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                      x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                    x-go-name: ManagedFields
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: http://kubernetes.io/docs/user-guide/identifiers#names
                      +optional
                    type: string
                    x-go-name: Name
                  namespace:
                    description: |-
                      Namespace defines the space within each name must be unique. An empty namespace is
                      equivalent to the "default" namespace, but "default" is the canonical representation.
                      Not all objects are required to be scoped to a namespace - the value of this field for
                      those objects will be empty.

                      Must be a DNS_LABEL.
                      Cannot be updated.
                      More info: http://kubernetes.io/docs/user-guide/namespaces
                      +optional
                    type: string
                    x-go-name: Namespace
                  ownerReferences:
                    description: |-
                      List of objects depended by this object. If ALL objects in the list have
                      been deleted, this object will be garbage collected. If this object is managed by a controller,
                      then an entry in this list will point to this controller, with the controller field set to true.
                      There cannot be more than one managing controller.
                      +optional
                      +patchMergeKey=uid
                      +patchStrategy=merge
                    type: array
                    items:
                      description: |-
                        OwnerReference contains enough information to let you identify an owning
                        object. An owning object must be in the same namespace as the dependent, or
                        be cluster-scoped, so there is no namespace field.
                      type: object
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                          x-go-name: APIVersion
                        blockOwnerDeletion:
                          description: |-
                            If true, AND if the owner has the "foregroundDeletion" finalizer, then
                            the owner cannot be deleted from the key-value store until this
                            reference is removed.
                            Defaults to false.
                            To set this field, a user needs "delete" permission of the owner,
                            otherwise 422 (Unprocessable Entity) will be returned.
                            +optional
                          type: boolean
                          x-go-name: BlockOwnerDeletion
                        controller:
                          description: |-
                            If true, this reference points to the managing controller.
                            +optional
                          type: boolean
                          x-go-name: Controller
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                          x-go-name: Kind
                        name:
                          description: |-
                            Name of the referent.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names
                          type: string
                          x-go-name: Name
                        uid:
                          description: |-
                            UID is a type that holds unique ID values, including UUIDs.  Because we
                            don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                            intent and helps make sure that UIDs and names do not get conflated.
                          type: string
                          x-go-package: k8s.io/apimachinery/pkg/types
                      x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                    x-go-name: OwnerReferences
                  resourceVersion:
                    description: |-
                      An opaque value that represents the internal version of this object that can
                      be used by clients to determine when objects have changed. May be used for optimistic
                      concurrency, change detection, and the watch operation on a resource or set of resources.
                      Clients must treat these values as opaque and passed unmodified back to the server.
                      They may only be valid for a particular resource or set of resources.

                      Populated by the system.
                      Read-only.
                      Value must be treated as opaque by clients and .
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      +optional
                    type: string
                    x-go-name: ResourceVersion
                  selfLink:
                    description: |-
                      SelfLink is a URL representing this object.
                      Populated by the system.
                      Read-only.

                      DEPRECATED
                      Kubernetes will stop propagating this field in 1.20 release and the field is planned
                      to be removed in 1.21 release.
                      +optional
                    type: string
                    x-go-name: SelfLink
                  spec:
                    type: object
                    title: ServiceSpec describes the attributes that a user creates
                      on a service.
                    properties:
                      clusterIP:
                        description: |-
                          clusterIP is the IP address of the service and is usually assigned
                          randomly by the master. If an address is specified manually and is not in
                          use by others, it will be allocated to the service; otherwise, creation
                          of the service will fail. This field can not be changed through updates.
                          Valid values are "None", empty string (""), or a valid IP address. "None"
                          can be specified for headless services when proxying is not required.
                          Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if
                          type is ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                          +optional
                        type: string
                        x-go-name: ClusterIP
                      externalIPs:
                        description: |-
                          externalIPs is a list of IP addresses for which nodes in the cluster
                          will also accept traffic for this service.  These IPs are not managed by
                          Kubernetes.  The user is responsible for ensuring that traffic arrives
                          at a node with this IP.  A common example is external load-balancers
                          that are not part of the Kubernetes system.
                          +optional
                        type: array
                        items:
                          type: string
                        x-go-name: ExternalIPs
                      externalName:
                        description: |-
                          externalName is the external reference that kubedns or equivalent will
                          return as a CNAME record for this service. No proxying will be involved.
                          Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
                          and requires Type to be ExternalName.
                          +optional
                        type: string
                        x-go-name: ExternalName
                      externalTrafficPolicy:
                        description: Service External Traffic Policy Type string
                        type: string
                        x-go-package: k8s.io/api/core/v1
                      healthCheckNodePort:
                        description: |-
                          healthCheckNodePort specifies the healthcheck nodePort for the service.
                          If not specified, HealthCheckNodePort is created by the service api
                          backend with the allocated nodePort. Will use user-specified nodePort value
                          if specified by the client. Only effects when Type is set to LoadBalancer
                          and ExternalTrafficPolicy is set to Local.
                          +optional
                        type: integer
                        format: int32
                        x-go-name: HealthCheckNodePort
                      ipFamily:
                        description: |-
                          IPFamily represents the IP Family (IPv4 or IPv6). This type is used
                          to express the family of an IP expressed by a type (i.e. service.Spec.IPFamily)
                        type: string
                        x-go-package: k8s.io/api/core/v1
                      loadBalancerIP:
                        description: |-
                          Only applies to Service Type: LoadBalancer
                          LoadBalancer will get created with the IP specified in this field.
                          This feature depends on whether the underlying cloud-provider supports specifying
                          the loadBalancerIP when a load balancer is created.
                          This field will be ignored if the cloud-provider does not support the feature.
                          +optional
                        type: string
                        x-go-name: LoadBalancerIP
                      loadBalancerSourceRanges:
                        description: |-
                          If specified and supported by the platform, this will restrict traffic through the cloud-provider
                          load-balancer will be restricted to the specified client IPs. This field will be ignored if the
                          cloud-provider does not support the feature."
                          More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
                          +optional
                        type: array
                        items:
                          type: string
                        x-go-name: LoadBalancerSourceRanges
                      ports:
                        description: |-
                          The list of ports that are exposed by this service.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                          +patchMergeKey=port
                          +patchStrategy=merge
                          +listType=map
                          +listMapKey=port
                          +listMapKey=protocol
                        type: array
                        items:
                          type: object
                          title: ServicePort contains information on service's port.
                          properties:
                            appProtocol:
                              description: |-
                                The application protocol for this port.
                                This field follows standard Kubernetes label syntax.
                                Un-prefixed names are reserved for IANA standard service names (as per
                                RFC-6335 and http://www.iana.org/assignments/service-names).
                                Non-standard protocols should use prefixed names such as
                                mycompany.com/my-custom-protocol.
                                Field can be enabled with ServiceAppProtocol feature gate.
                                +optional
                              type: string
                              x-go-name: AppProtocol
                            name:
                              description: |-
                                The name of this port within the service. This must be a DNS_LABEL.
                                All ports within a ServiceSpec must have unique names. When considering
                                the endpoints for a Service, this must match the 'name' field in the
                                EndpointPort.
                                Optional if only one ServicePort is defined on this service.
                                +optional
                              type: string
                              x-go-name: Name
                            nodePort:
                              description: |-
                                The port on each node on which this service is exposed when type=NodePort or LoadBalancer.
                                Usually assigned by the system. If specified, it will be allocated to the service
                                if unused or else creation of the service will fail.
                                Default is to auto-allocate a port if the ServiceType of this Service requires one.
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                +optional
                              type: integer
                              format: int32
                              x-go-name: NodePort
                            port:
                              description: The port that will be exposed by this service.
                              type: integer
                              format: int32
                              x-go-name: Port
                            protocol:
                              type: string
                              title: Protocol defines network protocols supported
                                for things like container ports.
                              x-go-package: k8s.io/api/core/v1
                            targetPort:
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              type: object
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                              properties:
                                IntVal:
                                  type: integer
                                  format: int32
                                StrVal:
                                  type: string
                                Type:
                                  type: integer
                                  format: int64
                                  title: Type represents the stored type of IntOrString.
                                  x-go-package: k8s.io/apimachinery/pkg/util/intstr
                              x-go-package: k8s.io/apimachinery/pkg/util/intstr
                          x-go-package: k8s.io/api/core/v1
                        x-go-name: Ports
                      publishNotReadyAddresses:
                        description: |-
                          publishNotReadyAddresses, when set to true, indicates that DNS implementations
                          must publish the notReadyAddresses of subsets for the Endpoints associated with
                          the Service. The default value is false.
                          The primary use case for setting this field is to use a StatefulSet's Headless Service
                          to propagate SRV records for its Pods without respect to their readiness for purpose
                          of peer discovery.
                          +optional
                        type: boolean
                        x-go-name: PublishNotReadyAddresses
                      selector:
                        description: |-
                          Route service traffic to pods with label keys and values matching this
                          selector. If empty or not present, the service is assumed to have an
                          external process managing its endpoints, which Kubernetes will not
                          modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
                          Ignored if type is ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/
                          +optional
                        type: object
                        additionalProperties:
                          type: string
                        x-go-name: Selector
                      sessionAffinity:
                        description: Session Affinity Type string
                        type: string
                        x-go-package: k8s.io/api/core/v1
                      sessionAffinityConfig:
                        type: object
                        title: SessionAffinityConfig represents the configurations
                          of session affinity.
                        properties:
                          clientIP:
                            type: object
                            title: ClientIPConfig represents the configurations of
                              Client IP based session affinity.
                            properties:
                              timeoutSeconds:
                                description: |-
                                  timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                                  The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                                  Default value is 10800(for 3 hours).
                                  +optional
                                type: integer
                                format: int32
                                x-go-name: TimeoutSeconds
                            x-go-package: k8s.io/api/core/v1
                        x-go-package: k8s.io/api/core/v1
                      topologyKeys:
                        description: |-
                          topologyKeys is a preference-order list of topology keys which
                          implementations of services should use to preferentially sort endpoints
                          when accessing this Service, it can not be used at the same time as
                          externalTrafficPolicy=Local.
                          Topology keys must be valid label keys and at most 16 keys may be specified.
                          Endpoints are chosen based on the first topology key with available backends.
                          If this field is specified and all entries have no backends that match
                          the topology of the client, the service has no backends for that client
                          and connections should fail.
                          The special value "*" may be used to mean "any topology". This catch-all
                          value, if used, only makes sense as the last value in the list.
                          If this is not specified or empty, no topology constraints will be applied.
                          +optional
                        type: array
                        items:
                          type: string
                        x-go-name: TopologyKeys
                      type:
                        description: Service Type string describes ingress methods
                          for a service
                        type: string
                        x-go-package: k8s.io/api/core/v1
                    x-go-package: k8s.io/api/core/v1
                  status:
                    type: object
                    title: ServiceStatus represents the current status of a service.
                    properties:
                      loadBalancer:
                        type: object
                        title: LoadBalancerStatus represents the status of a load-balancer.
                        properties:
                          ingress:
                            description: |-
                              Ingress is a list containing ingress points for the load-balancer.
                              Traffic intended for the service should be sent to these ingress points.
                              +optional
                            type: array
                            items:
                              description: traffic intended for the service should
                                be sent to an ingress point.
                              type: object
                              title: 'LoadBalancerIngress represents the status of
                                a load-balancer ingress point:'
                              properties:
                                hostname:
                                  description: |-
                                    Hostname is set for load-balancer ingress points that are DNS based
                                    (typically AWS load-balancers)
                                    +optional
                                  type: string
                                  x-go-name: Hostname
                                ip:
                                  description: |-
                                    IP is set for load-balancer ingress points that are IP based
                                    (typically GCE or OpenStack load-balancers)
                                    +optional
                                  type: string
                                  x-go-name: IP
                              x-go-package: k8s.io/api/core/v1
                            x-go-name: Ingress
                        x-go-package: k8s.io/api/core/v1
                    x-go-package: k8s.io/api/core/v1
                  uid:
                    description: |-
                      UID is a type that holds unique ID values, including UUIDs.  Because we
                      don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                      intent and helps make sure that UIDs and names do not get conflated.
                    type: string
                    x-go-package: k8s.io/apimachinery/pkg/types
                x-go-package: k8s.io/api/core/v1
  /api/telemetry/metrics/ping:
    get:
      description: Used to ping prometheus
      tags:
      - PrometheusAPI
      summary: Handle GET request for Prometheus Ping
      operationId: idGetPrometheusPing
      responses:
        "200":
          description: ""
  /api/telemetry/metrics/query:
    get:
      description: Used to prometheus queries
      tags:
      - PrometheusAPI
      summary: Handle GET request for Prometheus Query
      operationId: idGetPrometheusQuery
      responses:
        "200":
          description: ""
  /api/telemetry/metrics/static-board:
    get:
      description: Used to fetch the static board
      tags:
      - PrometheusAPI
      summary: Handle GET request for Prometheus static board
      operationId: idGetPrometheusStaticBoard
      responses:
        "200":
          description: Returns Prometheus static board
          schema:
            type: object
            additionalProperties:
              description: GrafanaBoard represents a Grafana board
              type: object
              properties:
                org_id:
                  type: integer
                  format: uint64
                  x-go-name: OrgID
                panels:
                  type: array
                  items:
                    $ref: '#/definitions/Panel'
                  x-go-name: Panels
                slug:
                  type: string
                  x-go-name: Slug
                template_vars:
                  type: array
                  items:
                    description: GrafanaTemplateVars represents template variables
                      in a bboard
                    type: object
                    properties:
                      datasource:
                        description: GrafanaDataSource represents a Grafana datasource
                          like Prometheus
                        type: object
                        properties:
                          id:
                            type: integer
                            format: uint64
                            x-go-name: ID
                          name:
                            type: string
                            x-go-name: Name
                        x-go-package: github.com/layer5io/meshery/models
                      hide:
                        type: integer
                        format: uint8
                        x-go-name: Hide
                      name:
                        type: string
                        x-go-name: Name
                      query:
                        type: string
                        x-go-name: Query
                      value:
                        type: object
                        x-go-name: Value
                    x-go-package: github.com/layer5io/meshery/models
                  x-go-name: TemplateVars
                title:
                  type: string
                  x-go-name: Title
                uid:
                  type: string
                  x-go-name: UID
                uri:
                  type: string
                  x-go-name: URI
              x-go-package: github.com/layer5io/meshery/models
  /api/user/performance/profiles:
    get:
      description: Returns the list of all the performance profiles saved by the current
        user
      tags:
      - PerformanceAPI
      summary: Handle GET requests for performance profiles
      operationId: idGetPerformanceProfiles
      responses:
        "200":
          description: Returns all the performance profiles
          schema:
            description: PerformanceProfilesAPIResponse response retruned by performance
              endpoint on meshery server
            type: object
            properties:
              page:
                type: integer
                format: uint64
                x-go-name: Page
              page_size:
                type: integer
                format: uint64
                x-go-name: PageSize
              profiles:
                type: array
                items:
                  description: |-
                    PerformanceProfile represents the performance profile that needs
                    to be saved
                  type: object
                  properties:
                    concurrent_request:
                      type: integer
                      format: int64
                      x-go-name: ConcurrentRequest
                    content_type:
                      type: string
                      x-go-name: ContentType
                    created_at:
                      description: |-
                        +protobuf.options.marshal=false
                        +protobuf.as=Timestamp
                        +protobuf.options.(gogoproto.goproto_stringer)=false
                      type: object
                      title: |-
                        Time is a wrapper around time.Time which supports correct
                        marshaling to YAML and JSON.  Wrappers are provided for many
                        of the factory methods that the time package offers.
                      x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                    duration:
                      type: string
                      x-go-name: Duration
                    endpoints:
                      type: array
                      title: StringArray represents a one-dimensional array of the
                        PostgreSQL character types.
                      items:
                        type: string
                      x-go-package: github.com/lib/pq
                    id:
                      type: array
                      title: UUID is an array type to represent the value of a UUID,
                        as defined in RFC-4122.
                      items:
                        type: integer
                        format: uint8
                      x-go-package: github.com/gofrs/uuid
                    last_run:
                      description: |-
                        +protobuf.options.marshal=false
                        +protobuf.as=Timestamp
                        +protobuf.options.(gogoproto.goproto_stringer)=false
                      type: object
                      title: |-
                        Time is a wrapper around time.Time which supports correct
                        marshaling to YAML and JSON.  Wrappers are provided for many
                        of the factory methods that the time package offers.
                      x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                    load_generators:
                      type: array
                      title: StringArray represents a one-dimensional array of the
                        PostgreSQL character types.
                      items:
                        type: string
                      x-go-package: github.com/lib/pq
                    name:
                      type: string
                      x-go-name: Name
                    qps:
                      type: integer
                      format: int64
                      x-go-name: QPS
                    request_body:
                      type: string
                      x-go-name: RequestBody
                    request_cookies:
                      type: string
                      x-go-name: RequestCookies
                    request_headers:
                      type: string
                      x-go-name: RequestHeaders
                    schedule:
                      type: array
                      title: UUID is an array type to represent the value of a UUID,
                        as defined in RFC-4122.
                      items:
                        type: integer
                        format: uint8
                      x-go-package: github.com/gofrs/uuid
                    service_mesh:
                      type: string
                      x-go-name: ServiceMesh
                    total_results:
                      type: integer
                      format: int64
                      x-go-name: TotalResults
                    updated_at:
                      description: |-
                        +protobuf.options.marshal=false
                        +protobuf.as=Timestamp
                        +protobuf.options.(gogoproto.goproto_stringer)=false
                      type: object
                      title: |-
                        Time is a wrapper around time.Time which supports correct
                        marshaling to YAML and JSON.  Wrappers are provided for many
                        of the factory methods that the time package offers.
                      x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                  x-go-package: github.com/layer5io/meshery/models
                x-go-name: Profiles
              total_count:
                type: integer
                format: uint64
                x-go-name: TotalCount
            x-go-package: github.com/layer5io/meshery/models
    post:
      description: Save performance profile using the current provider's persistence
        mechanism
      tags:
      - PerformanceAPI
      summary: Handle POST requests for saving performance profile
      operationId: idSavePerformanceProfile
      parameters:
      - name: Body
        in: body
        schema:
          description: PerformanceProfileParameters structs contains parameters to
            save a performance profile
          type: object
          properties:
            concurrent_request:
              description: number of concurrent requests
              type: integer
              format: int64
              x-go-name: ConcurrentRequest
            duration:
              description: duration of tests e.g. 30s
              type: string
              x-go-name: Duration
            endpoints:
              description: array of urls of performance results
              type: array
              items:
                type: string
              x-go-name: Endpoints
            load_generators:
              description: array of load generators
              type: array
              items:
                type: string
              x-go-name: LoadGenerators
            name:
              description: name of performance profile
              type: string
              x-go-name: Name
            qps:
              description: qps in integer
              type: integer
              format: int64
              x-go-name: QPS
            service_mesh:
              description: service mesh for performance tests
              type: string
              x-go-name: ServiceMesh
          x-go-package: github.com/layer5io/meshery/models
      responses:
        "200":
          description: Returns a single performance profile
          schema:
            description: |-
              PerformanceProfile represents the performance profile that needs
              to be saved
            type: object
            properties:
              concurrent_request:
                type: integer
                format: int64
                x-go-name: ConcurrentRequest
              content_type:
                type: string
                x-go-name: ContentType
              created_at:
                description: |-
                  +protobuf.options.marshal=false
                  +protobuf.as=Timestamp
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                type: object
                title: |-
                  Time is a wrapper around time.Time which supports correct
                  marshaling to YAML and JSON.  Wrappers are provided for many
                  of the factory methods that the time package offers.
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
              duration:
                type: string
                x-go-name: Duration
              endpoints:
                type: array
                title: StringArray represents a one-dimensional array of the PostgreSQL
                  character types.
                items:
                  type: string
                x-go-package: github.com/lib/pq
              id:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              last_run:
                description: |-
                  +protobuf.options.marshal=false
                  +protobuf.as=Timestamp
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                type: object
                title: |-
                  Time is a wrapper around time.Time which supports correct
                  marshaling to YAML and JSON.  Wrappers are provided for many
                  of the factory methods that the time package offers.
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
              load_generators:
                type: array
                title: StringArray represents a one-dimensional array of the PostgreSQL
                  character types.
                items:
                  type: string
                x-go-package: github.com/lib/pq
              name:
                type: string
                x-go-name: Name
              qps:
                type: integer
                format: int64
                x-go-name: QPS
              request_body:
                type: string
                x-go-name: RequestBody
              request_cookies:
                type: string
                x-go-name: RequestCookies
              request_headers:
                type: string
                x-go-name: RequestHeaders
              schedule:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              service_mesh:
                type: string
                x-go-name: ServiceMesh
              total_results:
                type: integer
                format: int64
                x-go-name: TotalResults
              updated_at:
                description: |-
                  +protobuf.options.marshal=false
                  +protobuf.as=Timestamp
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                type: object
                title: |-
                  Time is a wrapper around time.Time which supports correct
                  marshaling to YAML and JSON.  Wrappers are provided for many
                  of the factory methods that the time package offers.
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
            x-go-package: github.com/layer5io/meshery/models
  /api/user/performance/profiles/results:
    get:
      description: Returns pages of all the performance results from Remote Provider
      tags:
      - PerformanceAPI
      summary: Handles GET requests for performance results
      operationId: idGetAllPerformanceResults
      responses:
        "200":
          description: Returns all performance results
          schema:
            description: PerformanceResultsAPIResponse response retruned by performance
              endpoint on meshery server
            type: object
            properties:
              page:
                type: integer
                format: uint64
                x-go-name: Page
              page_size:
                type: integer
                format: uint64
                x-go-name: PageSize
              results:
                type: array
                items:
                  description: PerformanceResult represents the result of a performance
                    test
                  type: object
                  properties:
                    mesh:
                      type: string
                      x-go-name: Mesh
                    meshery_id:
                      type: array
                      title: UUID is an array type to represent the value of a UUID,
                        as defined in RFC-4122.
                      items:
                        type: integer
                        format: uint8
                      x-go-package: github.com/gofrs/uuid
                    name:
                      type: string
                      x-go-name: Name
                    performance_profile:
                      type: array
                      title: UUID is an array type to represent the value of a UUID,
                        as defined in RFC-4122.
                      items:
                        type: integer
                        format: uint8
                      x-go-package: github.com/gofrs/uuid
                    runner_results:
                      type: object
                      properties:
                        ActualDuration:
                          type: integer
                          format: uint64
                          x-go-name: Duration
                        ActualQPS:
                          type: number
                          format: double
                          x-go-name: QPS
                        DurationHistogram:
                          type: object
                          properties:
                            Avg:
                              type: number
                              format: double
                              x-go-name: Average
                            Max:
                              type: number
                              format: double
                            Min:
                              type: number
                              format: double
                            Percentiles:
                              type: array
                              items:
                                type: object
                                properties:
                                  Percentile:
                                    type: number
                                    format: double
                                  Value:
                                    type: number
                                    format: double
                        StartTime:
                          type: string
                          format: date-time
                        URL:
                          type: string
                        load-generator:
                          type: string
                          x-go-name: LoadGenerator
                      x-go-package: github.com/layer5io/meshery/models
                    server_board_config:
                      type: object
                      x-go-name: ServerBoardConfig
                    server_metrics:
                      type: object
                      x-go-name: ServerMatrics
                    test_start_time:
                      type: string
                      format: date-time
                      x-go-name: TestStartTime
                    user_id:
                      type: array
                      title: UUID is an array type to represent the value of a UUID,
                        as defined in RFC-4122.
                      items:
                        type: integer
                        format: uint8
                      x-go-package: github.com/gofrs/uuid
                  x-go-package: github.com/layer5io/meshery/models
                x-go-name: Results
              total_count:
                type: integer
                format: uint64
                x-go-name: TotalCount
            x-go-package: github.com/layer5io/meshery/models
  /api/user/performance/profiles/{id}:
    get:
      description: Returns single performance profile with the given id
      tags:
      - PerformanceAPI
      summary: Handle GET requests for performance results of a profile
      operationId: idGetSinglePerformanceProfile
      parameters:
      - type: string
        format: uuid
        x-go-name: ID
        description: id for a specific
        name: id
        in: path
        required: true
      responses:
        "200":
          description: Returns a single performance profile
          schema:
            description: |-
              PerformanceProfile represents the performance profile that needs
              to be saved
            type: object
            properties:
              concurrent_request:
                type: integer
                format: int64
                x-go-name: ConcurrentRequest
              content_type:
                type: string
                x-go-name: ContentType
              created_at:
                description: |-
                  +protobuf.options.marshal=false
                  +protobuf.as=Timestamp
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                type: object
                title: |-
                  Time is a wrapper around time.Time which supports correct
                  marshaling to YAML and JSON.  Wrappers are provided for many
                  of the factory methods that the time package offers.
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
              duration:
                type: string
                x-go-name: Duration
              endpoints:
                type: array
                title: StringArray represents a one-dimensional array of the PostgreSQL
                  character types.
                items:
                  type: string
                x-go-package: github.com/lib/pq
              id:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              last_run:
                description: |-
                  +protobuf.options.marshal=false
                  +protobuf.as=Timestamp
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                type: object
                title: |-
                  Time is a wrapper around time.Time which supports correct
                  marshaling to YAML and JSON.  Wrappers are provided for many
                  of the factory methods that the time package offers.
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
              load_generators:
                type: array
                title: StringArray represents a one-dimensional array of the PostgreSQL
                  character types.
                items:
                  type: string
                x-go-package: github.com/lib/pq
              name:
                type: string
                x-go-name: Name
              qps:
                type: integer
                format: int64
                x-go-name: QPS
              request_body:
                type: string
                x-go-name: RequestBody
              request_cookies:
                type: string
                x-go-name: RequestCookies
              request_headers:
                type: string
                x-go-name: RequestHeaders
              schedule:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              service_mesh:
                type: string
                x-go-name: ServiceMesh
              total_results:
                type: integer
                format: int64
                x-go-name: TotalResults
              updated_at:
                description: |-
                  +protobuf.options.marshal=false
                  +protobuf.as=Timestamp
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                type: object
                title: |-
                  Time is a wrapper around time.Time which supports correct
                  marshaling to YAML and JSON.  Wrappers are provided for many
                  of the factory methods that the time package offers.
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
            x-go-package: github.com/layer5io/meshery/models
    delete:
      description: Deletes a performance profile with the given id
      tags:
      - PerformanceProfile
      summary: Handle Delete requests for performance profiles
      operationId: idDeletePerformanceProfile
      parameters:
      - type: string
        format: uuid
        x-go-name: ID
        description: id for a specific
        name: id
        in: path
        required: true
      responses:
        "200":
          description: ""
  /api/user/performance/profiles/{id}/results:
    get:
      description: Fetchs pages of results from Remote Provider for the given id
      tags:
      - PerformanceAPI
      summary: Handle GET request for results of a profile
      operationId: idGETProfileResults
      parameters:
      - type: string
        format: uuid
        x-go-name: ID
        description: id for a specific
        name: id
        in: path
        required: true
      responses:
        "200":
          description: Returns all performance results
          schema:
            description: PerformanceResultsAPIResponse response retruned by performance
              endpoint on meshery server
            type: object
            properties:
              page:
                type: integer
                format: uint64
                x-go-name: Page
              page_size:
                type: integer
                format: uint64
                x-go-name: PageSize
              results:
                type: array
                items:
                  description: PerformanceResult represents the result of a performance
                    test
                  type: object
                  properties:
                    mesh:
                      type: string
                      x-go-name: Mesh
                    meshery_id:
                      type: array
                      title: UUID is an array type to represent the value of a UUID,
                        as defined in RFC-4122.
                      items:
                        type: integer
                        format: uint8
                      x-go-package: github.com/gofrs/uuid
                    name:
                      type: string
                      x-go-name: Name
                    performance_profile:
                      type: array
                      title: UUID is an array type to represent the value of a UUID,
                        as defined in RFC-4122.
                      items:
                        type: integer
                        format: uint8
                      x-go-package: github.com/gofrs/uuid
                    runner_results:
                      type: object
                      properties:
                        ActualDuration:
                          type: integer
                          format: uint64
                          x-go-name: Duration
                        ActualQPS:
                          type: number
                          format: double
                          x-go-name: QPS
                        DurationHistogram:
                          type: object
                          properties:
                            Avg:
                              type: number
                              format: double
                              x-go-name: Average
                            Max:
                              type: number
                              format: double
                            Min:
                              type: number
                              format: double
                            Percentiles:
                              type: array
                              items:
                                type: object
                                properties:
                                  Percentile:
                                    type: number
                                    format: double
                                  Value:
                                    type: number
                                    format: double
                        StartTime:
                          type: string
                          format: date-time
                        URL:
                          type: string
                        load-generator:
                          type: string
                          x-go-name: LoadGenerator
                      x-go-package: github.com/layer5io/meshery/models
                    server_board_config:
                      type: object
                      x-go-name: ServerBoardConfig
                    server_metrics:
                      type: object
                      x-go-name: ServerMatrics
                    test_start_time:
                      type: string
                      format: date-time
                      x-go-name: TestStartTime
                    user_id:
                      type: array
                      title: UUID is an array type to represent the value of a UUID,
                        as defined in RFC-4122.
                      items:
                        type: integer
                        format: uint8
                      x-go-package: github.com/gofrs/uuid
                  x-go-package: github.com/layer5io/meshery/models
                x-go-name: Results
              total_count:
                type: integer
                format: uint64
                x-go-name: TotalCount
            x-go-package: github.com/layer5io/meshery/models
  /api/user/performance/profiles/{id}/run:
    get:
      description: Runs the load test with the given parameters
      tags:
      - PerformanceAPI
      summary: Handle GET request to run a performance test
      operationId: idRunPerformanceTest
      parameters:
      - type: object
        x-go-package: github.com/layer5io/meshery/models
        description: PerformanceTestParameters contains paramters to run a performance
          test
        name: Body
        in: query
      responses:
        "200":
          description: ""
definitions:
  Alert:
    type: object
    properties:
      conditions:
        type: array
        items:
          type: object
          properties:
            evaluator:
              type: object
              properties:
                params:
                  type: array
                  items:
                    type: number
                    format: double
                  x-go-name: Params
                type:
                  type: string
                  x-go-name: Type
              x-go-package: github.com/grafana-tools/sdk
            operator:
              type: object
              properties:
                type:
                  type: string
                  x-go-name: Type
              x-go-package: github.com/grafana-tools/sdk
            query:
              type: object
              properties:
                params:
                  type: array
                  items:
                    type: string
                  x-go-name: Params
              x-go-package: github.com/grafana-tools/sdk
            reducer:
              type: object
              properties:
                params:
                  type: array
                  items:
                    type: string
                  x-go-name: Params
                type:
                  type: string
                  x-go-name: Type
              x-go-package: github.com/grafana-tools/sdk
            type:
              type: string
              x-go-name: Type
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: Conditions
      executionErrorState:
        type: string
        x-go-name: ExecutionErrorState
      for:
        type: string
        x-go-name: For
      frequency:
        type: string
        x-go-name: Frequency
      handler:
        type: integer
        format: int64
        x-go-name: Handler
      message:
        type: string
        x-go-name: Message
      name:
        type: string
        x-go-name: Name
      noDataState:
        type: string
        x-go-name: NoDataState
      notifications:
        type: array
        items:
          description: |-
            AlertNotification as described in the doc
            https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/
          type: object
          properties:
            disableResolveMessage:
              type: boolean
              x-go-name: DisableResolveMessage
            frequency:
              type: string
              x-go-name: Frequency
            id:
              type: integer
              format: int64
              x-go-name: ID
            isDefault:
              type: boolean
              x-go-name: IsDefault
            name:
              type: string
              x-go-name: Name
            sendReminder:
              type: boolean
              x-go-name: SendReminder
            settings:
              type: object
              x-go-name: Settings
            type:
              type: string
              x-go-name: Type
            uid:
              type: string
              x-go-name: UID
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: Notifications
    x-go-package: github.com/grafana-tools/sdk
  AlertCondition:
    type: object
    properties:
      evaluator:
        type: object
        properties:
          params:
            type: array
            items:
              type: number
              format: double
            x-go-name: Params
          type:
            type: string
            x-go-name: Type
        x-go-package: github.com/grafana-tools/sdk
      operator:
        type: object
        properties:
          type:
            type: string
            x-go-name: Type
        x-go-package: github.com/grafana-tools/sdk
      query:
        type: object
        properties:
          params:
            type: array
            items:
              type: string
            x-go-name: Params
        x-go-package: github.com/grafana-tools/sdk
      reducer:
        type: object
        properties:
          params:
            type: array
            items:
              type: string
            x-go-name: Params
          type:
            type: string
            x-go-name: Type
        x-go-package: github.com/grafana-tools/sdk
      type:
        type: string
        x-go-name: Type
    x-go-package: github.com/grafana-tools/sdk
  AlertEvaluator:
    type: object
    properties:
      params:
        type: array
        items:
          type: number
          format: double
        x-go-name: Params
      type:
        type: string
        x-go-name: Type
    x-go-package: github.com/grafana-tools/sdk
  AlertNotification:
    description: |-
      AlertNotification as described in the doc
      https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/
    type: object
    properties:
      disableResolveMessage:
        type: boolean
        x-go-name: DisableResolveMessage
      frequency:
        type: string
        x-go-name: Frequency
      id:
        type: integer
        format: int64
        x-go-name: ID
      isDefault:
        type: boolean
        x-go-name: IsDefault
      name:
        type: string
        x-go-name: Name
      sendReminder:
        type: boolean
        x-go-name: SendReminder
      settings:
        type: object
        x-go-name: Settings
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: UID
    x-go-package: github.com/grafana-tools/sdk
  AlertOperator:
    type: object
    properties:
      type:
        type: string
        x-go-name: Type
    x-go-package: github.com/grafana-tools/sdk
  AlertQuery:
    type: object
    properties:
      params:
        type: array
        items:
          type: string
        x-go-name: Params
    x-go-package: github.com/grafana-tools/sdk
  AlertReducer:
    type: object
    properties:
      params:
        type: array
        items:
          type: string
        x-go-name: Params
      type:
        type: string
        x-go-name: Type
    x-go-package: github.com/grafana-tools/sdk
  AuthenticateOKBody:
    description: AuthenticateOKBody authenticate o k body
    type: object
    required:
    - IdentityToken
    - Status
    properties:
      IdentityToken:
        description: An opaque token used to authenticate a user after a successful
          login
        type: string
      Status:
        description: The status of the authentication
        type: string
    x-go-package: github.com/docker/docker/api/types/registry
  Axis:
    description: for a graph panel
    type: object
    properties:
      format:
        type: string
        x-go-name: Format
      label:
        type: string
        x-go-name: Label
      logBase:
        type: integer
        format: int64
        x-go-name: LogBase
      max:
        type: object
        title: 'FloatString represents special type for json values that could be
          strings or ints: 100 or "100"'
        properties:
          Valid:
            type: boolean
          Value:
            type: number
            format: double
        x-go-package: github.com/grafana-tools/sdk
      min:
        type: object
        title: 'FloatString represents special type for json values that could be
          strings or ints: 100 or "100"'
        properties:
          Valid:
            type: boolean
          Value:
            type: number
            format: double
        x-go-package: github.com/grafana-tools/sdk
      show:
        type: boolean
        x-go-name: Show
    x-go-package: github.com/grafana-tools/sdk
  BoolString:
    type: object
    properties:
      Flag:
        type: boolean
      Value:
        type: string
    x-go-package: github.com/grafana-tools/sdk
  ClientIPConfig:
    type: object
    title: ClientIPConfig represents the configurations of Client IP based session
      affinity.
    properties:
      timeoutSeconds:
        description: |-
          timeoutSeconds specifies the seconds of ClientIP type session sticky time.
          The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
          Default value is 10800(for 3 hours).
          +optional
        type: integer
        format: int32
        x-go-name: TimeoutSeconds
    x-go-package: k8s.io/api/core/v1
  Column:
    description: for a table
    type: object
    properties:
      text:
        type: string
        x-go-name: TextType
      value:
        type: string
        x-go-name: Value
    x-go-package: github.com/grafana-tools/sdk
  ColumnStyle:
    description: for a table
    type: object
    properties:
      alias:
        type: string
        x-go-name: Alias
      colorMode:
        type: string
        x-go-name: ColorMode
      colors:
        type: array
        items:
          type: string
        x-go-name: Colors
      dateFormat:
        type: string
        x-go-name: DateFormat
      decimals:
        type: integer
        format: uint64
        x-go-name: Decimals
      pattern:
        type: string
        x-go-name: Pattern
      thresholds:
        type: array
        items:
          type: string
        x-go-name: Thresholds
      type:
        type: string
        x-go-name: Type
      unit:
        type: string
        x-go-name: Unit
    x-go-package: github.com/grafana-tools/sdk
  ContainerChangeResponseItem:
    description: ContainerChangeResponseItem change item in response to ContainerChanges
      operation
    type: object
    required:
    - Kind
    - Path
    properties:
      Kind:
        description: Kind of change
        type: integer
        format: uint8
      Path:
        description: Path to file that has changed
        type: string
    x-go-package: github.com/docker/docker/api/types/container
  ContainerCreateCreatedBody:
    description: ContainerCreateCreatedBody OK response to ContainerCreate operation
    type: object
    required:
    - Id
    - Warnings
    properties:
      Id:
        description: The ID of the created container
        type: string
        x-go-name: ID
      Warnings:
        description: Warnings encountered when creating the container
        type: array
        items:
          type: string
    x-go-package: github.com/docker/docker/api/types/container
  ContainerTopOKBody:
    description: ContainerTopOKBody OK response to ContainerTop operation
    type: object
    required:
    - Processes
    - Titles
    properties:
      Processes:
        description: Each process running in the container, where each is process
          is an array of values corresponding to the titles
        type: array
        items:
          type: array
          items:
            type: string
      Titles:
        description: The ps column titles
        type: array
        items:
          type: string
    x-go-package: github.com/docker/docker/api/types/container
  ContainerUpdateOKBody:
    description: ContainerUpdateOKBody OK response to ContainerUpdate operation
    type: object
    required:
    - Warnings
    properties:
      Warnings:
        description: warnings
        type: array
        items:
          type: string
    x-go-package: github.com/docker/docker/api/types/container
  ContainerWaitOKBody:
    description: ContainerWaitOKBody OK response to ContainerWait operation
    type: object
    required:
    - Error
    - StatusCode
    properties:
      Error:
        description: ContainerWaitOKBodyError container waiting error, if any
        type: object
        properties:
          Message:
            description: Details of an error
            type: string
        x-go-package: github.com/docker/docker/api/types/container
      StatusCode:
        description: Exit code of the container
        type: integer
        format: int64
    x-go-package: github.com/docker/docker/api/types/container
  ContainerWaitOKBodyError:
    description: ContainerWaitOKBodyError container waiting error, if any
    type: object
    properties:
      Message:
        description: Details of an error
        type: string
    x-go-package: github.com/docker/docker/api/types/container
  ErrorResponse:
    type: object
    title: ErrorResponse Represents an error.
    required:
    - message
    properties:
      message:
        description: The error message.
        type: string
        x-go-name: Message
    x-go-package: github.com/docker/docker/api/types
  FieldsV1:
    description: |-
      Each key is either a '.' representing the field itself, and will always map to an empty set,
      or a string representing a sub-field or item. The string will follow one of these four formats:
      'f:<name>', where <name> is the name of a field in a struct, or key in a map
      'v:<value>', where <value> is the exact json formatted value of a list item
      'i:<index>', where <index> is position of a item in a list
      'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values
      If a key maps to an empty Fields value, the field that key represents is part of the set.

      The exact format is defined in sigs.k8s.io/structured-merge-diff
    type: object
    title: FieldsV1 stores a set of fields in a data structure like a Trie, in JSON
      format.
    x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
  FloatString:
    type: object
    title: 'FloatString represents special type for json values that could be strings
      or ints: 100 or "100"'
    properties:
      Valid:
        type: boolean
      Value:
        type: number
        format: double
    x-go-package: github.com/grafana-tools/sdk
  Gauge:
    description: for a singlestat
    type: object
    properties:
      maxValue:
        type: number
        format: float
        x-go-name: MaxValue
      minValue:
        type: number
        format: float
        x-go-name: MinValue
      show:
        type: boolean
        x-go-name: Show
      thresholdLabels:
        type: boolean
        x-go-name: ThresholdLabels
      thresholdMarkers:
        type: boolean
        x-go-name: ThresholdMarkers
    x-go-package: github.com/grafana-tools/sdk
  Grafana:
    description: Grafana represents the Grafana session config
    type: object
    properties:
      grafanaAPIKey:
        type: string
        x-go-name: GrafanaAPIKey
      grafanaURL:
        type: string
        x-go-name: GrafanaURL
      selectedBoardsConfigs:
        description: GrafanaBoardSearch string          `json:"grafanaBoardSearch,omitempty"`
        type: array
        items:
          description: SelectedGrafanaConfig represents the selected boards, panels,
            and template variables
          type: object
          properties:
            board:
              description: GrafanaBoard represents a Grafana board
              type: object
              properties:
                org_id:
                  type: integer
                  format: uint64
                  x-go-name: OrgID
                panels:
                  type: array
                  items:
                    $ref: '#/definitions/Panel'
                  x-go-name: Panels
                slug:
                  type: string
                  x-go-name: Slug
                template_vars:
                  type: array
                  items:
                    description: GrafanaTemplateVars represents template variables
                      in a bboard
                    type: object
                    properties:
                      datasource:
                        description: GrafanaDataSource represents a Grafana datasource
                          like Prometheus
                        type: object
                        properties:
                          id:
                            type: integer
                            format: uint64
                            x-go-name: ID
                          name:
                            type: string
                            x-go-name: Name
                        x-go-package: github.com/layer5io/meshery/models
                      hide:
                        type: integer
                        format: uint8
                        x-go-name: Hide
                      name:
                        type: string
                        x-go-name: Name
                      query:
                        type: string
                        x-go-name: Query
                      value:
                        type: object
                        x-go-name: Value
                    x-go-package: github.com/layer5io/meshery/models
                  x-go-name: TemplateVars
                title:
                  type: string
                  x-go-name: Title
                uid:
                  type: string
                  x-go-name: UID
                uri:
                  type: string
                  x-go-name: URI
              x-go-package: github.com/layer5io/meshery/models
            panels:
              type: array
              items:
                $ref: '#/definitions/Panel'
              x-go-name: GrafanaPanels
            templateVars:
              type: array
              items:
                type: string
              x-go-name: SelectedTemplateVars
          x-go-package: github.com/layer5io/meshery/models
        x-go-name: GrafanaBoards
    x-go-package: github.com/layer5io/meshery/models
  GrafanaBoard:
    description: GrafanaBoard represents a Grafana board
    type: object
    properties:
      org_id:
        type: integer
        format: uint64
        x-go-name: OrgID
      panels:
        type: array
        items:
          $ref: '#/definitions/Panel'
        x-go-name: Panels
      slug:
        type: string
        x-go-name: Slug
      template_vars:
        type: array
        items:
          description: GrafanaTemplateVars represents template variables in a bboard
          type: object
          properties:
            datasource:
              description: GrafanaDataSource represents a Grafana datasource like
                Prometheus
              type: object
              properties:
                id:
                  type: integer
                  format: uint64
                  x-go-name: ID
                name:
                  type: string
                  x-go-name: Name
              x-go-package: github.com/layer5io/meshery/models
            hide:
              type: integer
              format: uint8
              x-go-name: Hide
            name:
              type: string
              x-go-name: Name
            query:
              type: string
              x-go-name: Query
            value:
              type: object
              x-go-name: Value
          x-go-package: github.com/layer5io/meshery/models
        x-go-name: TemplateVars
      title:
        type: string
        x-go-name: Title
      uid:
        type: string
        x-go-name: UID
      uri:
        type: string
        x-go-name: URI
    x-go-package: github.com/layer5io/meshery/models
  GrafanaConfigParams:
    description: Parameters to save Grafana configuration
    type: object
    properties:
      grafanaAPIKey:
        type: string
        x-go-name: GrafanaAPIKey
      grafanaURL:
        type: string
        x-go-name: GrafanaURL
    x-go-package: github.com/layer5io/meshery/models
  GrafanaDataSource:
    description: GrafanaDataSource represents a Grafana datasource like Prometheus
    type: object
    properties:
      id:
        type: integer
        format: uint64
        x-go-name: ID
      name:
        type: string
        x-go-name: Name
    x-go-package: github.com/layer5io/meshery/models
  GrafanaTemplateVars:
    description: GrafanaTemplateVars represents template variables in a bboard
    type: object
    properties:
      datasource:
        description: GrafanaDataSource represents a Grafana datasource like Prometheus
        type: object
        properties:
          id:
            type: integer
            format: uint64
            x-go-name: ID
          name:
            type: string
            x-go-name: Name
        x-go-package: github.com/layer5io/meshery/models
      hide:
        type: integer
        format: uint8
        x-go-name: Hide
      name:
        type: string
        x-go-name: Name
      query:
        type: string
        x-go-name: Query
      value:
        type: object
        x-go-name: Value
    x-go-package: github.com/layer5io/meshery/models
  GraphDriverData:
    type: object
    title: GraphDriverData Information about a container's graph driver.
    required:
    - Data
    - Name
    properties:
      Data:
        description: data
        type: object
        additionalProperties:
          type: string
      Name:
        description: name
        type: string
    x-go-package: github.com/docker/docker/api/types
  HistoryResponseItem:
    description: HistoryResponseItem individual image layer information in response
      to ImageHistory operation
    type: object
    required:
    - Comment
    - Created
    - CreatedBy
    - Id
    - Size
    - Tags
    properties:
      Comment:
        description: comment
        type: string
      Created:
        description: created
        type: integer
        format: int64
      CreatedBy:
        description: created by
        type: string
      Id:
        description: Id
        type: string
        x-go-name: ID
      Size:
        description: size
        type: integer
        format: int64
      Tags:
        description: tags
        type: array
        items:
          type: string
    x-go-package: github.com/docker/docker/api/types/image
  IPFamily:
    description: |-
      IPFamily represents the IP Family (IPv4 or IPv6). This type is used
      to express the family of an IP expressed by a type (i.e. service.Spec.IPFamily)
    type: string
    x-go-package: k8s.io/api/core/v1
  IdResponse:
    description: IDResponse Response to an API call that returns just an Id
    type: object
    required:
    - Id
    properties:
      Id:
        description: The id of the newly created object.
        type: string
        x-go-name: ID
    x-go-name: IDResponse
    x-go-package: github.com/docker/docker/api/types
  ImageDeleteResponseItem:
    description: ImageDeleteResponseItem image delete response item
    type: object
    properties:
      Deleted:
        description: The image ID of an image that was deleted
        type: string
      Untagged:
        description: The image ID of an image that was untagged
        type: string
    x-go-package: github.com/docker/docker/api/types
  ImageSummary:
    description: ImageSummary image summary
    type: object
    required:
    - Containers
    - Created
    - Id
    - Labels
    - ParentId
    - RepoDigests
    - RepoTags
    - SharedSize
    - Size
    - VirtualSize
    properties:
      Containers:
        description: containers
        type: integer
        format: int64
      Created:
        description: created
        type: integer
        format: int64
      Id:
        description: Id
        type: string
        x-go-name: ID
      Labels:
        description: labels
        type: object
        additionalProperties:
          type: string
      ParentId:
        description: parent Id
        type: string
        x-go-name: ParentID
      RepoDigests:
        description: repo digests
        type: array
        items:
          type: string
      RepoTags:
        description: repo tags
        type: array
        items:
          type: string
      SharedSize:
        description: shared size
        type: integer
        format: int64
      Size:
        description: size
        type: integer
        format: int64
      VirtualSize:
        description: virtual size
        type: integer
        format: int64
    x-go-package: github.com/docker/docker/api/types
  IntOrString:
    description: |-
      +protobuf=true
      +protobuf.options.(gogoproto.goproto_stringer)=false
      +k8s:openapi-gen=true
    type: object
    title: |-
      IntOrString is a type that can hold an int32 or a string.  When used in
      JSON or YAML marshalling and unmarshalling, it produces or consumes the
      inner type.  This allows you to have, for example, a JSON field that can
      accept a name or number.
      TODO: Rename to Int32OrString
    properties:
      IntVal:
        type: integer
        format: int32
      StrVal:
        type: string
      Type:
        type: integer
        format: int64
        title: Type represents the stored type of IntOrString.
        x-go-package: k8s.io/apimachinery/pkg/util/intstr
    x-go-package: k8s.io/apimachinery/pkg/util/intstr
  IntString:
    type: object
    title: 'IntString represents special type for json values that could be strings
      or ints: 100 or "100"'
    properties:
      Valid:
        type: boolean
      Value:
        type: integer
        format: int64
    x-go-package: github.com/grafana-tools/sdk
  Legend:
    description: for a graph panel
    type: object
    properties:
      alignAsTable:
        type: boolean
        x-go-name: AlignAsTable
      avg:
        type: boolean
        x-go-name: Avg
      current:
        type: boolean
        x-go-name: Current
      hideEmpty:
        type: boolean
        x-go-name: HideEmpty
      hideZero:
        type: boolean
        x-go-name: HideZero
      max:
        type: boolean
        x-go-name: Max
      min:
        type: boolean
        x-go-name: Min
      rightSide:
        type: boolean
        x-go-name: RightSide
      show:
        type: boolean
        x-go-name: Show
      sideWidth:
        type: integer
        format: uint64
        x-go-name: SideWidth
      total:
        type: boolean
        x-go-name: Total
      values:
        type: boolean
        x-go-name: Values
    x-go-package: github.com/grafana-tools/sdk
  LoadBalancerIngress:
    description: traffic intended for the service should be sent to an ingress point.
    type: object
    title: 'LoadBalancerIngress represents the status of a load-balancer ingress point:'
    properties:
      hostname:
        description: |-
          Hostname is set for load-balancer ingress points that are DNS based
          (typically AWS load-balancers)
          +optional
        type: string
        x-go-name: Hostname
      ip:
        description: |-
          IP is set for load-balancer ingress points that are IP based
          (typically GCE or OpenStack load-balancers)
          +optional
        type: string
        x-go-name: IP
    x-go-package: k8s.io/api/core/v1
  LoadBalancerStatus:
    type: object
    title: LoadBalancerStatus represents the status of a load-balancer.
    properties:
      ingress:
        description: |-
          Ingress is a list containing ingress points for the load-balancer.
          Traffic intended for the service should be sent to these ingress points.
          +optional
        type: array
        items:
          description: traffic intended for the service should be sent to an ingress
            point.
          type: object
          title: 'LoadBalancerIngress represents the status of a load-balancer ingress
            point:'
          properties:
            hostname:
              description: |-
                Hostname is set for load-balancer ingress points that are DNS based
                (typically AWS load-balancers)
                +optional
              type: string
              x-go-name: Hostname
            ip:
              description: |-
                IP is set for load-balancer ingress points that are IP based
                (typically GCE or OpenStack load-balancers)
                +optional
              type: string
              x-go-name: IP
          x-go-package: k8s.io/api/core/v1
        x-go-name: Ingress
    x-go-package: k8s.io/api/core/v1
  ManagedFieldsEntry:
    description: |-
      ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource
      that the fieldset applies to.
    type: object
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
        x-go-name: APIVersion
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
        x-go-name: FieldsType
      fieldsV1:
        description: |-
          Each key is either a '.' representing the field itself, and will always map to an empty set,
          or a string representing a sub-field or item. The string will follow one of these four formats:
          'f:<name>', where <name> is the name of a field in a struct, or key in a map
          'v:<value>', where <value> is the exact json formatted value of a list item
          'i:<index>', where <index> is position of a item in a list
          'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values
          If a key maps to an empty Fields value, the field that key represents is part of the set.

          The exact format is defined in sigs.k8s.io/structured-merge-diff
        type: object
        title: FieldsV1 stores a set of fields in a data structure like a Trie, in
          JSON format.
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
        x-go-name: Manager
      operation:
        type: string
        title: ManagedFieldsOperationType is the type of operation which lead to a
          ManagedFieldsEntry being created.
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
      time:
        description: |-
          +protobuf.options.marshal=false
          +protobuf.as=Timestamp
          +protobuf.options.(gogoproto.goproto_stringer)=false
        type: object
        title: |-
          Time is a wrapper around time.Time which supports correct
          marshaling to YAML and JSON.  Wrappers are provided for many
          of the factory methods that the time package offers.
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
    x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
  ManagedFieldsOperationType:
    type: string
    title: ManagedFieldsOperationType is the type of operation which lead to a ManagedFieldsEntry
      being created.
    x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
  Map:
    description: |-
      It implements native SQL driver interfaces and hence can
      be used for SQL json or jsonb types as a drop in replacement
      of golang native maps
    type: object
    title: Map type is an alias for map[string]interface{}
    additionalProperties:
      type: object
    x-go-package: github.com/layer5io/meshery/internal/sql
  MapType:
    type: object
    properties:
      name:
        type: string
        x-go-name: Name
      value:
        type: integer
        format: int64
        x-go-name: Value
    x-go-package: github.com/grafana-tools/sdk
  MesheryPattern:
    description: MesheryPattern represents the patterns that needs to be saved
    type: object
    properties:
      created_at:
        type: string
        format: date-time
        x-go-name: CreatedAt
      id:
        type: array
        title: UUID is an array type to represent the value of a UUID, as defined
          in RFC-4122.
        items:
          type: integer
          format: uint8
        x-go-package: github.com/gofrs/uuid
      location:
        description: |-
          It implements native SQL driver interfaces and hence can
          be used for SQL json or jsonb types as a drop in replacement
          of golang native maps
        type: object
        title: Map type is an alias for map[string]interface{}
        additionalProperties:
          type: object
        x-go-package: github.com/layer5io/meshery/internal/sql
      name:
        type: string
        x-go-name: Name
      pattern_file:
        type: string
        x-go-name: PatternFile
      updated_at:
        type: string
        format: date-time
        x-go-name: UpdatedAt
      user_id:
        description: |-
          Meshery doesn't have the user id fields
          but the remote provider is allowed to provide one
        type: string
        x-go-name: UserID
    x-go-package: github.com/layer5io/meshery/models
  OwnerReference:
    description: |-
      OwnerReference contains enough information to let you identify an owning
      object. An owning object must be in the same namespace as the dependent, or
      be cluster-scoped, so there is no namespace field.
    type: object
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
        x-go-name: APIVersion
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
        x-go-name: BlockOwnerDeletion
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
        x-go-name: Controller
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
        x-go-name: Kind
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
        x-go-name: Name
      uid:
        description: |-
          UID is a type that holds unique ID values, including UUIDs.  Because we
          don't ONLY use UUIDs, this is an alias to string.  Being a type captures
          intent and helps make sure that UIDs and names do not get conflated.
        type: string
        x-go-package: k8s.io/apimachinery/pkg/types
    x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
  Panel:
    type: object
    properties:
      Panels:
        type: array
        items:
          type: object
          properties:
            Panels:
              type: array
              items:
                $ref: '#/definitions/Panel'
            alert:
              type: object
              properties:
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      evaluator:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: number
                              format: double
                            x-go-name: Params
                          type:
                            type: string
                            x-go-name: Type
                        x-go-package: github.com/grafana-tools/sdk
                      operator:
                        type: object
                        properties:
                          type:
                            type: string
                            x-go-name: Type
                        x-go-package: github.com/grafana-tools/sdk
                      query:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: string
                            x-go-name: Params
                        x-go-package: github.com/grafana-tools/sdk
                      reducer:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: string
                            x-go-name: Params
                          type:
                            type: string
                            x-go-name: Type
                        x-go-package: github.com/grafana-tools/sdk
                      type:
                        type: string
                        x-go-name: Type
                    x-go-package: github.com/grafana-tools/sdk
                  x-go-name: Conditions
                executionErrorState:
                  type: string
                  x-go-name: ExecutionErrorState
                for:
                  type: string
                  x-go-name: For
                frequency:
                  type: string
                  x-go-name: Frequency
                handler:
                  type: integer
                  format: int64
                  x-go-name: Handler
                message:
                  type: string
                  x-go-name: Message
                name:
                  type: string
                  x-go-name: Name
                noDataState:
                  type: string
                  x-go-name: NoDataState
                notifications:
                  type: array
                  items:
                    description: |-
                      AlertNotification as described in the doc
                      https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/
                    type: object
                    properties:
                      disableResolveMessage:
                        type: boolean
                        x-go-name: DisableResolveMessage
                      frequency:
                        type: string
                        x-go-name: Frequency
                      id:
                        type: integer
                        format: int64
                        x-go-name: ID
                      isDefault:
                        type: boolean
                        x-go-name: IsDefault
                      name:
                        type: string
                        x-go-name: Name
                      sendReminder:
                        type: boolean
                        x-go-name: SendReminder
                      settings:
                        type: object
                        x-go-name: Settings
                      type:
                        type: string
                        x-go-name: Type
                      uid:
                        type: string
                        x-go-name: UID
                    x-go-package: github.com/grafana-tools/sdk
                  x-go-name: Notifications
              x-go-package: github.com/grafana-tools/sdk
            aliasColors:
              type: object
              x-go-name: AliasColors
            bars:
              type: boolean
              x-go-name: Bars
            colorBackground:
              type: boolean
              x-go-name: ColorBackground
            colorValue:
              type: boolean
              x-go-name: ColorValue
            colors:
              type: array
              items:
                type: string
              x-go-name: Colors
            columns:
              type: array
              items:
                description: for a table
                type: object
                properties:
                  text:
                    type: string
                    x-go-name: TextType
                  value:
                    type: string
                    x-go-name: Value
                x-go-package: github.com/grafana-tools/sdk
              x-go-name: Columns
            content:
              type: string
              x-go-name: Content
            dashLength:
              type: integer
              format: uint64
              x-go-name: DashLength
            dashboardTags:
              type: array
              items:
                type: string
              x-go-name: DashboardTags
            dashes:
              type: boolean
              x-go-name: Dashes
            datasource:
              type: string
              x-go-name: Datasource
            decimals:
              type: integer
              format: int64
              x-go-name: Decimals
            description:
              type: string
              x-go-name: Description
            editable:
              type: boolean
              x-go-name: Editable
            error:
              type: boolean
              x-go-name: Error
            fill:
              type: integer
              format: int64
              x-go-name: Fill
            format:
              type: string
              x-go-name: Format
            gauge:
              description: for a singlestat
              type: object
              properties:
                maxValue:
                  type: number
                  format: float
                  x-go-name: MaxValue
                minValue:
                  type: number
                  format: float
                  x-go-name: MinValue
                show:
                  type: boolean
                  x-go-name: Show
                thresholdLabels:
                  type: boolean
                  x-go-name: ThresholdLabels
                thresholdMarkers:
                  type: boolean
                  x-go-name: ThresholdMarkers
              x-go-package: github.com/grafana-tools/sdk
            gridPos:
              type: object
              properties:
                h:
                  type: integer
                  format: int64
                  x-go-name: H
                w:
                  type: integer
                  format: int64
                  x-go-name: W
                x:
                  type: integer
                  format: int64
                  x-go-name: X
                "y":
                  type: integer
                  format: int64
                  x-go-name: "Y"
              x-go-name: GridPos
            height:
              type: string
              x-go-name: Height
            hideTimeOverride:
              type: boolean
              x-go-name: HideTimeOverride
            id:
              type: integer
              format: uint64
              x-go-name: ID
            isNew:
              type: boolean
              x-go-name: IsNew
            leftYAxisLabel:
              type: string
              x-go-name: LeftYAxisLabel
            legend:
              description: for a graph panel
              type: object
              properties:
                alignAsTable:
                  type: boolean
                  x-go-name: AlignAsTable
                avg:
                  type: boolean
                  x-go-name: Avg
                current:
                  type: boolean
                  x-go-name: Current
                hideEmpty:
                  type: boolean
                  x-go-name: HideEmpty
                hideZero:
                  type: boolean
                  x-go-name: HideZero
                max:
                  type: boolean
                  x-go-name: Max
                min:
                  type: boolean
                  x-go-name: Min
                rightSide:
                  type: boolean
                  x-go-name: RightSide
                show:
                  type: boolean
                  x-go-name: Show
                sideWidth:
                  type: integer
                  format: uint64
                  x-go-name: SideWidth
                total:
                  type: boolean
                  x-go-name: Total
                values:
                  type: boolean
                  x-go-name: Values
              x-go-package: github.com/grafana-tools/sdk
            limit:
              type: integer
              format: int64
              x-go-name: Limit
            lines:
              type: boolean
              x-go-name: Lines
            linewidth:
              type: integer
              format: uint64
              x-go-name: Linewidth
            links:
              type: array
              items:
                description: link represents link to another dashboard or external
                  weblink
                type: object
                properties:
                  asDropdown:
                    type: boolean
                    x-go-name: AsDropdown
                  dashUri:
                    type: string
                    x-go-name: DashURI
                  dashboard:
                    type: string
                    x-go-name: Dashboard
                  icon:
                    type: string
                    x-go-name: Icon
                  includeVars:
                    type: boolean
                    x-go-name: IncludeVars
                  keepTime:
                    type: boolean
                    x-go-name: KeepTime
                  params:
                    type: string
                    x-go-name: Params
                  tags:
                    type: array
                    items:
                      type: string
                    x-go-name: Tags
                  targetBlank:
                    type: boolean
                    x-go-name: TargetBlank
                  title:
                    type: string
                    x-go-name: Title
                  tooltip:
                    type: string
                    x-go-name: Tooltip
                  type:
                    type: string
                    x-go-name: Type
                  url:
                    type: string
                    x-go-name: URL
                x-go-package: github.com/grafana-tools/sdk
              x-go-name: Links
            mappingType:
              type: integer
              format: uint64
              x-go-name: MappingType
            mappingTypes:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    x-go-name: Name
                  value:
                    type: integer
                    format: int64
                    x-go-name: Value
                x-go-package: github.com/grafana-tools/sdk
              x-go-name: MappingTypes
            maxDataPoints:
              type: object
              title: 'IntString represents special type for json values that could
                be strings or ints: 100 or "100"'
              properties:
                Valid:
                  type: boolean
                Value:
                  type: integer
                  format: int64
              x-go-package: github.com/grafana-tools/sdk
            minSpan:
              type: number
              format: float
              x-go-name: MinSpan
            mode:
              type: string
              x-go-name: Mode
            nameFilter:
              type: string
              x-go-name: NameFilter
            nullPointMode:
              type: string
              x-go-name: NullPointMode
            onlyAlertsOnDashboard:
              type: boolean
              x-go-name: OnlyAlertsOnDashboard
            pageSize:
              type: integer
              format: uint64
              x-go-name: PageSize
            percentage:
              type: boolean
              x-go-name: Percentage
            pointradius:
              type: integer
              format: int64
              x-go-name: Pointradius
            points:
              type: boolean
              x-go-name: Points
            postfix:
              type: string
              x-go-name: Postfix
            postfixFontSize:
              type: string
              x-go-name: PostfixFontSize
            prefix:
              type: string
              x-go-name: Prefix
            prefixFontSize:
              type: string
              x-go-name: PrefixFontSize
            query:
              type: string
              x-go-name: Query
            rangeMaps:
              type: array
              items:
                type: object
                properties:
                  from:
                    type: string
                    x-go-name: From
                  text:
                    type: string
                    x-go-name: Text
                  to:
                    type: string
                    x-go-name: To
                x-go-package: github.com/grafana-tools/sdk
              x-go-name: RangeMaps
            renderer:
              type: string
              x-go-name: Renderer
            repeat:
              type: string
              x-go-name: Repeat
            repeatPanelId:
              description: RepeatIteration *int64   `json:"repeatIteration,omitempty"`
              type: integer
              format: uint64
              x-go-name: RepeatPanelID
            rightYAxisLabel:
              type: string
              x-go-name: RightYAxisLabel
            scopedVars:
              type: object
              additionalProperties:
                type: object
                properties:
                  selected:
                    type: boolean
                    x-go-name: Selected
                  text:
                    type: string
                    x-go-name: Text
                  value:
                    type: string
                    x-go-name: Value
              x-go-name: ScopedVars
            scroll:
              type: boolean
              x-go-name: Scroll
            seriesOverrides:
              type: array
              items:
                description: for a graph panel
                type: object
                properties:
                  alias:
                    type: string
                    x-go-name: Alias
                  bars:
                    type: boolean
                    x-go-name: Bars
                  color:
                    type: string
                    x-go-name: Color
                  fill:
                    type: integer
                    format: int64
                    x-go-name: Fill
                  fillBelowTo:
                    type: string
                    x-go-name: FillBelowTo
                  legend:
                    type: boolean
                    x-go-name: Legend
                  lines:
                    type: boolean
                    x-go-name: Lines
                  nullPointMode:
                    type: string
                    x-go-name: NullPointMode
                  stack:
                    type: object
                    properties:
                      Flag:
                        type: boolean
                      Value:
                        type: string
                    x-go-package: github.com/grafana-tools/sdk
                  transform:
                    type: string
                    x-go-name: Transform
                  yaxis:
                    type: integer
                    format: int64
                    x-go-name: YAxis
                  zindex:
                    type: integer
                    format: int64
                    x-go-name: ZIndex
                x-go-package: github.com/grafana-tools/sdk
              x-go-name: SeriesOverrides
            show:
              type: string
              x-go-name: Show
            showHeader:
              type: boolean
              x-go-name: ShowHeader
            sort:
              description: for a graph panel
              type: object
              properties:
                col:
                  type: integer
                  format: int64
                  x-go-name: Col
                desc:
                  type: boolean
                  x-go-name: Desc
              x-go-package: github.com/grafana-tools/sdk
            sortOrder:
              type: integer
              format: int64
              x-go-name: SortOrder
            spaceLength:
              type: integer
              format: uint64
              x-go-name: SpaceLength
            span:
              type: number
              format: float
              x-go-name: Span
            sparkline:
              description: for a singlestat
              type: object
              properties:
                fillColor:
                  type: string
                  x-go-name: FillColor
                full:
                  type: boolean
                  x-go-name: Full
                lineColor:
                  type: string
                  x-go-name: LineColor
                show:
                  type: boolean
                  x-go-name: Show
                ymax:
                  type: number
                  format: double
                  x-go-name: YMax
                ymin:
                  type: number
                  format: double
                  x-go-name: YMin
              x-go-package: github.com/grafana-tools/sdk
            stack:
              type: boolean
              x-go-name: Stack
            stateFilter:
              type: array
              items:
                type: string
              x-go-name: StateFilter
            steppedLine:
              type: boolean
              x-go-name: SteppedLine
            styles:
              type: array
              items:
                description: for a table
                type: object
                properties:
                  alias:
                    type: string
                    x-go-name: Alias
                  colorMode:
                    type: string
                    x-go-name: ColorMode
                  colors:
                    type: array
                    items:
                      type: string
                    x-go-name: Colors
                  dateFormat:
                    type: string
                    x-go-name: DateFormat
                  decimals:
                    type: integer
                    format: uint64
                    x-go-name: Decimals
                  pattern:
                    type: string
                    x-go-name: Pattern
                  thresholds:
                    type: array
                    items:
                      type: string
                    x-go-name: Thresholds
                  type:
                    type: string
                    x-go-name: Type
                  unit:
                    type: string
                    x-go-name: Unit
                x-go-package: github.com/grafana-tools/sdk
              x-go-name: Styles
            tags:
              type: array
              items:
                type: string
              x-go-name: Tags
            targets:
              type: array
              items:
                description: for an any panel
                type: object
                properties:
                  alias:
                    type: string
                    x-go-name: Alias
                  bucketAggs:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          x-go-name: Field
                        id:
                          type: string
                          x-go-name: ID
                        settings:
                          type: object
                          properties:
                            interval:
                              type: string
                              x-go-name: Interval
                            min_doc_count:
                              type: integer
                              format: int64
                              x-go-name: MinDocCount
                            order:
                              type: string
                              x-go-name: Order
                            orderBy:
                              type: string
                              x-go-name: OrderBy
                            size:
                              type: string
                              x-go-name: Size
                          x-go-name: Settings
                        type:
                          type: string
                          x-go-name: Type
                    x-go-name: BucketAggs
                  datasource:
                    type: string
                    x-go-name: Datasource
                  dimensions:
                    type: object
                    additionalProperties:
                      type: string
                    x-go-name: Dimensions
                  dsType:
                    description: For Elasticsearch
                    type: string
                    x-go-name: DsType
                  expr:
                    description: For Prometheus
                    type: string
                    x-go-name: Expr
                  format:
                    type: string
                    x-go-name: Format
                  instant:
                    type: boolean
                    x-go-name: Instant
                  interval:
                    type: string
                    x-go-name: Interval
                  intervalFactor:
                    type: integer
                    format: int64
                    x-go-name: IntervalFactor
                  legendFormat:
                    type: string
                    x-go-name: LegendFormat
                  metricName:
                    type: string
                    x-go-name: MetricName
                  metrics:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          x-go-name: Field
                        id:
                          type: string
                          x-go-name: ID
                        type:
                          type: string
                          x-go-name: Type
                    x-go-name: Metrics
                  namespace:
                    description: For CloudWatch
                    type: string
                    x-go-name: Namespace
                  period:
                    type: string
                    x-go-name: Period
                  query:
                    type: string
                    x-go-name: Query
                  rawQuery:
                    type: boolean
                    x-go-name: RawQuery
                  refId:
                    type: string
                    x-go-name: RefID
                  region:
                    type: string
                    x-go-name: Region
                  statistics:
                    type: array
                    items:
                      type: string
                    x-go-name: Statistics
                  step:
                    type: integer
                    format: int64
                    x-go-name: Step
                  target:
                    description: For Graphite
                    type: string
                    x-go-name: Target
                  timeField:
                    type: string
                    x-go-name: TimeField
                x-go-package: github.com/grafana-tools/sdk
              x-go-name: Targets
            thresholds:
              type: string
              items:
                type: object
                properties:
                  colorMode:
                    description: critical, warning, ok, custom
                    type: string
                    x-go-name: ColorMode
                  fill:
                    type: boolean
                    x-go-name: Fill
                  fillColor:
                    description: 'hexadecimal color (e.g. #629e51, only when ColorMode
                      is "custom")'
                    type: string
                    x-go-name: FillColor
                  line:
                    type: boolean
                    x-go-name: Line
                  lineColor:
                    description: 'hexadecimal color (e.g. #629e51, only when ColorMode
                      is "custom")'
                    type: string
                    x-go-name: LineColor
                  op:
                    description: gt or lt
                    type: string
                    x-go-name: Op
                  value:
                    description: |-
                      the alert threshold value, we do not omitempty, since 0 is a valid
                      threshold
                    type: number
                    format: float
                    x-go-name: Value
                  yaxis:
                    description: left or right
                    type: string
                    x-go-name: Yaxis
                x-go-package: github.com/grafana-tools/sdk
              x-go-name: Thresholds
            timeFrom:
              type: string
              x-go-name: TimeFrom
            timeShift:
              type: string
              x-go-name: TimeShift
            title:
              type: string
              x-go-name: Title
            tooltip:
              type: object
              properties:
                msResolution:
                  type: boolean
                  x-go-name: MsResolution
                shared:
                  type: boolean
                  x-go-name: Shared
                sort:
                  type: integer
                  format: int64
                  x-go-name: Sort
                value_type:
                  type: string
                  x-go-name: ValueType
              x-go-package: github.com/grafana-tools/sdk
            transform:
              type: string
              x-go-name: Transform
            transparent:
              type: boolean
              x-go-name: Transparent
            type:
              type: string
              x-go-name: Type
            valueFontSize:
              type: string
              x-go-name: ValueFontSize
            valueMaps:
              type: array
              items:
                description: for a singlestat
                type: object
                properties:
                  op:
                    type: string
                    x-go-name: Op
                  text:
                    type: string
                    x-go-name: TextType
                  value:
                    type: string
                    x-go-name: Value
                x-go-package: github.com/grafana-tools/sdk
              x-go-name: ValueMaps
            valueName:
              type: string
              x-go-name: ValueName
            x-axis:
              type: boolean
              x-go-name: XAxis
            xaxis:
              description: for a graph panel
              type: object
              properties:
                format:
                  type: string
                  x-go-name: Format
                label:
                  type: string
                  x-go-name: Label
                logBase:
                  type: integer
                  format: int64
                  x-go-name: LogBase
                max:
                  type: object
                  title: 'FloatString represents special type for json values that
                    could be strings or ints: 100 or "100"'
                  properties:
                    Valid:
                      type: boolean
                    Value:
                      type: number
                      format: double
                  x-go-package: github.com/grafana-tools/sdk
                min:
                  type: object
                  title: 'FloatString represents special type for json values that
                    could be strings or ints: 100 or "100"'
                  properties:
                    Valid:
                      type: boolean
                    Value:
                      type: number
                      format: double
                  x-go-package: github.com/grafana-tools/sdk
                show:
                  type: boolean
                  x-go-name: Show
              x-go-package: github.com/grafana-tools/sdk
            y-axis:
              type: boolean
              x-go-name: YAxis
            y_formats:
              type: array
              items:
                type: string
              x-go-name: YFormats
            yaxes:
              type: array
              items:
                description: for a graph panel
                type: object
                properties:
                  format:
                    type: string
                    x-go-name: Format
                  label:
                    type: string
                    x-go-name: Label
                  logBase:
                    type: integer
                    format: int64
                    x-go-name: LogBase
                  max:
                    type: object
                    title: 'FloatString represents special type for json values that
                      could be strings or ints: 100 or "100"'
                    properties:
                      Valid:
                        type: boolean
                      Value:
                        type: number
                        format: double
                    x-go-package: github.com/grafana-tools/sdk
                  min:
                    type: object
                    title: 'FloatString represents special type for json values that
                      could be strings or ints: 100 or "100"'
                    properties:
                      Valid:
                        type: boolean
                      Value:
                        type: number
                        format: double
                    x-go-package: github.com/grafana-tools/sdk
                  show:
                    type: boolean
                    x-go-name: Show
                x-go-package: github.com/grafana-tools/sdk
              x-go-name: Yaxes
          x-go-package: github.com/grafana-tools/sdk
      alert:
        type: object
        properties:
          conditions:
            type: array
            items:
              type: object
              properties:
                evaluator:
                  type: object
                  properties:
                    params:
                      type: array
                      items:
                        type: number
                        format: double
                      x-go-name: Params
                    type:
                      type: string
                      x-go-name: Type
                  x-go-package: github.com/grafana-tools/sdk
                operator:
                  type: object
                  properties:
                    type:
                      type: string
                      x-go-name: Type
                  x-go-package: github.com/grafana-tools/sdk
                query:
                  type: object
                  properties:
                    params:
                      type: array
                      items:
                        type: string
                      x-go-name: Params
                  x-go-package: github.com/grafana-tools/sdk
                reducer:
                  type: object
                  properties:
                    params:
                      type: array
                      items:
                        type: string
                      x-go-name: Params
                    type:
                      type: string
                      x-go-name: Type
                  x-go-package: github.com/grafana-tools/sdk
                type:
                  type: string
                  x-go-name: Type
              x-go-package: github.com/grafana-tools/sdk
            x-go-name: Conditions
          executionErrorState:
            type: string
            x-go-name: ExecutionErrorState
          for:
            type: string
            x-go-name: For
          frequency:
            type: string
            x-go-name: Frequency
          handler:
            type: integer
            format: int64
            x-go-name: Handler
          message:
            type: string
            x-go-name: Message
          name:
            type: string
            x-go-name: Name
          noDataState:
            type: string
            x-go-name: NoDataState
          notifications:
            type: array
            items:
              description: |-
                AlertNotification as described in the doc
                https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/
              type: object
              properties:
                disableResolveMessage:
                  type: boolean
                  x-go-name: DisableResolveMessage
                frequency:
                  type: string
                  x-go-name: Frequency
                id:
                  type: integer
                  format: int64
                  x-go-name: ID
                isDefault:
                  type: boolean
                  x-go-name: IsDefault
                name:
                  type: string
                  x-go-name: Name
                sendReminder:
                  type: boolean
                  x-go-name: SendReminder
                settings:
                  type: object
                  x-go-name: Settings
                type:
                  type: string
                  x-go-name: Type
                uid:
                  type: string
                  x-go-name: UID
              x-go-package: github.com/grafana-tools/sdk
            x-go-name: Notifications
        x-go-package: github.com/grafana-tools/sdk
      aliasColors:
        type: object
        x-go-name: AliasColors
      bars:
        type: boolean
        x-go-name: Bars
      colorBackground:
        type: boolean
        x-go-name: ColorBackground
      colorValue:
        type: boolean
        x-go-name: ColorValue
      colors:
        type: array
        items:
          type: string
        x-go-name: Colors
      columns:
        type: array
        items:
          description: for a table
          type: object
          properties:
            text:
              type: string
              x-go-name: TextType
            value:
              type: string
              x-go-name: Value
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: Columns
      content:
        type: string
        x-go-name: Content
      dashLength:
        type: integer
        format: uint64
        x-go-name: DashLength
      dashboardTags:
        type: array
        items:
          type: string
        x-go-name: DashboardTags
      dashes:
        type: boolean
        x-go-name: Dashes
      datasource:
        type: string
        x-go-name: Datasource
      decimals:
        type: integer
        format: int64
        x-go-name: Decimals
      description:
        type: string
        x-go-name: Description
      editable:
        type: boolean
        x-go-name: Editable
      error:
        type: boolean
        x-go-name: Error
      fill:
        type: integer
        format: int64
        x-go-name: Fill
      format:
        type: string
        x-go-name: Format
      gauge:
        description: for a singlestat
        type: object
        properties:
          maxValue:
            type: number
            format: float
            x-go-name: MaxValue
          minValue:
            type: number
            format: float
            x-go-name: MinValue
          show:
            type: boolean
            x-go-name: Show
          thresholdLabels:
            type: boolean
            x-go-name: ThresholdLabels
          thresholdMarkers:
            type: boolean
            x-go-name: ThresholdMarkers
        x-go-package: github.com/grafana-tools/sdk
      gridPos:
        type: object
        properties:
          h:
            type: integer
            format: int64
            x-go-name: H
          w:
            type: integer
            format: int64
            x-go-name: W
          x:
            type: integer
            format: int64
            x-go-name: X
          "y":
            type: integer
            format: int64
            x-go-name: "Y"
        x-go-name: GridPos
      height:
        type: string
        x-go-name: Height
      hideTimeOverride:
        type: boolean
        x-go-name: HideTimeOverride
      id:
        type: integer
        format: uint64
        x-go-name: ID
      isNew:
        type: boolean
        x-go-name: IsNew
      leftYAxisLabel:
        type: string
        x-go-name: LeftYAxisLabel
      legend:
        description: for a graph panel
        type: object
        properties:
          alignAsTable:
            type: boolean
            x-go-name: AlignAsTable
          avg:
            type: boolean
            x-go-name: Avg
          current:
            type: boolean
            x-go-name: Current
          hideEmpty:
            type: boolean
            x-go-name: HideEmpty
          hideZero:
            type: boolean
            x-go-name: HideZero
          max:
            type: boolean
            x-go-name: Max
          min:
            type: boolean
            x-go-name: Min
          rightSide:
            type: boolean
            x-go-name: RightSide
          show:
            type: boolean
            x-go-name: Show
          sideWidth:
            type: integer
            format: uint64
            x-go-name: SideWidth
          total:
            type: boolean
            x-go-name: Total
          values:
            type: boolean
            x-go-name: Values
        x-go-package: github.com/grafana-tools/sdk
      limit:
        type: integer
        format: int64
        x-go-name: Limit
      lines:
        type: boolean
        x-go-name: Lines
      linewidth:
        type: integer
        format: uint64
        x-go-name: Linewidth
      links:
        type: array
        items:
          description: link represents link to another dashboard or external weblink
          type: object
          properties:
            asDropdown:
              type: boolean
              x-go-name: AsDropdown
            dashUri:
              type: string
              x-go-name: DashURI
            dashboard:
              type: string
              x-go-name: Dashboard
            icon:
              type: string
              x-go-name: Icon
            includeVars:
              type: boolean
              x-go-name: IncludeVars
            keepTime:
              type: boolean
              x-go-name: KeepTime
            params:
              type: string
              x-go-name: Params
            tags:
              type: array
              items:
                type: string
              x-go-name: Tags
            targetBlank:
              type: boolean
              x-go-name: TargetBlank
            title:
              type: string
              x-go-name: Title
            tooltip:
              type: string
              x-go-name: Tooltip
            type:
              type: string
              x-go-name: Type
            url:
              type: string
              x-go-name: URL
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: Links
      mappingType:
        type: integer
        format: uint64
        x-go-name: MappingType
      mappingTypes:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              x-go-name: Name
            value:
              type: integer
              format: int64
              x-go-name: Value
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: MappingTypes
      maxDataPoints:
        type: object
        title: 'IntString represents special type for json values that could be strings
          or ints: 100 or "100"'
        properties:
          Valid:
            type: boolean
          Value:
            type: integer
            format: int64
        x-go-package: github.com/grafana-tools/sdk
      minSpan:
        type: number
        format: float
        x-go-name: MinSpan
      mode:
        type: string
        x-go-name: Mode
      nameFilter:
        type: string
        x-go-name: NameFilter
      nullPointMode:
        type: string
        x-go-name: NullPointMode
      onlyAlertsOnDashboard:
        type: boolean
        x-go-name: OnlyAlertsOnDashboard
      pageSize:
        type: integer
        format: uint64
        x-go-name: PageSize
      percentage:
        type: boolean
        x-go-name: Percentage
      pointradius:
        type: integer
        format: int64
        x-go-name: Pointradius
      points:
        type: boolean
        x-go-name: Points
      postfix:
        type: string
        x-go-name: Postfix
      postfixFontSize:
        type: string
        x-go-name: PostfixFontSize
      prefix:
        type: string
        x-go-name: Prefix
      prefixFontSize:
        type: string
        x-go-name: PrefixFontSize
      query:
        type: string
        x-go-name: Query
      rangeMaps:
        type: array
        items:
          type: object
          properties:
            from:
              type: string
              x-go-name: From
            text:
              type: string
              x-go-name: Text
            to:
              type: string
              x-go-name: To
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: RangeMaps
      renderer:
        type: string
        x-go-name: Renderer
      repeat:
        type: string
        x-go-name: Repeat
      repeatPanelId:
        description: RepeatIteration *int64   `json:"repeatIteration,omitempty"`
        type: integer
        format: uint64
        x-go-name: RepeatPanelID
      rightYAxisLabel:
        type: string
        x-go-name: RightYAxisLabel
      scopedVars:
        type: object
        additionalProperties:
          type: object
          properties:
            selected:
              type: boolean
              x-go-name: Selected
            text:
              type: string
              x-go-name: Text
            value:
              type: string
              x-go-name: Value
        x-go-name: ScopedVars
      scroll:
        type: boolean
        x-go-name: Scroll
      seriesOverrides:
        type: array
        items:
          description: for a graph panel
          type: object
          properties:
            alias:
              type: string
              x-go-name: Alias
            bars:
              type: boolean
              x-go-name: Bars
            color:
              type: string
              x-go-name: Color
            fill:
              type: integer
              format: int64
              x-go-name: Fill
            fillBelowTo:
              type: string
              x-go-name: FillBelowTo
            legend:
              type: boolean
              x-go-name: Legend
            lines:
              type: boolean
              x-go-name: Lines
            nullPointMode:
              type: string
              x-go-name: NullPointMode
            stack:
              type: object
              properties:
                Flag:
                  type: boolean
                Value:
                  type: string
              x-go-package: github.com/grafana-tools/sdk
            transform:
              type: string
              x-go-name: Transform
            yaxis:
              type: integer
              format: int64
              x-go-name: YAxis
            zindex:
              type: integer
              format: int64
              x-go-name: ZIndex
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: SeriesOverrides
      show:
        type: string
        x-go-name: Show
      showHeader:
        type: boolean
        x-go-name: ShowHeader
      sort:
        description: for a graph panel
        type: object
        properties:
          col:
            type: integer
            format: int64
            x-go-name: Col
          desc:
            type: boolean
            x-go-name: Desc
        x-go-package: github.com/grafana-tools/sdk
      sortOrder:
        type: integer
        format: int64
        x-go-name: SortOrder
      spaceLength:
        type: integer
        format: uint64
        x-go-name: SpaceLength
      span:
        type: number
        format: float
        x-go-name: Span
      sparkline:
        description: for a singlestat
        type: object
        properties:
          fillColor:
            type: string
            x-go-name: FillColor
          full:
            type: boolean
            x-go-name: Full
          lineColor:
            type: string
            x-go-name: LineColor
          show:
            type: boolean
            x-go-name: Show
          ymax:
            type: number
            format: double
            x-go-name: YMax
          ymin:
            type: number
            format: double
            x-go-name: YMin
        x-go-package: github.com/grafana-tools/sdk
      stack:
        type: boolean
        x-go-name: Stack
      stateFilter:
        type: array
        items:
          type: string
        x-go-name: StateFilter
      steppedLine:
        type: boolean
        x-go-name: SteppedLine
      styles:
        type: array
        items:
          description: for a table
          type: object
          properties:
            alias:
              type: string
              x-go-name: Alias
            colorMode:
              type: string
              x-go-name: ColorMode
            colors:
              type: array
              items:
                type: string
              x-go-name: Colors
            dateFormat:
              type: string
              x-go-name: DateFormat
            decimals:
              type: integer
              format: uint64
              x-go-name: Decimals
            pattern:
              type: string
              x-go-name: Pattern
            thresholds:
              type: array
              items:
                type: string
              x-go-name: Thresholds
            type:
              type: string
              x-go-name: Type
            unit:
              type: string
              x-go-name: Unit
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: Styles
      tags:
        type: array
        items:
          type: string
        x-go-name: Tags
      targets:
        type: array
        items:
          description: for an any panel
          type: object
          properties:
            alias:
              type: string
              x-go-name: Alias
            bucketAggs:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    x-go-name: Field
                  id:
                    type: string
                    x-go-name: ID
                  settings:
                    type: object
                    properties:
                      interval:
                        type: string
                        x-go-name: Interval
                      min_doc_count:
                        type: integer
                        format: int64
                        x-go-name: MinDocCount
                      order:
                        type: string
                        x-go-name: Order
                      orderBy:
                        type: string
                        x-go-name: OrderBy
                      size:
                        type: string
                        x-go-name: Size
                    x-go-name: Settings
                  type:
                    type: string
                    x-go-name: Type
              x-go-name: BucketAggs
            datasource:
              type: string
              x-go-name: Datasource
            dimensions:
              type: object
              additionalProperties:
                type: string
              x-go-name: Dimensions
            dsType:
              description: For Elasticsearch
              type: string
              x-go-name: DsType
            expr:
              description: For Prometheus
              type: string
              x-go-name: Expr
            format:
              type: string
              x-go-name: Format
            instant:
              type: boolean
              x-go-name: Instant
            interval:
              type: string
              x-go-name: Interval
            intervalFactor:
              type: integer
              format: int64
              x-go-name: IntervalFactor
            legendFormat:
              type: string
              x-go-name: LegendFormat
            metricName:
              type: string
              x-go-name: MetricName
            metrics:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    x-go-name: Field
                  id:
                    type: string
                    x-go-name: ID
                  type:
                    type: string
                    x-go-name: Type
              x-go-name: Metrics
            namespace:
              description: For CloudWatch
              type: string
              x-go-name: Namespace
            period:
              type: string
              x-go-name: Period
            query:
              type: string
              x-go-name: Query
            rawQuery:
              type: boolean
              x-go-name: RawQuery
            refId:
              type: string
              x-go-name: RefID
            region:
              type: string
              x-go-name: Region
            statistics:
              type: array
              items:
                type: string
              x-go-name: Statistics
            step:
              type: integer
              format: int64
              x-go-name: Step
            target:
              description: For Graphite
              type: string
              x-go-name: Target
            timeField:
              type: string
              x-go-name: TimeField
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: Targets
      thresholds:
        type: string
        items:
          type: object
          properties:
            colorMode:
              description: critical, warning, ok, custom
              type: string
              x-go-name: ColorMode
            fill:
              type: boolean
              x-go-name: Fill
            fillColor:
              description: 'hexadecimal color (e.g. #629e51, only when ColorMode is
                "custom")'
              type: string
              x-go-name: FillColor
            line:
              type: boolean
              x-go-name: Line
            lineColor:
              description: 'hexadecimal color (e.g. #629e51, only when ColorMode is
                "custom")'
              type: string
              x-go-name: LineColor
            op:
              description: gt or lt
              type: string
              x-go-name: Op
            value:
              description: |-
                the alert threshold value, we do not omitempty, since 0 is a valid
                threshold
              type: number
              format: float
              x-go-name: Value
            yaxis:
              description: left or right
              type: string
              x-go-name: Yaxis
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: Thresholds
      timeFrom:
        type: string
        x-go-name: TimeFrom
      timeShift:
        type: string
        x-go-name: TimeShift
      title:
        type: string
        x-go-name: Title
      tooltip:
        type: object
        properties:
          msResolution:
            type: boolean
            x-go-name: MsResolution
          shared:
            type: boolean
            x-go-name: Shared
          sort:
            type: integer
            format: int64
            x-go-name: Sort
          value_type:
            type: string
            x-go-name: ValueType
        x-go-package: github.com/grafana-tools/sdk
      transform:
        type: string
        x-go-name: Transform
      transparent:
        type: boolean
        x-go-name: Transparent
      type:
        type: string
        x-go-name: Type
      valueFontSize:
        type: string
        x-go-name: ValueFontSize
      valueMaps:
        type: array
        items:
          description: for a singlestat
          type: object
          properties:
            op:
              type: string
              x-go-name: Op
            text:
              type: string
              x-go-name: TextType
            value:
              type: string
              x-go-name: Value
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: ValueMaps
      valueName:
        type: string
        x-go-name: ValueName
      x-axis:
        type: boolean
        x-go-name: XAxis
      xaxis:
        description: for a graph panel
        type: object
        properties:
          format:
            type: string
            x-go-name: Format
          label:
            type: string
            x-go-name: Label
          logBase:
            type: integer
            format: int64
            x-go-name: LogBase
          max:
            type: object
            title: 'FloatString represents special type for json values that could
              be strings or ints: 100 or "100"'
            properties:
              Valid:
                type: boolean
              Value:
                type: number
                format: double
            x-go-package: github.com/grafana-tools/sdk
          min:
            type: object
            title: 'FloatString represents special type for json values that could
              be strings or ints: 100 or "100"'
            properties:
              Valid:
                type: boolean
              Value:
                type: number
                format: double
            x-go-package: github.com/grafana-tools/sdk
          show:
            type: boolean
            x-go-name: Show
        x-go-package: github.com/grafana-tools/sdk
      y-axis:
        type: boolean
        x-go-name: YAxis
      y_formats:
        type: array
        items:
          type: string
        x-go-name: YFormats
      yaxes:
        type: array
        items:
          description: for a graph panel
          type: object
          properties:
            format:
              type: string
              x-go-name: Format
            label:
              type: string
              x-go-name: Label
            logBase:
              type: integer
              format: int64
              x-go-name: LogBase
            max:
              type: object
              title: 'FloatString represents special type for json values that could
                be strings or ints: 100 or "100"'
              properties:
                Valid:
                  type: boolean
                Value:
                  type: number
                  format: double
              x-go-package: github.com/grafana-tools/sdk
            min:
              type: object
              title: 'FloatString represents special type for json values that could
                be strings or ints: 100 or "100"'
              properties:
                Valid:
                  type: boolean
                Value:
                  type: number
                  format: double
              x-go-package: github.com/grafana-tools/sdk
            show:
              type: boolean
              x-go-name: Show
          x-go-package: github.com/grafana-tools/sdk
        x-go-name: Yaxes
    x-go-package: github.com/grafana-tools/sdk
  PatternsAPIResponse:
    description: PatternsAPIResponse response retruned by patternfile endpoint on
      meshery server
    type: object
    properties:
      page:
        type: integer
        format: uint64
        x-go-name: Page
      page_size:
        type: integer
        format: uint64
        x-go-name: PageSize
      patterns:
        type: array
        items:
          description: MesheryPattern represents the patterns that needs to be saved
          type: object
          properties:
            created_at:
              type: string
              format: date-time
              x-go-name: CreatedAt
            id:
              type: array
              title: UUID is an array type to represent the value of a UUID, as defined
                in RFC-4122.
              items:
                type: integer
                format: uint8
              x-go-package: github.com/gofrs/uuid
            location:
              description: |-
                It implements native SQL driver interfaces and hence can
                be used for SQL json or jsonb types as a drop in replacement
                of golang native maps
              type: object
              title: Map type is an alias for map[string]interface{}
              additionalProperties:
                type: object
              x-go-package: github.com/layer5io/meshery/internal/sql
            name:
              type: string
              x-go-name: Name
            pattern_file:
              type: string
              x-go-name: PatternFile
            updated_at:
              type: string
              format: date-time
              x-go-name: UpdatedAt
            user_id:
              description: |-
                Meshery doesn't have the user id fields
                but the remote provider is allowed to provide one
              type: string
              x-go-name: UserID
          x-go-package: github.com/layer5io/meshery/models
        x-go-name: Patterns
      total_size:
        type: integer
        format: uint64
        x-go-name: TotalCount
    x-go-package: github.com/layer5io/meshery/models
  PerformanceProfile:
    description: |-
      PerformanceProfile represents the performance profile that needs
      to be saved
    type: object
    properties:
      concurrent_request:
        type: integer
        format: int64
        x-go-name: ConcurrentRequest
      content_type:
        type: string
        x-go-name: ContentType
      created_at:
        description: |-
          +protobuf.options.marshal=false
          +protobuf.as=Timestamp
          +protobuf.options.(gogoproto.goproto_stringer)=false
        type: object
        title: |-
          Time is a wrapper around time.Time which supports correct
          marshaling to YAML and JSON.  Wrappers are provided for many
          of the factory methods that the time package offers.
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
      duration:
        type: string
        x-go-name: Duration
      endpoints:
        type: array
        title: StringArray represents a one-dimensional array of the PostgreSQL character
          types.
        items:
          type: string
        x-go-package: github.com/lib/pq
      id:
        type: array
        title: UUID is an array type to represent the value of a UUID, as defined
          in RFC-4122.
        items:
          type: integer
          format: uint8
        x-go-package: github.com/gofrs/uuid
      last_run:
        description: |-
          +protobuf.options.marshal=false
          +protobuf.as=Timestamp
          +protobuf.options.(gogoproto.goproto_stringer)=false
        type: object
        title: |-
          Time is a wrapper around time.Time which supports correct
          marshaling to YAML and JSON.  Wrappers are provided for many
          of the factory methods that the time package offers.
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
      load_generators:
        type: array
        title: StringArray represents a one-dimensional array of the PostgreSQL character
          types.
        items:
          type: string
        x-go-package: github.com/lib/pq
      name:
        type: string
        x-go-name: Name
      qps:
        type: integer
        format: int64
        x-go-name: QPS
      request_body:
        type: string
        x-go-name: RequestBody
      request_cookies:
        type: string
        x-go-name: RequestCookies
      request_headers:
        type: string
        x-go-name: RequestHeaders
      schedule:
        type: array
        title: UUID is an array type to represent the value of a UUID, as defined
          in RFC-4122.
        items:
          type: integer
          format: uint8
        x-go-package: github.com/gofrs/uuid
      service_mesh:
        type: string
        x-go-name: ServiceMesh
      total_results:
        type: integer
        format: int64
        x-go-name: TotalResults
      updated_at:
        description: |-
          +protobuf.options.marshal=false
          +protobuf.as=Timestamp
          +protobuf.options.(gogoproto.goproto_stringer)=false
        type: object
        title: |-
          Time is a wrapper around time.Time which supports correct
          marshaling to YAML and JSON.  Wrappers are provided for many
          of the factory methods that the time package offers.
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
    x-go-package: github.com/layer5io/meshery/models
  PerformanceProfileParameters:
    description: PerformanceProfileParameters structs contains parameters to save
      a performance profile
    type: object
    properties:
      concurrent_request:
        description: number of concurrent requests
        type: integer
        format: int64
        x-go-name: ConcurrentRequest
      duration:
        description: duration of tests e.g. 30s
        type: string
        x-go-name: Duration
      endpoints:
        description: array of urls of performance results
        type: array
        items:
          type: string
        x-go-name: Endpoints
      load_generators:
        description: array of load generators
        type: array
        items:
          type: string
        x-go-name: LoadGenerators
      name:
        description: name of performance profile
        type: string
        x-go-name: Name
      qps:
        description: qps in integer
        type: integer
        format: int64
        x-go-name: QPS
      service_mesh:
        description: service mesh for performance tests
        type: string
        x-go-name: ServiceMesh
    x-go-package: github.com/layer5io/meshery/models
  PerformanceProfilesAPIResponse:
    description: PerformanceProfilesAPIResponse response retruned by performance endpoint
      on meshery server
    type: object
    properties:
      page:
        type: integer
        format: uint64
        x-go-name: Page
      page_size:
        type: integer
        format: uint64
        x-go-name: PageSize
      profiles:
        type: array
        items:
          description: |-
            PerformanceProfile represents the performance profile that needs
            to be saved
          type: object
          properties:
            concurrent_request:
              type: integer
              format: int64
              x-go-name: ConcurrentRequest
            content_type:
              type: string
              x-go-name: ContentType
            created_at:
              description: |-
                +protobuf.options.marshal=false
                +protobuf.as=Timestamp
                +protobuf.options.(gogoproto.goproto_stringer)=false
              type: object
              title: |-
                Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many
                of the factory methods that the time package offers.
              x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
            duration:
              type: string
              x-go-name: Duration
            endpoints:
              type: array
              title: StringArray represents a one-dimensional array of the PostgreSQL
                character types.
              items:
                type: string
              x-go-package: github.com/lib/pq
            id:
              type: array
              title: UUID is an array type to represent the value of a UUID, as defined
                in RFC-4122.
              items:
                type: integer
                format: uint8
              x-go-package: github.com/gofrs/uuid
            last_run:
              description: |-
                +protobuf.options.marshal=false
                +protobuf.as=Timestamp
                +protobuf.options.(gogoproto.goproto_stringer)=false
              type: object
              title: |-
                Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many
                of the factory methods that the time package offers.
              x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
            load_generators:
              type: array
              title: StringArray represents a one-dimensional array of the PostgreSQL
                character types.
              items:
                type: string
              x-go-package: github.com/lib/pq
            name:
              type: string
              x-go-name: Name
            qps:
              type: integer
              format: int64
              x-go-name: QPS
            request_body:
              type: string
              x-go-name: RequestBody
            request_cookies:
              type: string
              x-go-name: RequestCookies
            request_headers:
              type: string
              x-go-name: RequestHeaders
            schedule:
              type: array
              title: UUID is an array type to represent the value of a UUID, as defined
                in RFC-4122.
              items:
                type: integer
                format: uint8
              x-go-package: github.com/gofrs/uuid
            service_mesh:
              type: string
              x-go-name: ServiceMesh
            total_results:
              type: integer
              format: int64
              x-go-name: TotalResults
            updated_at:
              description: |-
                +protobuf.options.marshal=false
                +protobuf.as=Timestamp
                +protobuf.options.(gogoproto.goproto_stringer)=false
              type: object
              title: |-
                Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many
                of the factory methods that the time package offers.
              x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
          x-go-package: github.com/layer5io/meshery/models
        x-go-name: Profiles
      total_count:
        type: integer
        format: uint64
        x-go-name: TotalCount
    x-go-package: github.com/layer5io/meshery/models
  PerformanceResult:
    description: PerformanceResult represents the result of a performance test
    type: object
    properties:
      mesh:
        type: string
        x-go-name: Mesh
      meshery_id:
        type: array
        title: UUID is an array type to represent the value of a UUID, as defined
          in RFC-4122.
        items:
          type: integer
          format: uint8
        x-go-package: github.com/gofrs/uuid
      name:
        type: string
        x-go-name: Name
      performance_profile:
        type: array
        title: UUID is an array type to represent the value of a UUID, as defined
          in RFC-4122.
        items:
          type: integer
          format: uint8
        x-go-package: github.com/gofrs/uuid
      runner_results:
        type: object
        properties:
          ActualDuration:
            type: integer
            format: uint64
            x-go-name: Duration
          ActualQPS:
            type: number
            format: double
            x-go-name: QPS
          DurationHistogram:
            type: object
            properties:
              Avg:
                type: number
                format: double
                x-go-name: Average
              Max:
                type: number
                format: double
              Min:
                type: number
                format: double
              Percentiles:
                type: array
                items:
                  type: object
                  properties:
                    Percentile:
                      type: number
                      format: double
                    Value:
                      type: number
                      format: double
          StartTime:
            type: string
            format: date-time
          URL:
            type: string
          load-generator:
            type: string
            x-go-name: LoadGenerator
        x-go-package: github.com/layer5io/meshery/models
      server_board_config:
        type: object
        x-go-name: ServerBoardConfig
      server_metrics:
        type: object
        x-go-name: ServerMatrics
      test_start_time:
        type: string
        format: date-time
        x-go-name: TestStartTime
      user_id:
        type: array
        title: UUID is an array type to represent the value of a UUID, as defined
          in RFC-4122.
        items:
          type: integer
          format: uint8
        x-go-package: github.com/gofrs/uuid
    x-go-package: github.com/layer5io/meshery/models
  PerformanceResultsAPIResponse:
    description: PerformanceResultsAPIResponse response retruned by performance endpoint
      on meshery server
    type: object
    properties:
      page:
        type: integer
        format: uint64
        x-go-name: Page
      page_size:
        type: integer
        format: uint64
        x-go-name: PageSize
      results:
        type: array
        items:
          description: PerformanceResult represents the result of a performance test
          type: object
          properties:
            mesh:
              type: string
              x-go-name: Mesh
            meshery_id:
              type: array
              title: UUID is an array type to represent the value of a UUID, as defined
                in RFC-4122.
              items:
                type: integer
                format: uint8
              x-go-package: github.com/gofrs/uuid
            name:
              type: string
              x-go-name: Name
            performance_profile:
              type: array
              title: UUID is an array type to represent the value of a UUID, as defined
                in RFC-4122.
              items:
                type: integer
                format: uint8
              x-go-package: github.com/gofrs/uuid
            runner_results:
              type: object
              properties:
                ActualDuration:
                  type: integer
                  format: uint64
                  x-go-name: Duration
                ActualQPS:
                  type: number
                  format: double
                  x-go-name: QPS
                DurationHistogram:
                  type: object
                  properties:
                    Avg:
                      type: number
                      format: double
                      x-go-name: Average
                    Max:
                      type: number
                      format: double
                    Min:
                      type: number
                      format: double
                    Percentiles:
                      type: array
                      items:
                        type: object
                        properties:
                          Percentile:
                            type: number
                            format: double
                          Value:
                            type: number
                            format: double
                StartTime:
                  type: string
                  format: date-time
                URL:
                  type: string
                load-generator:
                  type: string
                  x-go-name: LoadGenerator
              x-go-package: github.com/layer5io/meshery/models
            server_board_config:
              type: object
              x-go-name: ServerBoardConfig
            server_metrics:
              type: object
              x-go-name: ServerMatrics
            test_start_time:
              type: string
              format: date-time
              x-go-name: TestStartTime
            user_id:
              type: array
              title: UUID is an array type to represent the value of a UUID, as defined
                in RFC-4122.
              items:
                type: integer
                format: uint8
              x-go-package: github.com/gofrs/uuid
          x-go-package: github.com/layer5io/meshery/models
        x-go-name: Results
      total_count:
        type: integer
        format: uint64
        x-go-name: TotalCount
    x-go-package: github.com/layer5io/meshery/models
  PerformanceTestParameters:
    description: PerformanceTestParameters contains paramters to run a performance
      test
    type: object
    properties:
      c:
        description: concurrent request in number
        type: integer
        format: int64
        x-go-name: ConcurrentRequest
      dur:
        description: duration e.g. s for second
        type: string
        x-go-name: Duration
      loadGenerator:
        description: load generator for performance test
        type: string
        x-go-name: LoadGenerator
      mesh:
        description: service mesh for performance test
        type: string
        x-go-name: ServiceMesh
      name:
        description: name of performance test
        type: string
        x-go-name: Name
      qps:
        description: qps in number
        type: integer
        format: int64
        x-go-name: QPS
      t:
        description: time in integer e.g. 30
        type: integer
        format: int64
        x-go-name: Time
      url:
        description: url for test
        type: string
        x-go-name: URL
      uuid:
        description: test-id of pre-existing test
        type: string
        format: uuid
        x-go-name: TestID
    x-go-package: github.com/layer5io/meshery/models
  Plugin:
    description: Plugin A plugin for the Engine API
    type: object
    required:
    - Config
    - Enabled
    - Name
    - Settings
    properties:
      Config:
        type: object
        title: PluginConfig The config of a plugin.
        required:
        - Args
        - Description
        - Documentation
        - Entrypoint
        - Env
        - Interface
        - IpcHost
        - Linux
        - Mounts
        - Network
        - PidHost
        - PropagatedMount
        - WorkDir
        properties:
          Args:
            description: PluginConfigArgs plugin config args
            type: object
            required:
            - Description
            - Name
            - Settable
            - Value
            properties:
              Description:
                description: description
                type: string
              Name:
                description: name
                type: string
              Settable:
                description: settable
                type: array
                items:
                  type: string
              Value:
                description: value
                type: array
                items:
                  type: string
            x-go-package: github.com/docker/docker/api/types
          Description:
            description: description
            type: string
          DockerVersion:
            description: Docker Version used to create the plugin
            type: string
          Documentation:
            description: documentation
            type: string
          Entrypoint:
            description: entrypoint
            type: array
            items:
              type: string
          Env:
            description: env
            type: array
            items:
              description: PluginEnv plugin env
              type: object
              required:
              - Description
              - Name
              - Settable
              - Value
              properties:
                Description:
                  description: description
                  type: string
                Name:
                  description: name
                  type: string
                Settable:
                  description: settable
                  type: array
                  items:
                    type: string
                Value:
                  description: value
                  type: string
              x-go-package: github.com/docker/docker/api/types
          Interface:
            description: PluginConfigInterface The interface between Docker and the
              plugin
            type: object
            required:
            - Socket
            - Types
            properties:
              ProtocolScheme:
                description: Protocol to use for clients connecting to the plugin.
                type: string
              Socket:
                description: socket
                type: string
              Types:
                description: types
                type: array
                items:
                  description: PluginInterfaceType plugin interface type
                  type: object
                  required:
                  - Capability
                  - Prefix
                  - Version
                  properties:
                    Capability:
                      description: capability
                      type: string
                    Prefix:
                      description: prefix
                      type: string
                    Version:
                      description: version
                      type: string
                  x-go-package: github.com/docker/docker/api/types
            x-go-package: github.com/docker/docker/api/types
          IpcHost:
            description: ipc host
            type: boolean
          Linux:
            description: PluginConfigLinux plugin config linux
            type: object
            required:
            - AllowAllDevices
            - Capabilities
            - Devices
            properties:
              AllowAllDevices:
                description: allow all devices
                type: boolean
              Capabilities:
                description: capabilities
                type: array
                items:
                  type: string
              Devices:
                description: devices
                type: array
                items:
                  description: PluginDevice plugin device
                  type: object
                  required:
                  - Description
                  - Name
                  - Path
                  - Settable
                  properties:
                    Description:
                      description: description
                      type: string
                    Name:
                      description: name
                      type: string
                    Path:
                      description: path
                      type: string
                    Settable:
                      description: settable
                      type: array
                      items:
                        type: string
                  x-go-package: github.com/docker/docker/api/types
            x-go-package: github.com/docker/docker/api/types
          Mounts:
            description: mounts
            type: array
            items:
              description: PluginMount plugin mount
              type: object
              required:
              - Description
              - Destination
              - Name
              - Options
              - Settable
              - Source
              - Type
              properties:
                Description:
                  description: description
                  type: string
                Destination:
                  description: destination
                  type: string
                Name:
                  description: name
                  type: string
                Options:
                  description: options
                  type: array
                  items:
                    type: string
                Settable:
                  description: settable
                  type: array
                  items:
                    type: string
                Source:
                  description: source
                  type: string
                Type:
                  description: type
                  type: string
              x-go-package: github.com/docker/docker/api/types
          Network:
            description: PluginConfigNetwork plugin config network
            type: object
            required:
            - Type
            properties:
              Type:
                description: type
                type: string
            x-go-package: github.com/docker/docker/api/types
          PidHost:
            description: pid host
            type: boolean
          PropagatedMount:
            description: propagated mount
            type: string
          User:
            description: PluginConfigUser plugin config user
            type: object
            properties:
              GID:
                description: g ID
                type: integer
                format: uint32
              UID:
                description: UID
                type: integer
                format: uint32
            x-go-package: github.com/docker/docker/api/types
          WorkDir:
            description: work dir
            type: string
          rootfs:
            description: PluginConfigRootfs plugin config rootfs
            type: object
            properties:
              diff_ids:
                description: diff ids
                type: array
                items:
                  type: string
                x-go-name: DiffIds
              type:
                description: type
                type: string
                x-go-name: Type
            x-go-package: github.com/docker/docker/api/types
        x-go-package: github.com/docker/docker/api/types
      Enabled:
        description: True if the plugin is running. False if the plugin is not running,
          only installed.
        type: boolean
      Id:
        description: Id
        type: string
        x-go-name: ID
      Name:
        description: name
        type: string
      PluginReference:
        description: plugin remote reference used to push/pull the plugin
        type: string
      Settings:
        type: object
        title: PluginSettings Settings that can be modified by users.
        required:
        - Args
        - Devices
        - Env
        - Mounts
        properties:
          Args:
            description: args
            type: array
            items:
              type: string
          Devices:
            description: devices
            type: array
            items:
              description: PluginDevice plugin device
              type: object
              required:
              - Description
              - Name
              - Path
              - Settable
              properties:
                Description:
                  description: description
                  type: string
                Name:
                  description: name
                  type: string
                Path:
                  description: path
                  type: string
                Settable:
                  description: settable
                  type: array
                  items:
                    type: string
              x-go-package: github.com/docker/docker/api/types
          Env:
            description: env
            type: array
            items:
              type: string
          Mounts:
            description: mounts
            type: array
            items:
              description: PluginMount plugin mount
              type: object
              required:
              - Description
              - Destination
              - Name
              - Options
              - Settable
              - Source
              - Type
              properties:
                Description:
                  description: description
                  type: string
                Destination:
                  description: destination
                  type: string
                Name:
                  description: name
                  type: string
                Options:
                  description: options
                  type: array
                  items:
                    type: string
                Settable:
                  description: settable
                  type: array
                  items:
                    type: string
                Source:
                  description: source
                  type: string
                Type:
                  description: type
                  type: string
              x-go-package: github.com/docker/docker/api/types
        x-go-package: github.com/docker/docker/api/types
    x-go-package: github.com/docker/docker/api/types
  PluginConfig:
    type: object
    title: PluginConfig The config of a plugin.
    required:
    - Args
    - Description
    - Documentation
    - Entrypoint
    - Env
    - Interface
    - IpcHost
    - Linux
    - Mounts
    - Network
    - PidHost
    - PropagatedMount
    - WorkDir
    properties:
      Args:
        description: PluginConfigArgs plugin config args
        type: object
        required:
        - Description
        - Name
        - Settable
        - Value
        properties:
          Description:
            description: description
            type: string
          Name:
            description: name
            type: string
          Settable:
            description: settable
            type: array
            items:
              type: string
          Value:
            description: value
            type: array
            items:
              type: string
        x-go-package: github.com/docker/docker/api/types
      Description:
        description: description
        type: string
      DockerVersion:
        description: Docker Version used to create the plugin
        type: string
      Documentation:
        description: documentation
        type: string
      Entrypoint:
        description: entrypoint
        type: array
        items:
          type: string
      Env:
        description: env
        type: array
        items:
          description: PluginEnv plugin env
          type: object
          required:
          - Description
          - Name
          - Settable
          - Value
          properties:
            Description:
              description: description
              type: string
            Name:
              description: name
              type: string
            Settable:
              description: settable
              type: array
              items:
                type: string
            Value:
              description: value
              type: string
          x-go-package: github.com/docker/docker/api/types
      Interface:
        description: PluginConfigInterface The interface between Docker and the plugin
        type: object
        required:
        - Socket
        - Types
        properties:
          ProtocolScheme:
            description: Protocol to use for clients connecting to the plugin.
            type: string
          Socket:
            description: socket
            type: string
          Types:
            description: types
            type: array
            items:
              description: PluginInterfaceType plugin interface type
              type: object
              required:
              - Capability
              - Prefix
              - Version
              properties:
                Capability:
                  description: capability
                  type: string
                Prefix:
                  description: prefix
                  type: string
                Version:
                  description: version
                  type: string
              x-go-package: github.com/docker/docker/api/types
        x-go-package: github.com/docker/docker/api/types
      IpcHost:
        description: ipc host
        type: boolean
      Linux:
        description: PluginConfigLinux plugin config linux
        type: object
        required:
        - AllowAllDevices
        - Capabilities
        - Devices
        properties:
          AllowAllDevices:
            description: allow all devices
            type: boolean
          Capabilities:
            description: capabilities
            type: array
            items:
              type: string
          Devices:
            description: devices
            type: array
            items:
              description: PluginDevice plugin device
              type: object
              required:
              - Description
              - Name
              - Path
              - Settable
              properties:
                Description:
                  description: description
                  type: string
                Name:
                  description: name
                  type: string
                Path:
                  description: path
                  type: string
                Settable:
                  description: settable
                  type: array
                  items:
                    type: string
              x-go-package: github.com/docker/docker/api/types
        x-go-package: github.com/docker/docker/api/types
      Mounts:
        description: mounts
        type: array
        items:
          description: PluginMount plugin mount
          type: object
          required:
          - Description
          - Destination
          - Name
          - Options
          - Settable
          - Source
          - Type
          properties:
            Description:
              description: description
              type: string
            Destination:
              description: destination
              type: string
            Name:
              description: name
              type: string
            Options:
              description: options
              type: array
              items:
                type: string
            Settable:
              description: settable
              type: array
              items:
                type: string
            Source:
              description: source
              type: string
            Type:
              description: type
              type: string
          x-go-package: github.com/docker/docker/api/types
      Network:
        description: PluginConfigNetwork plugin config network
        type: object
        required:
        - Type
        properties:
          Type:
            description: type
            type: string
        x-go-package: github.com/docker/docker/api/types
      PidHost:
        description: pid host
        type: boolean
      PropagatedMount:
        description: propagated mount
        type: string
      User:
        description: PluginConfigUser plugin config user
        type: object
        properties:
          GID:
            description: g ID
            type: integer
            format: uint32
          UID:
            description: UID
            type: integer
            format: uint32
        x-go-package: github.com/docker/docker/api/types
      WorkDir:
        description: work dir
        type: string
      rootfs:
        description: PluginConfigRootfs plugin config rootfs
        type: object
        properties:
          diff_ids:
            description: diff ids
            type: array
            items:
              type: string
            x-go-name: DiffIds
          type:
            description: type
            type: string
            x-go-name: Type
        x-go-package: github.com/docker/docker/api/types
    x-go-package: github.com/docker/docker/api/types
  PluginConfigArgs:
    description: PluginConfigArgs plugin config args
    type: object
    required:
    - Description
    - Name
    - Settable
    - Value
    properties:
      Description:
        description: description
        type: string
      Name:
        description: name
        type: string
      Settable:
        description: settable
        type: array
        items:
          type: string
      Value:
        description: value
        type: array
        items:
          type: string
    x-go-package: github.com/docker/docker/api/types
  PluginConfigInterface:
    description: PluginConfigInterface The interface between Docker and the plugin
    type: object
    required:
    - Socket
    - Types
    properties:
      ProtocolScheme:
        description: Protocol to use for clients connecting to the plugin.
        type: string
      Socket:
        description: socket
        type: string
      Types:
        description: types
        type: array
        items:
          description: PluginInterfaceType plugin interface type
          type: object
          required:
          - Capability
          - Prefix
          - Version
          properties:
            Capability:
              description: capability
              type: string
            Prefix:
              description: prefix
              type: string
            Version:
              description: version
              type: string
          x-go-package: github.com/docker/docker/api/types
    x-go-package: github.com/docker/docker/api/types
  PluginConfigLinux:
    description: PluginConfigLinux plugin config linux
    type: object
    required:
    - AllowAllDevices
    - Capabilities
    - Devices
    properties:
      AllowAllDevices:
        description: allow all devices
        type: boolean
      Capabilities:
        description: capabilities
        type: array
        items:
          type: string
      Devices:
        description: devices
        type: array
        items:
          description: PluginDevice plugin device
          type: object
          required:
          - Description
          - Name
          - Path
          - Settable
          properties:
            Description:
              description: description
              type: string
            Name:
              description: name
              type: string
            Path:
              description: path
              type: string
            Settable:
              description: settable
              type: array
              items:
                type: string
          x-go-package: github.com/docker/docker/api/types
    x-go-package: github.com/docker/docker/api/types
  PluginConfigNetwork:
    description: PluginConfigNetwork plugin config network
    type: object
    required:
    - Type
    properties:
      Type:
        description: type
        type: string
    x-go-package: github.com/docker/docker/api/types
  PluginConfigRootfs:
    description: PluginConfigRootfs plugin config rootfs
    type: object
    properties:
      diff_ids:
        description: diff ids
        type: array
        items:
          type: string
        x-go-name: DiffIds
      type:
        description: type
        type: string
        x-go-name: Type
    x-go-package: github.com/docker/docker/api/types
  PluginConfigUser:
    description: PluginConfigUser plugin config user
    type: object
    properties:
      GID:
        description: g ID
        type: integer
        format: uint32
      UID:
        description: UID
        type: integer
        format: uint32
    x-go-package: github.com/docker/docker/api/types
  PluginDevice:
    description: PluginDevice plugin device
    type: object
    required:
    - Description
    - Name
    - Path
    - Settable
    properties:
      Description:
        description: description
        type: string
      Name:
        description: name
        type: string
      Path:
        description: path
        type: string
      Settable:
        description: settable
        type: array
        items:
          type: string
    x-go-package: github.com/docker/docker/api/types
  PluginEnv:
    description: PluginEnv plugin env
    type: object
    required:
    - Description
    - Name
    - Settable
    - Value
    properties:
      Description:
        description: description
        type: string
      Name:
        description: name
        type: string
      Settable:
        description: settable
        type: array
        items:
          type: string
      Value:
        description: value
        type: string
    x-go-package: github.com/docker/docker/api/types
  PluginInterfaceType:
    description: PluginInterfaceType plugin interface type
    type: object
    required:
    - Capability
    - Prefix
    - Version
    properties:
      Capability:
        description: capability
        type: string
      Prefix:
        description: prefix
        type: string
      Version:
        description: version
        type: string
    x-go-package: github.com/docker/docker/api/types
  PluginMount:
    description: PluginMount plugin mount
    type: object
    required:
    - Description
    - Destination
    - Name
    - Options
    - Settable
    - Source
    - Type
    properties:
      Description:
        description: description
        type: string
      Destination:
        description: destination
        type: string
      Name:
        description: name
        type: string
      Options:
        description: options
        type: array
        items:
          type: string
      Settable:
        description: settable
        type: array
        items:
          type: string
      Source:
        description: source
        type: string
      Type:
        description: type
        type: string
    x-go-package: github.com/docker/docker/api/types
  PluginSettings:
    type: object
    title: PluginSettings Settings that can be modified by users.
    required:
    - Args
    - Devices
    - Env
    - Mounts
    properties:
      Args:
        description: args
        type: array
        items:
          type: string
      Devices:
        description: devices
        type: array
        items:
          description: PluginDevice plugin device
          type: object
          required:
          - Description
          - Name
          - Path
          - Settable
          properties:
            Description:
              description: description
              type: string
            Name:
              description: name
              type: string
            Path:
              description: path
              type: string
            Settable:
              description: settable
              type: array
              items:
                type: string
          x-go-package: github.com/docker/docker/api/types
      Env:
        description: env
        type: array
        items:
          type: string
      Mounts:
        description: mounts
        type: array
        items:
          description: PluginMount plugin mount
          type: object
          required:
          - Description
          - Destination
          - Name
          - Options
          - Settable
          - Source
          - Type
          properties:
            Description:
              description: description
              type: string
            Destination:
              description: destination
              type: string
            Name:
              description: name
              type: string
            Options:
              description: options
              type: array
              items:
                type: string
            Settable:
              description: settable
              type: array
              items:
                type: string
            Source:
              description: source
              type: string
            Type:
              description: type
              type: string
          x-go-package: github.com/docker/docker/api/types
    x-go-package: github.com/docker/docker/api/types
  Port:
    description: Port An open port on a container
    type: object
    required:
    - PrivatePort
    - Type
    properties:
      IP:
        description: Host IP address that the container's port is mapped to
        type: string
      PrivatePort:
        description: Port on the container
        type: integer
        format: uint16
      PublicPort:
        description: Port exposed on the host
        type: integer
        format: uint16
      Type:
        description: type
        type: string
    x-go-package: github.com/docker/docker/api/types
  Prometheus:
    description: Prometheus represents the prometheus session config
    type: object
    properties:
      prometheusURL:
        type: string
        x-go-name: PrometheusURL
      selectedPrometheusBoardsConfigs:
        type: array
        items:
          description: SelectedGrafanaConfig represents the selected boards, panels,
            and template variables
          type: object
          properties:
            board:
              description: GrafanaBoard represents a Grafana board
              type: object
              properties:
                org_id:
                  type: integer
                  format: uint64
                  x-go-name: OrgID
                panels:
                  type: array
                  items:
                    $ref: '#/definitions/Panel'
                  x-go-name: Panels
                slug:
                  type: string
                  x-go-name: Slug
                template_vars:
                  type: array
                  items:
                    description: GrafanaTemplateVars represents template variables
                      in a bboard
                    type: object
                    properties:
                      datasource:
                        description: GrafanaDataSource represents a Grafana datasource
                          like Prometheus
                        type: object
                        properties:
                          id:
                            type: integer
                            format: uint64
                            x-go-name: ID
                          name:
                            type: string
                            x-go-name: Name
                        x-go-package: github.com/layer5io/meshery/models
                      hide:
                        type: integer
                        format: uint8
                        x-go-name: Hide
                      name:
                        type: string
                        x-go-name: Name
                      query:
                        type: string
                        x-go-name: Query
                      value:
                        type: object
                        x-go-name: Value
                    x-go-package: github.com/layer5io/meshery/models
                  x-go-name: TemplateVars
                title:
                  type: string
                  x-go-name: Title
                uid:
                  type: string
                  x-go-name: UID
                uri:
                  type: string
                  x-go-name: URI
              x-go-package: github.com/layer5io/meshery/models
            panels:
              type: array
              items:
                $ref: '#/definitions/Panel'
              x-go-name: GrafanaPanels
            templateVars:
              type: array
              items:
                type: string
              x-go-name: SelectedTemplateVars
          x-go-package: github.com/layer5io/meshery/models
        x-go-name: SelectedPrometheusBoardsConfigs
    x-go-package: github.com/layer5io/meshery/models
  Protocol:
    type: string
    title: Protocol defines network protocols supported for things like container
      ports.
    x-go-package: k8s.io/api/core/v1
  RangeMap:
    type: object
    properties:
      from:
        type: string
        x-go-name: From
      text:
        type: string
        x-go-name: Text
      to:
        type: string
        x-go-name: To
    x-go-package: github.com/grafana-tools/sdk
  RunnerResults:
    type: object
    properties:
      ActualDuration:
        type: integer
        format: uint64
        x-go-name: Duration
      ActualQPS:
        type: number
        format: double
        x-go-name: QPS
      DurationHistogram:
        type: object
        properties:
          Avg:
            type: number
            format: double
            x-go-name: Average
          Max:
            type: number
            format: double
          Min:
            type: number
            format: double
          Percentiles:
            type: array
            items:
              type: object
              properties:
                Percentile:
                  type: number
                  format: double
                Value:
                  type: number
                  format: double
      StartTime:
        type: string
        format: date-time
      URL:
        type: string
      load-generator:
        type: string
        x-go-name: LoadGenerator
    x-go-package: github.com/layer5io/meshery/models
  SelectedGrafanaConfig:
    description: SelectedGrafanaConfig represents the selected boards, panels, and
      template variables
    type: object
    properties:
      board:
        description: GrafanaBoard represents a Grafana board
        type: object
        properties:
          org_id:
            type: integer
            format: uint64
            x-go-name: OrgID
          panels:
            type: array
            items:
              $ref: '#/definitions/Panel'
            x-go-name: Panels
          slug:
            type: string
            x-go-name: Slug
          template_vars:
            type: array
            items:
              description: GrafanaTemplateVars represents template variables in a
                bboard
              type: object
              properties:
                datasource:
                  description: GrafanaDataSource represents a Grafana datasource like
                    Prometheus
                  type: object
                  properties:
                    id:
                      type: integer
                      format: uint64
                      x-go-name: ID
                    name:
                      type: string
                      x-go-name: Name
                  x-go-package: github.com/layer5io/meshery/models
                hide:
                  type: integer
                  format: uint8
                  x-go-name: Hide
                name:
                  type: string
                  x-go-name: Name
                query:
                  type: string
                  x-go-name: Query
                value:
                  type: object
                  x-go-name: Value
              x-go-package: github.com/layer5io/meshery/models
            x-go-name: TemplateVars
          title:
            type: string
            x-go-name: Title
          uid:
            type: string
            x-go-name: UID
          uri:
            type: string
            x-go-name: URI
        x-go-package: github.com/layer5io/meshery/models
      panels:
        type: array
        items:
          $ref: '#/definitions/Panel'
        x-go-name: GrafanaPanels
      templateVars:
        type: array
        items:
          type: string
        x-go-name: SelectedTemplateVars
    x-go-package: github.com/layer5io/meshery/models
  SeriesOverride:
    description: for a graph panel
    type: object
    properties:
      alias:
        type: string
        x-go-name: Alias
      bars:
        type: boolean
        x-go-name: Bars
      color:
        type: string
        x-go-name: Color
      fill:
        type: integer
        format: int64
        x-go-name: Fill
      fillBelowTo:
        type: string
        x-go-name: FillBelowTo
      legend:
        type: boolean
        x-go-name: Legend
      lines:
        type: boolean
        x-go-name: Lines
      nullPointMode:
        type: string
        x-go-name: NullPointMode
      stack:
        type: object
        properties:
          Flag:
            type: boolean
          Value:
            type: string
        x-go-package: github.com/grafana-tools/sdk
      transform:
        type: string
        x-go-name: Transform
      yaxis:
        type: integer
        format: int64
        x-go-name: YAxis
      zindex:
        type: integer
        format: int64
        x-go-name: ZIndex
    x-go-package: github.com/grafana-tools/sdk
  Service:
    description: |-
      Service is a named abstraction of software service (for example, mysql) consisting of local port
      (for example 3306) that the proxy listens on, and the selector that determines which pods
      will answer requests sent through the proxy.
    type: object
    properties:
      annotations:
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
        additionalProperties:
          type: string
        x-go-name: Annotations
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
        x-go-name: APIVersion
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
          +optional
        type: string
        x-go-name: ClusterName
      creationTimestamp:
        description: |-
          +protobuf.options.marshal=false
          +protobuf.as=Timestamp
          +protobuf.options.(gogoproto.goproto_stringer)=false
        type: object
        title: |-
          Time is a wrapper around time.Time which supports correct
          marshaling to YAML and JSON.  Wrappers are provided for many
          of the factory methods that the time package offers.
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
        format: int64
        x-go-name: DeletionGracePeriodSeconds
      deletionTimestamp:
        description: |-
          +protobuf.options.marshal=false
          +protobuf.as=Timestamp
          +protobuf.options.(gogoproto.goproto_stringer)=false
        type: object
        title: |-
          Time is a wrapper around time.Time which supports correct
          marshaling to YAML and JSON.  Wrappers are provided for many
          of the factory methods that the time package offers.
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        type: array
        items:
          type: string
        x-go-name: Finalizers
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
        x-go-name: GenerateName
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
        format: int64
        x-go-name: Generation
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
        x-go-name: Kind
      labels:
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
        additionalProperties:
          type: string
        x-go-name: Labels
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        type: array
        items:
          description: |-
            ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource
            that the fieldset applies to.
          type: object
          properties:
            apiVersion:
              description: |-
                APIVersion defines the version of this resource that this field set
                applies to. The format is "group/version" just like the top-level
                APIVersion field. It is necessary to track the version of a field
                set because it cannot be automatically converted.
              type: string
              x-go-name: APIVersion
            fieldsType:
              description: |-
                FieldsType is the discriminator for the different fields format and version.
                There is currently only one possible value: "FieldsV1"
              type: string
              x-go-name: FieldsType
            fieldsV1:
              description: |-
                Each key is either a '.' representing the field itself, and will always map to an empty set,
                or a string representing a sub-field or item. The string will follow one of these four formats:
                'f:<name>', where <name> is the name of a field in a struct, or key in a map
                'v:<value>', where <value> is the exact json formatted value of a list item
                'i:<index>', where <index> is position of a item in a list
                'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values
                If a key maps to an empty Fields value, the field that key represents is part of the set.

                The exact format is defined in sigs.k8s.io/structured-merge-diff
              type: object
              title: FieldsV1 stores a set of fields in a data structure like a Trie,
                in JSON format.
              x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
            manager:
              description: Manager is an identifier of the workflow managing these
                fields.
              type: string
              x-go-name: Manager
            operation:
              type: string
              title: ManagedFieldsOperationType is the type of operation which lead
                to a ManagedFieldsEntry being created.
              x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
            time:
              description: |-
                +protobuf.options.marshal=false
                +protobuf.as=Timestamp
                +protobuf.options.(gogoproto.goproto_stringer)=false
              type: object
              title: |-
                Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many
                of the factory methods that the time package offers.
              x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
          x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
        x-go-name: ManagedFields
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
        x-go-name: Name
      namespace:
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
        x-go-name: Namespace
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        type: array
        items:
          description: |-
            OwnerReference contains enough information to let you identify an owning
            object. An owning object must be in the same namespace as the dependent, or
            be cluster-scoped, so there is no namespace field.
          type: object
          properties:
            apiVersion:
              description: API version of the referent.
              type: string
              x-go-name: APIVersion
            blockOwnerDeletion:
              description: |-
                If true, AND if the owner has the "foregroundDeletion" finalizer, then
                the owner cannot be deleted from the key-value store until this
                reference is removed.
                Defaults to false.
                To set this field, a user needs "delete" permission of the owner,
                otherwise 422 (Unprocessable Entity) will be returned.
                +optional
              type: boolean
              x-go-name: BlockOwnerDeletion
            controller:
              description: |-
                If true, this reference points to the managing controller.
                +optional
              type: boolean
              x-go-name: Controller
            kind:
              description: |-
                Kind of the referent.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
              x-go-name: Kind
            name:
              description: |-
                Name of the referent.
                More info: http://kubernetes.io/docs/user-guide/identifiers#names
              type: string
              x-go-name: Name
            uid:
              description: |-
                UID is a type that holds unique ID values, including UUIDs.  Because we
                don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                intent and helps make sure that UIDs and names do not get conflated.
              type: string
              x-go-package: k8s.io/apimachinery/pkg/types
          x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
        x-go-name: OwnerReferences
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
        x-go-name: ResourceVersion
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.

          DEPRECATED
          Kubernetes will stop propagating this field in 1.20 release and the field is planned
          to be removed in 1.21 release.
          +optional
        type: string
        x-go-name: SelfLink
      spec:
        type: object
        title: ServiceSpec describes the attributes that a user creates on a service.
        properties:
          clusterIP:
            description: |-
              clusterIP is the IP address of the service and is usually assigned
              randomly by the master. If an address is specified manually and is not in
              use by others, it will be allocated to the service; otherwise, creation
              of the service will fail. This field can not be changed through updates.
              Valid values are "None", empty string (""), or a valid IP address. "None"
              can be specified for headless services when proxying is not required.
              Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if
              type is ExternalName.
              More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
              +optional
            type: string
            x-go-name: ClusterIP
          externalIPs:
            description: |-
              externalIPs is a list of IP addresses for which nodes in the cluster
              will also accept traffic for this service.  These IPs are not managed by
              Kubernetes.  The user is responsible for ensuring that traffic arrives
              at a node with this IP.  A common example is external load-balancers
              that are not part of the Kubernetes system.
              +optional
            type: array
            items:
              type: string
            x-go-name: ExternalIPs
          externalName:
            description: |-
              externalName is the external reference that kubedns or equivalent will
              return as a CNAME record for this service. No proxying will be involved.
              Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
              and requires Type to be ExternalName.
              +optional
            type: string
            x-go-name: ExternalName
          externalTrafficPolicy:
            description: Service External Traffic Policy Type string
            type: string
            x-go-package: k8s.io/api/core/v1
          healthCheckNodePort:
            description: |-
              healthCheckNodePort specifies the healthcheck nodePort for the service.
              If not specified, HealthCheckNodePort is created by the service api
              backend with the allocated nodePort. Will use user-specified nodePort value
              if specified by the client. Only effects when Type is set to LoadBalancer
              and ExternalTrafficPolicy is set to Local.
              +optional
            type: integer
            format: int32
            x-go-name: HealthCheckNodePort
          ipFamily:
            description: |-
              IPFamily represents the IP Family (IPv4 or IPv6). This type is used
              to express the family of an IP expressed by a type (i.e. service.Spec.IPFamily)
            type: string
            x-go-package: k8s.io/api/core/v1
          loadBalancerIP:
            description: |-
              Only applies to Service Type: LoadBalancer
              LoadBalancer will get created with the IP specified in this field.
              This feature depends on whether the underlying cloud-provider supports specifying
              the loadBalancerIP when a load balancer is created.
              This field will be ignored if the cloud-provider does not support the feature.
              +optional
            type: string
            x-go-name: LoadBalancerIP
          loadBalancerSourceRanges:
            description: |-
              If specified and supported by the platform, this will restrict traffic through the cloud-provider
              load-balancer will be restricted to the specified client IPs. This field will be ignored if the
              cloud-provider does not support the feature."
              More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
              +optional
            type: array
            items:
              type: string
            x-go-name: LoadBalancerSourceRanges
          ports:
            description: |-
              The list of ports that are exposed by this service.
              More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
              +patchMergeKey=port
              +patchStrategy=merge
              +listType=map
              +listMapKey=port
              +listMapKey=protocol
            type: array
            items:
              type: object
              title: ServicePort contains information on service's port.
              properties:
                appProtocol:
                  description: |-
                    The application protocol for this port.
                    This field follows standard Kubernetes label syntax.
                    Un-prefixed names are reserved for IANA standard service names (as per
                    RFC-6335 and http://www.iana.org/assignments/service-names).
                    Non-standard protocols should use prefixed names such as
                    mycompany.com/my-custom-protocol.
                    Field can be enabled with ServiceAppProtocol feature gate.
                    +optional
                  type: string
                  x-go-name: AppProtocol
                name:
                  description: |-
                    The name of this port within the service. This must be a DNS_LABEL.
                    All ports within a ServiceSpec must have unique names. When considering
                    the endpoints for a Service, this must match the 'name' field in the
                    EndpointPort.
                    Optional if only one ServicePort is defined on this service.
                    +optional
                  type: string
                  x-go-name: Name
                nodePort:
                  description: |-
                    The port on each node on which this service is exposed when type=NodePort or LoadBalancer.
                    Usually assigned by the system. If specified, it will be allocated to the service
                    if unused or else creation of the service will fail.
                    Default is to auto-allocate a port if the ServiceType of this Service requires one.
                    More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                    +optional
                  type: integer
                  format: int32
                  x-go-name: NodePort
                port:
                  description: The port that will be exposed by this service.
                  type: integer
                  format: int32
                  x-go-name: Port
                protocol:
                  type: string
                  title: Protocol defines network protocols supported for things like
                    container ports.
                  x-go-package: k8s.io/api/core/v1
                targetPort:
                  description: |-
                    +protobuf=true
                    +protobuf.options.(gogoproto.goproto_stringer)=false
                    +k8s:openapi-gen=true
                  type: object
                  title: |-
                    IntOrString is a type that can hold an int32 or a string.  When used in
                    JSON or YAML marshalling and unmarshalling, it produces or consumes the
                    inner type.  This allows you to have, for example, a JSON field that can
                    accept a name or number.
                    TODO: Rename to Int32OrString
                  properties:
                    IntVal:
                      type: integer
                      format: int32
                    StrVal:
                      type: string
                    Type:
                      type: integer
                      format: int64
                      title: Type represents the stored type of IntOrString.
                      x-go-package: k8s.io/apimachinery/pkg/util/intstr
                  x-go-package: k8s.io/apimachinery/pkg/util/intstr
              x-go-package: k8s.io/api/core/v1
            x-go-name: Ports
          publishNotReadyAddresses:
            description: |-
              publishNotReadyAddresses, when set to true, indicates that DNS implementations
              must publish the notReadyAddresses of subsets for the Endpoints associated with
              the Service. The default value is false.
              The primary use case for setting this field is to use a StatefulSet's Headless Service
              to propagate SRV records for its Pods without respect to their readiness for purpose
              of peer discovery.
              +optional
            type: boolean
            x-go-name: PublishNotReadyAddresses
          selector:
            description: |-
              Route service traffic to pods with label keys and values matching this
              selector. If empty or not present, the service is assumed to have an
              external process managing its endpoints, which Kubernetes will not
              modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
              Ignored if type is ExternalName.
              More info: https://kubernetes.io/docs/concepts/services-networking/service/
              +optional
            type: object
            additionalProperties:
              type: string
            x-go-name: Selector
          sessionAffinity:
            description: Session Affinity Type string
            type: string
            x-go-package: k8s.io/api/core/v1
          sessionAffinityConfig:
            type: object
            title: SessionAffinityConfig represents the configurations of session
              affinity.
            properties:
              clientIP:
                type: object
                title: ClientIPConfig represents the configurations of Client IP based
                  session affinity.
                properties:
                  timeoutSeconds:
                    description: |-
                      timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                      The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                      Default value is 10800(for 3 hours).
                      +optional
                    type: integer
                    format: int32
                    x-go-name: TimeoutSeconds
                x-go-package: k8s.io/api/core/v1
            x-go-package: k8s.io/api/core/v1
          topologyKeys:
            description: |-
              topologyKeys is a preference-order list of topology keys which
              implementations of services should use to preferentially sort endpoints
              when accessing this Service, it can not be used at the same time as
              externalTrafficPolicy=Local.
              Topology keys must be valid label keys and at most 16 keys may be specified.
              Endpoints are chosen based on the first topology key with available backends.
              If this field is specified and all entries have no backends that match
              the topology of the client, the service has no backends for that client
              and connections should fail.
              The special value "*" may be used to mean "any topology". This catch-all
              value, if used, only makes sense as the last value in the list.
              If this is not specified or empty, no topology constraints will be applied.
              +optional
            type: array
            items:
              type: string
            x-go-name: TopologyKeys
          type:
            description: Service Type string describes ingress methods for a service
            type: string
            x-go-package: k8s.io/api/core/v1
        x-go-package: k8s.io/api/core/v1
      status:
        type: object
        title: ServiceStatus represents the current status of a service.
        properties:
          loadBalancer:
            type: object
            title: LoadBalancerStatus represents the status of a load-balancer.
            properties:
              ingress:
                description: |-
                  Ingress is a list containing ingress points for the load-balancer.
                  Traffic intended for the service should be sent to these ingress points.
                  +optional
                type: array
                items:
                  description: traffic intended for the service should be sent to
                    an ingress point.
                  type: object
                  title: 'LoadBalancerIngress represents the status of a load-balancer
                    ingress point:'
                  properties:
                    hostname:
                      description: |-
                        Hostname is set for load-balancer ingress points that are DNS based
                        (typically AWS load-balancers)
                        +optional
                      type: string
                      x-go-name: Hostname
                    ip:
                      description: |-
                        IP is set for load-balancer ingress points that are IP based
                        (typically GCE or OpenStack load-balancers)
                        +optional
                      type: string
                      x-go-name: IP
                  x-go-package: k8s.io/api/core/v1
                x-go-name: Ingress
            x-go-package: k8s.io/api/core/v1
        x-go-package: k8s.io/api/core/v1
      uid:
        description: |-
          UID is a type that holds unique ID values, including UUIDs.  Because we
          don't ONLY use UUIDs, this is an alias to string.  Being a type captures
          intent and helps make sure that UIDs and names do not get conflated.
        type: string
        x-go-package: k8s.io/apimachinery/pkg/types
    x-go-package: k8s.io/api/core/v1
  ServiceAffinity:
    description: Session Affinity Type string
    type: string
    x-go-package: k8s.io/api/core/v1
  ServiceExternalTrafficPolicyType:
    description: Service External Traffic Policy Type string
    type: string
    x-go-package: k8s.io/api/core/v1
  ServicePort:
    type: object
    title: ServicePort contains information on service's port.
    properties:
      appProtocol:
        description: |-
          The application protocol for this port.
          This field follows standard Kubernetes label syntax.
          Un-prefixed names are reserved for IANA standard service names (as per
          RFC-6335 and http://www.iana.org/assignments/service-names).
          Non-standard protocols should use prefixed names such as
          mycompany.com/my-custom-protocol.
          Field can be enabled with ServiceAppProtocol feature gate.
          +optional
        type: string
        x-go-name: AppProtocol
      name:
        description: |-
          The name of this port within the service. This must be a DNS_LABEL.
          All ports within a ServiceSpec must have unique names. When considering
          the endpoints for a Service, this must match the 'name' field in the
          EndpointPort.
          Optional if only one ServicePort is defined on this service.
          +optional
        type: string
        x-go-name: Name
      nodePort:
        description: |-
          The port on each node on which this service is exposed when type=NodePort or LoadBalancer.
          Usually assigned by the system. If specified, it will be allocated to the service
          if unused or else creation of the service will fail.
          Default is to auto-allocate a port if the ServiceType of this Service requires one.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
          +optional
        type: integer
        format: int32
        x-go-name: NodePort
      port:
        description: The port that will be exposed by this service.
        type: integer
        format: int32
        x-go-name: Port
      protocol:
        type: string
        title: Protocol defines network protocols supported for things like container
          ports.
        x-go-package: k8s.io/api/core/v1
      targetPort:
        description: |-
          +protobuf=true
          +protobuf.options.(gogoproto.goproto_stringer)=false
          +k8s:openapi-gen=true
        type: object
        title: |-
          IntOrString is a type that can hold an int32 or a string.  When used in
          JSON or YAML marshalling and unmarshalling, it produces or consumes the
          inner type.  This allows you to have, for example, a JSON field that can
          accept a name or number.
          TODO: Rename to Int32OrString
        properties:
          IntVal:
            type: integer
            format: int32
          StrVal:
            type: string
          Type:
            type: integer
            format: int64
            title: Type represents the stored type of IntOrString.
            x-go-package: k8s.io/apimachinery/pkg/util/intstr
        x-go-package: k8s.io/apimachinery/pkg/util/intstr
    x-go-package: k8s.io/api/core/v1
  ServiceSpec:
    type: object
    title: ServiceSpec describes the attributes that a user creates on a service.
    properties:
      clusterIP:
        description: |-
          clusterIP is the IP address of the service and is usually assigned
          randomly by the master. If an address is specified manually and is not in
          use by others, it will be allocated to the service; otherwise, creation
          of the service will fail. This field can not be changed through updates.
          Valid values are "None", empty string (""), or a valid IP address. "None"
          can be specified for headless services when proxying is not required.
          Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if
          type is ExternalName.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +optional
        type: string
        x-go-name: ClusterIP
      externalIPs:
        description: |-
          externalIPs is a list of IP addresses for which nodes in the cluster
          will also accept traffic for this service.  These IPs are not managed by
          Kubernetes.  The user is responsible for ensuring that traffic arrives
          at a node with this IP.  A common example is external load-balancers
          that are not part of the Kubernetes system.
          +optional
        type: array
        items:
          type: string
        x-go-name: ExternalIPs
      externalName:
        description: |-
          externalName is the external reference that kubedns or equivalent will
          return as a CNAME record for this service. No proxying will be involved.
          Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
          and requires Type to be ExternalName.
          +optional
        type: string
        x-go-name: ExternalName
      externalTrafficPolicy:
        description: Service External Traffic Policy Type string
        type: string
        x-go-package: k8s.io/api/core/v1
      healthCheckNodePort:
        description: |-
          healthCheckNodePort specifies the healthcheck nodePort for the service.
          If not specified, HealthCheckNodePort is created by the service api
          backend with the allocated nodePort. Will use user-specified nodePort value
          if specified by the client. Only effects when Type is set to LoadBalancer
          and ExternalTrafficPolicy is set to Local.
          +optional
        type: integer
        format: int32
        x-go-name: HealthCheckNodePort
      ipFamily:
        description: |-
          IPFamily represents the IP Family (IPv4 or IPv6). This type is used
          to express the family of an IP expressed by a type (i.e. service.Spec.IPFamily)
        type: string
        x-go-package: k8s.io/api/core/v1
      loadBalancerIP:
        description: |-
          Only applies to Service Type: LoadBalancer
          LoadBalancer will get created with the IP specified in this field.
          This feature depends on whether the underlying cloud-provider supports specifying
          the loadBalancerIP when a load balancer is created.
          This field will be ignored if the cloud-provider does not support the feature.
          +optional
        type: string
        x-go-name: LoadBalancerIP
      loadBalancerSourceRanges:
        description: |-
          If specified and supported by the platform, this will restrict traffic through the cloud-provider
          load-balancer will be restricted to the specified client IPs. This field will be ignored if the
          cloud-provider does not support the feature."
          More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
          +optional
        type: array
        items:
          type: string
        x-go-name: LoadBalancerSourceRanges
      ports:
        description: |-
          The list of ports that are exposed by this service.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +patchMergeKey=port
          +patchStrategy=merge
          +listType=map
          +listMapKey=port
          +listMapKey=protocol
        type: array
        items:
          type: object
          title: ServicePort contains information on service's port.
          properties:
            appProtocol:
              description: |-
                The application protocol for this port.
                This field follows standard Kubernetes label syntax.
                Un-prefixed names are reserved for IANA standard service names (as per
                RFC-6335 and http://www.iana.org/assignments/service-names).
                Non-standard protocols should use prefixed names such as
                mycompany.com/my-custom-protocol.
                Field can be enabled with ServiceAppProtocol feature gate.
                +optional
              type: string
              x-go-name: AppProtocol
            name:
              description: |-
                The name of this port within the service. This must be a DNS_LABEL.
                All ports within a ServiceSpec must have unique names. When considering
                the endpoints for a Service, this must match the 'name' field in the
                EndpointPort.
                Optional if only one ServicePort is defined on this service.
                +optional
              type: string
              x-go-name: Name
            nodePort:
              description: |-
                The port on each node on which this service is exposed when type=NodePort or LoadBalancer.
                Usually assigned by the system. If specified, it will be allocated to the service
                if unused or else creation of the service will fail.
                Default is to auto-allocate a port if the ServiceType of this Service requires one.
                More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                +optional
              type: integer
              format: int32
              x-go-name: NodePort
            port:
              description: The port that will be exposed by this service.
              type: integer
              format: int32
              x-go-name: Port
            protocol:
              type: string
              title: Protocol defines network protocols supported for things like
                container ports.
              x-go-package: k8s.io/api/core/v1
            targetPort:
              description: |-
                +protobuf=true
                +protobuf.options.(gogoproto.goproto_stringer)=false
                +k8s:openapi-gen=true
              type: object
              title: |-
                IntOrString is a type that can hold an int32 or a string.  When used in
                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                inner type.  This allows you to have, for example, a JSON field that can
                accept a name or number.
                TODO: Rename to Int32OrString
              properties:
                IntVal:
                  type: integer
                  format: int32
                StrVal:
                  type: string
                Type:
                  type: integer
                  format: int64
                  title: Type represents the stored type of IntOrString.
                  x-go-package: k8s.io/apimachinery/pkg/util/intstr
              x-go-package: k8s.io/apimachinery/pkg/util/intstr
          x-go-package: k8s.io/api/core/v1
        x-go-name: Ports
      publishNotReadyAddresses:
        description: |-
          publishNotReadyAddresses, when set to true, indicates that DNS implementations
          must publish the notReadyAddresses of subsets for the Endpoints associated with
          the Service. The default value is false.
          The primary use case for setting this field is to use a StatefulSet's Headless Service
          to propagate SRV records for its Pods without respect to their readiness for purpose
          of peer discovery.
          +optional
        type: boolean
        x-go-name: PublishNotReadyAddresses
      selector:
        description: |-
          Route service traffic to pods with label keys and values matching this
          selector. If empty or not present, the service is assumed to have an
          external process managing its endpoints, which Kubernetes will not
          modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
          Ignored if type is ExternalName.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/
          +optional
        type: object
        additionalProperties:
          type: string
        x-go-name: Selector
      sessionAffinity:
        description: Session Affinity Type string
        type: string
        x-go-package: k8s.io/api/core/v1
      sessionAffinityConfig:
        type: object
        title: SessionAffinityConfig represents the configurations of session affinity.
        properties:
          clientIP:
            type: object
            title: ClientIPConfig represents the configurations of Client IP based
              session affinity.
            properties:
              timeoutSeconds:
                description: |-
                  timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                  The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                  Default value is 10800(for 3 hours).
                  +optional
                type: integer
                format: int32
                x-go-name: TimeoutSeconds
            x-go-package: k8s.io/api/core/v1
        x-go-package: k8s.io/api/core/v1
      topologyKeys:
        description: |-
          topologyKeys is a preference-order list of topology keys which
          implementations of services should use to preferentially sort endpoints
          when accessing this Service, it can not be used at the same time as
          externalTrafficPolicy=Local.
          Topology keys must be valid label keys and at most 16 keys may be specified.
          Endpoints are chosen based on the first topology key with available backends.
          If this field is specified and all entries have no backends that match
          the topology of the client, the service has no backends for that client
          and connections should fail.
          The special value "*" may be used to mean "any topology". This catch-all
          value, if used, only makes sense as the last value in the list.
          If this is not specified or empty, no topology constraints will be applied.
          +optional
        type: array
        items:
          type: string
        x-go-name: TopologyKeys
      type:
        description: Service Type string describes ingress methods for a service
        type: string
        x-go-package: k8s.io/api/core/v1
    x-go-package: k8s.io/api/core/v1
  ServiceStatus:
    type: object
    title: ServiceStatus represents the current status of a service.
    properties:
      loadBalancer:
        type: object
        title: LoadBalancerStatus represents the status of a load-balancer.
        properties:
          ingress:
            description: |-
              Ingress is a list containing ingress points for the load-balancer.
              Traffic intended for the service should be sent to these ingress points.
              +optional
            type: array
            items:
              description: traffic intended for the service should be sent to an ingress
                point.
              type: object
              title: 'LoadBalancerIngress represents the status of a load-balancer
                ingress point:'
              properties:
                hostname:
                  description: |-
                    Hostname is set for load-balancer ingress points that are DNS based
                    (typically AWS load-balancers)
                    +optional
                  type: string
                  x-go-name: Hostname
                ip:
                  description: |-
                    IP is set for load-balancer ingress points that are IP based
                    (typically GCE or OpenStack load-balancers)
                    +optional
                  type: string
                  x-go-name: IP
              x-go-package: k8s.io/api/core/v1
            x-go-name: Ingress
        x-go-package: k8s.io/api/core/v1
    x-go-package: k8s.io/api/core/v1
  ServiceType:
    description: Service Type string describes ingress methods for a service
    type: string
    x-go-package: k8s.io/api/core/v1
  ServiceUpdateResponse:
    description: ServiceUpdateResponse service update response
    type: object
    properties:
      Warnings:
        description: Optional warning messages
        type: array
        items:
          type: string
    x-go-package: github.com/docker/docker/api/types
  SessionAffinityConfig:
    type: object
    title: SessionAffinityConfig represents the configurations of session affinity.
    properties:
      clientIP:
        type: object
        title: ClientIPConfig represents the configurations of Client IP based session
          affinity.
        properties:
          timeoutSeconds:
            description: |-
              timeoutSeconds specifies the seconds of ClientIP type session sticky time.
              The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
              Default value is 10800(for 3 hours).
              +optional
            type: integer
            format: int32
            x-go-name: TimeoutSeconds
        x-go-package: k8s.io/api/core/v1
    x-go-package: k8s.io/api/core/v1
  Sort:
    description: for a graph panel
    type: object
    properties:
      col:
        type: integer
        format: int64
        x-go-name: Col
      desc:
        type: boolean
        x-go-name: Desc
    x-go-package: github.com/grafana-tools/sdk
  SparkLine:
    description: for a singlestat
    type: object
    properties:
      fillColor:
        type: string
        x-go-name: FillColor
      full:
        type: boolean
        x-go-name: Full
      lineColor:
        type: string
        x-go-name: LineColor
      show:
        type: boolean
        x-go-name: Show
      ymax:
        type: number
        format: double
        x-go-name: YMax
      ymin:
        type: number
        format: double
        x-go-name: YMin
    x-go-package: github.com/grafana-tools/sdk
  StringArray:
    type: array
    title: StringArray represents a one-dimensional array of the PostgreSQL character
      types.
    items:
      type: string
    x-go-package: github.com/lib/pq
  Target:
    description: for an any panel
    type: object
    properties:
      alias:
        type: string
        x-go-name: Alias
      bucketAggs:
        type: array
        items:
          type: object
          properties:
            field:
              type: string
              x-go-name: Field
            id:
              type: string
              x-go-name: ID
            settings:
              type: object
              properties:
                interval:
                  type: string
                  x-go-name: Interval
                min_doc_count:
                  type: integer
                  format: int64
                  x-go-name: MinDocCount
                order:
                  type: string
                  x-go-name: Order
                orderBy:
                  type: string
                  x-go-name: OrderBy
                size:
                  type: string
                  x-go-name: Size
              x-go-name: Settings
            type:
              type: string
              x-go-name: Type
        x-go-name: BucketAggs
      datasource:
        type: string
        x-go-name: Datasource
      dimensions:
        type: object
        additionalProperties:
          type: string
        x-go-name: Dimensions
      dsType:
        description: For Elasticsearch
        type: string
        x-go-name: DsType
      expr:
        description: For Prometheus
        type: string
        x-go-name: Expr
      format:
        type: string
        x-go-name: Format
      instant:
        type: boolean
        x-go-name: Instant
      interval:
        type: string
        x-go-name: Interval
      intervalFactor:
        type: integer
        format: int64
        x-go-name: IntervalFactor
      legendFormat:
        type: string
        x-go-name: LegendFormat
      metricName:
        type: string
        x-go-name: MetricName
      metrics:
        type: array
        items:
          type: object
          properties:
            field:
              type: string
              x-go-name: Field
            id:
              type: string
              x-go-name: ID
            type:
              type: string
              x-go-name: Type
        x-go-name: Metrics
      namespace:
        description: For CloudWatch
        type: string
        x-go-name: Namespace
      period:
        type: string
        x-go-name: Period
      query:
        type: string
        x-go-name: Query
      rawQuery:
        type: boolean
        x-go-name: RawQuery
      refId:
        type: string
        x-go-name: RefID
      region:
        type: string
        x-go-name: Region
      statistics:
        type: array
        items:
          type: string
        x-go-name: Statistics
      step:
        type: integer
        format: int64
        x-go-name: Step
      target:
        description: For Graphite
        type: string
        x-go-name: Target
      timeField:
        type: string
        x-go-name: TimeField
    x-go-package: github.com/grafana-tools/sdk
  Threshold:
    type: object
    properties:
      colorMode:
        description: critical, warning, ok, custom
        type: string
        x-go-name: ColorMode
      fill:
        type: boolean
        x-go-name: Fill
      fillColor:
        description: 'hexadecimal color (e.g. #629e51, only when ColorMode is "custom")'
        type: string
        x-go-name: FillColor
      line:
        type: boolean
        x-go-name: Line
      lineColor:
        description: 'hexadecimal color (e.g. #629e51, only when ColorMode is "custom")'
        type: string
        x-go-name: LineColor
      op:
        description: gt or lt
        type: string
        x-go-name: Op
      value:
        description: |-
          the alert threshold value, we do not omitempty, since 0 is a valid
          threshold
        type: number
        format: float
        x-go-name: Value
      yaxis:
        description: left or right
        type: string
        x-go-name: Yaxis
    x-go-package: github.com/grafana-tools/sdk
  Time:
    description: |-
      +protobuf.options.marshal=false
      +protobuf.as=Timestamp
      +protobuf.options.(gogoproto.goproto_stringer)=false
    type: object
    title: |-
      Time is a wrapper around time.Time which supports correct
      marshaling to YAML and JSON.  Wrappers are provided for many
      of the factory methods that the time package offers.
    x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
  Tooltip:
    type: object
    properties:
      msResolution:
        type: boolean
        x-go-name: MsResolution
      shared:
        type: boolean
        x-go-name: Shared
      sort:
        type: integer
        format: int64
        x-go-name: Sort
      value_type:
        type: string
        x-go-name: ValueType
    x-go-package: github.com/grafana-tools/sdk
  Type:
    type: integer
    format: int64
    title: Type represents the stored type of IntOrString.
    x-go-package: k8s.io/apimachinery/pkg/util/intstr
  UID:
    description: |-
      UID is a type that holds unique ID values, including UUIDs.  Because we
      don't ONLY use UUIDs, this is an alias to string.  Being a type captures
      intent and helps make sure that UIDs and names do not get conflated.
    type: string
    x-go-package: k8s.io/apimachinery/pkg/types
  UUID:
    type: array
    title: UUID is an array type to represent the value of a UUID, as defined in RFC-4122.
    items:
      type: integer
      format: uint8
    x-go-package: github.com/gofrs/uuid
  ValueMap:
    description: for a singlestat
    type: object
    properties:
      op:
        type: string
        x-go-name: Op
      text:
        type: string
        x-go-name: TextType
      value:
        type: string
        x-go-name: Value
    x-go-package: github.com/grafana-tools/sdk
  Volume:
    description: Volume volume
    type: object
    required:
    - Driver
    - Labels
    - Mountpoint
    - Name
    - Options
    - Scope
    properties:
      CreatedAt:
        description: Date/Time the volume was created.
        type: string
      Driver:
        description: Name of the volume driver used by the volume.
        type: string
      Labels:
        description: User-defined key/value metadata.
        type: object
        additionalProperties:
          type: string
      Mountpoint:
        description: Mount path of the volume on the host.
        type: string
      Name:
        description: Name of the volume.
        type: string
      Options:
        description: The driver specific options used when creating the volume.
        type: object
        additionalProperties:
          type: string
      Scope:
        description: The level at which the volume exists. Either `global` for cluster-wide,
          or `local` for machine level.
        type: string
      Status:
        description: |-
          Low-level details about the volume, provided by the volume driver.
          Details are returned as a map with key/value pairs:
          `{"key":"value","key2":"value2"}`.

          The `Status` field is optional, and is omitted if the volume driver
          does not support this feature.
        type: object
        additionalProperties:
          type: object
      UsageData:
        description: |-
          VolumeUsageData Usage details about the volume. This information is used by the
          `GET /system/df` endpoint, and omitted in other endpoints.
        type: object
        required:
        - RefCount
        - Size
        properties:
          RefCount:
            description: |-
              The number of containers referencing this volume. This field
              is set to `-1` if the reference-count is not available.
            type: integer
            format: int64
          Size:
            description: |-
              Amount of disk space used by the volume (in bytes). This information
              is only available for volumes created with the `"local"` volume
              driver. For volumes created with other volume drivers, this field
              is set to `-1` ("not available")
            type: integer
            format: int64
        x-go-package: github.com/docker/docker/api/types
    x-go-package: github.com/docker/docker/api/types
  VolumeCreateBody:
    description: VolumeCreateBody Volume configuration
    type: object
    required:
    - Driver
    - DriverOpts
    - Labels
    - Name
    properties:
      Driver:
        description: Name of the volume driver to use.
        type: string
      DriverOpts:
        description: A mapping of driver options and values. These options are passed
          directly to the driver and are driver specific.
        type: object
        additionalProperties:
          type: string
      Labels:
        description: User-defined key/value metadata.
        type: object
        additionalProperties:
          type: string
      Name:
        description: The new volume's name. If not specified, Docker generates a name.
        type: string
    x-go-package: github.com/docker/docker/api/types/volume
  VolumeListOKBody:
    description: VolumeListOKBody Volume list response
    type: object
    required:
    - Volumes
    - Warnings
    properties:
      Volumes:
        description: List of volumes
        type: array
        items:
          description: Volume volume
          type: object
          required:
          - Driver
          - Labels
          - Mountpoint
          - Name
          - Options
          - Scope
          properties:
            CreatedAt:
              description: Date/Time the volume was created.
              type: string
            Driver:
              description: Name of the volume driver used by the volume.
              type: string
            Labels:
              description: User-defined key/value metadata.
              type: object
              additionalProperties:
                type: string
            Mountpoint:
              description: Mount path of the volume on the host.
              type: string
            Name:
              description: Name of the volume.
              type: string
            Options:
              description: The driver specific options used when creating the volume.
              type: object
              additionalProperties:
                type: string
            Scope:
              description: The level at which the volume exists. Either `global` for
                cluster-wide, or `local` for machine level.
              type: string
            Status:
              description: |-
                Low-level details about the volume, provided by the volume driver.
                Details are returned as a map with key/value pairs:
                `{"key":"value","key2":"value2"}`.

                The `Status` field is optional, and is omitted if the volume driver
                does not support this feature.
              type: object
              additionalProperties:
                type: object
            UsageData:
              description: |-
                VolumeUsageData Usage details about the volume. This information is used by the
                `GET /system/df` endpoint, and omitted in other endpoints.
              type: object
              required:
              - RefCount
              - Size
              properties:
                RefCount:
                  description: |-
                    The number of containers referencing this volume. This field
                    is set to `-1` if the reference-count is not available.
                  type: integer
                  format: int64
                Size:
                  description: |-
                    Amount of disk space used by the volume (in bytes). This information
                    is only available for volumes created with the `"local"` volume
                    driver. For volumes created with other volume drivers, this field
                    is set to `-1` ("not available")
                  type: integer
                  format: int64
              x-go-package: github.com/docker/docker/api/types
          x-go-package: github.com/docker/docker/api/types
      Warnings:
        description: Warnings that occurred when fetching the list of volumes
        type: array
        items:
          type: string
    x-go-package: github.com/docker/docker/api/types/volume
  VolumeUsageData:
    description: |-
      VolumeUsageData Usage details about the volume. This information is used by the
      `GET /system/df` endpoint, and omitted in other endpoints.
    type: object
    required:
    - RefCount
    - Size
    properties:
      RefCount:
        description: |-
          The number of containers referencing this volume. This field
          is set to `-1` if the reference-count is not available.
        type: integer
        format: int64
      Size:
        description: |-
          Amount of disk space used by the volume (in bytes). This information
          is only available for volumes created with the `"local"` volume
          driver. For volumes created with other volume drivers, this field
          is set to `-1` ("not available")
        type: integer
        format: int64
    x-go-package: github.com/docker/docker/api/types
  link:
    description: link represents link to another dashboard or external weblink
    type: object
    properties:
      asDropdown:
        type: boolean
        x-go-name: AsDropdown
      dashUri:
        type: string
        x-go-name: DashURI
      dashboard:
        type: string
        x-go-name: Dashboard
      icon:
        type: string
        x-go-name: Icon
      includeVars:
        type: boolean
        x-go-name: IncludeVars
      keepTime:
        type: boolean
        x-go-name: KeepTime
      params:
        type: string
        x-go-name: Params
      tags:
        type: array
        items:
          type: string
        x-go-name: Tags
      targetBlank:
        type: boolean
        x-go-name: TargetBlank
      title:
        type: string
        x-go-name: Title
      tooltip:
        type: string
        x-go-name: Tooltip
      type:
        type: string
        x-go-name: Type
      url:
        type: string
        x-go-name: URL
    x-go-package: github.com/grafana-tools/sdk
responses:
  grafanaBoardsResponseWrapper:
    description: Returns Grafana boards and panels
    schema:
      type: array
      items:
        description: GrafanaBoard represents a Grafana board
        type: object
        properties:
          org_id:
            type: integer
            format: uint64
            x-go-name: OrgID
          panels:
            type: array
            items:
              $ref: '#/definitions/Panel'
            x-go-name: Panels
          slug:
            type: string
            x-go-name: Slug
          template_vars:
            type: array
            items:
              description: GrafanaTemplateVars represents template variables in a
                bboard
              type: object
              properties:
                datasource:
                  description: GrafanaDataSource represents a Grafana datasource like
                    Prometheus
                  type: object
                  properties:
                    id:
                      type: integer
                      format: uint64
                      x-go-name: ID
                    name:
                      type: string
                      x-go-name: Name
                  x-go-package: github.com/layer5io/meshery/models
                hide:
                  type: integer
                  format: uint8
                  x-go-name: Hide
                name:
                  type: string
                  x-go-name: Name
                query:
                  type: string
                  x-go-name: Query
                value:
                  type: object
                  x-go-name: Value
              x-go-package: github.com/layer5io/meshery/models
            x-go-name: TemplateVars
          title:
            type: string
            x-go-name: Title
          uid:
            type: string
            x-go-name: UID
          uri:
            type: string
            x-go-name: URI
        x-go-package: github.com/layer5io/meshery/models
  grafanaConfigResponseWrapper:
    description: Returns Grafana configs
    schema:
      description: Grafana represents the Grafana session config
      type: object
      properties:
        grafanaAPIKey:
          type: string
          x-go-name: GrafanaAPIKey
        grafanaURL:
          type: string
          x-go-name: GrafanaURL
        selectedBoardsConfigs:
          description: GrafanaBoardSearch string          `json:"grafanaBoardSearch,omitempty"`
          type: array
          items:
            description: SelectedGrafanaConfig represents the selected boards, panels,
              and template variables
            type: object
            properties:
              board:
                description: GrafanaBoard represents a Grafana board
                type: object
                properties:
                  org_id:
                    type: integer
                    format: uint64
                    x-go-name: OrgID
                  panels:
                    type: array
                    items:
                      $ref: '#/definitions/Panel'
                    x-go-name: Panels
                  slug:
                    type: string
                    x-go-name: Slug
                  template_vars:
                    type: array
                    items:
                      description: GrafanaTemplateVars represents template variables
                        in a bboard
                      type: object
                      properties:
                        datasource:
                          description: GrafanaDataSource represents a Grafana datasource
                            like Prometheus
                          type: object
                          properties:
                            id:
                              type: integer
                              format: uint64
                              x-go-name: ID
                            name:
                              type: string
                              x-go-name: Name
                          x-go-package: github.com/layer5io/meshery/models
                        hide:
                          type: integer
                          format: uint8
                          x-go-name: Hide
                        name:
                          type: string
                          x-go-name: Name
                        query:
                          type: string
                          x-go-name: Query
                        value:
                          type: object
                          x-go-name: Value
                      x-go-package: github.com/layer5io/meshery/models
                    x-go-name: TemplateVars
                  title:
                    type: string
                    x-go-name: Title
                  uid:
                    type: string
                    x-go-name: UID
                  uri:
                    type: string
                    x-go-name: URI
                x-go-package: github.com/layer5io/meshery/models
              panels:
                type: array
                items:
                  $ref: '#/definitions/Panel'
                x-go-name: GrafanaPanels
              templateVars:
                type: array
                items:
                  type: string
                x-go-name: SelectedTemplateVars
            x-go-package: github.com/layer5io/meshery/models
          x-go-name: GrafanaBoards
      x-go-package: github.com/layer5io/meshery/models
  mesheryPatternResponseWrapper:
    description: Returns a single meshery pattern
    schema:
      description: MesheryPattern represents the patterns that needs to be saved
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          x-go-name: CreatedAt
        id:
          type: array
          title: UUID is an array type to represent the value of a UUID, as defined
            in RFC-4122.
          items:
            type: integer
            format: uint8
          x-go-package: github.com/gofrs/uuid
        location:
          description: |-
            It implements native SQL driver interfaces and hence can
            be used for SQL json or jsonb types as a drop in replacement
            of golang native maps
          type: object
          title: Map type is an alias for map[string]interface{}
          additionalProperties:
            type: object
          x-go-package: github.com/layer5io/meshery/internal/sql
        name:
          type: string
          x-go-name: Name
        pattern_file:
          type: string
          x-go-name: PatternFile
        updated_at:
          type: string
          format: date-time
          x-go-name: UpdatedAt
        user_id:
          description: |-
            Meshery doesn't have the user id fields
            but the remote provider is allowed to provide one
          type: string
          x-go-name: UserID
      x-go-package: github.com/layer5io/meshery/models
  mesheryPatternsResponseWrapper:
    description: Returns all meshery patterns
    schema:
      description: PatternsAPIResponse response retruned by patternfile endpoint on
        meshery server
      type: object
      properties:
        page:
          type: integer
          format: uint64
          x-go-name: Page
        page_size:
          type: integer
          format: uint64
          x-go-name: PageSize
        patterns:
          type: array
          items:
            description: MesheryPattern represents the patterns that needs to be saved
            type: object
            properties:
              created_at:
                type: string
                format: date-time
                x-go-name: CreatedAt
              id:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              location:
                description: |-
                  It implements native SQL driver interfaces and hence can
                  be used for SQL json or jsonb types as a drop in replacement
                  of golang native maps
                type: object
                title: Map type is an alias for map[string]interface{}
                additionalProperties:
                  type: object
                x-go-package: github.com/layer5io/meshery/internal/sql
              name:
                type: string
                x-go-name: Name
              pattern_file:
                type: string
                x-go-name: PatternFile
              updated_at:
                type: string
                format: date-time
                x-go-name: UpdatedAt
              user_id:
                description: |-
                  Meshery doesn't have the user id fields
                  but the remote provider is allowed to provide one
                type: string
                x-go-name: UserID
            x-go-package: github.com/layer5io/meshery/models
          x-go-name: Patterns
        total_size:
          type: integer
          format: uint64
          x-go-name: TotalCount
      x-go-package: github.com/layer5io/meshery/models
  noContentWrapper:
    description: ""
  performanceProfileResponseWrapper:
    description: Returns a single performance profile
    schema:
      description: |-
        PerformanceProfile represents the performance profile that needs
        to be saved
      type: object
      properties:
        concurrent_request:
          type: integer
          format: int64
          x-go-name: ConcurrentRequest
        content_type:
          type: string
          x-go-name: ContentType
        created_at:
          description: |-
            +protobuf.options.marshal=false
            +protobuf.as=Timestamp
            +protobuf.options.(gogoproto.goproto_stringer)=false
          type: object
          title: |-
            Time is a wrapper around time.Time which supports correct
            marshaling to YAML and JSON.  Wrappers are provided for many
            of the factory methods that the time package offers.
          x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
        duration:
          type: string
          x-go-name: Duration
        endpoints:
          type: array
          title: StringArray represents a one-dimensional array of the PostgreSQL
            character types.
          items:
            type: string
          x-go-package: github.com/lib/pq
        id:
          type: array
          title: UUID is an array type to represent the value of a UUID, as defined
            in RFC-4122.
          items:
            type: integer
            format: uint8
          x-go-package: github.com/gofrs/uuid
        last_run:
          description: |-
            +protobuf.options.marshal=false
            +protobuf.as=Timestamp
            +protobuf.options.(gogoproto.goproto_stringer)=false
          type: object
          title: |-
            Time is a wrapper around time.Time which supports correct
            marshaling to YAML and JSON.  Wrappers are provided for many
            of the factory methods that the time package offers.
          x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
        load_generators:
          type: array
          title: StringArray represents a one-dimensional array of the PostgreSQL
            character types.
          items:
            type: string
          x-go-package: github.com/lib/pq
        name:
          type: string
          x-go-name: Name
        qps:
          type: integer
          format: int64
          x-go-name: QPS
        request_body:
          type: string
          x-go-name: RequestBody
        request_cookies:
          type: string
          x-go-name: RequestCookies
        request_headers:
          type: string
          x-go-name: RequestHeaders
        schedule:
          type: array
          title: UUID is an array type to represent the value of a UUID, as defined
            in RFC-4122.
          items:
            type: integer
            format: uint8
          x-go-package: github.com/gofrs/uuid
        service_mesh:
          type: string
          x-go-name: ServiceMesh
        total_results:
          type: integer
          format: int64
          x-go-name: TotalResults
        updated_at:
          description: |-
            +protobuf.options.marshal=false
            +protobuf.as=Timestamp
            +protobuf.options.(gogoproto.goproto_stringer)=false
          type: object
          title: |-
            Time is a wrapper around time.Time which supports correct
            marshaling to YAML and JSON.  Wrappers are provided for many
            of the factory methods that the time package offers.
          x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
      x-go-package: github.com/layer5io/meshery/models
  performanceProfilesResponseWrapper:
    description: Returns all the performance profiles
    schema:
      description: PerformanceProfilesAPIResponse response retruned by performance
        endpoint on meshery server
      type: object
      properties:
        page:
          type: integer
          format: uint64
          x-go-name: Page
        page_size:
          type: integer
          format: uint64
          x-go-name: PageSize
        profiles:
          type: array
          items:
            description: |-
              PerformanceProfile represents the performance profile that needs
              to be saved
            type: object
            properties:
              concurrent_request:
                type: integer
                format: int64
                x-go-name: ConcurrentRequest
              content_type:
                type: string
                x-go-name: ContentType
              created_at:
                description: |-
                  +protobuf.options.marshal=false
                  +protobuf.as=Timestamp
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                type: object
                title: |-
                  Time is a wrapper around time.Time which supports correct
                  marshaling to YAML and JSON.  Wrappers are provided for many
                  of the factory methods that the time package offers.
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
              duration:
                type: string
                x-go-name: Duration
              endpoints:
                type: array
                title: StringArray represents a one-dimensional array of the PostgreSQL
                  character types.
                items:
                  type: string
                x-go-package: github.com/lib/pq
              id:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              last_run:
                description: |-
                  +protobuf.options.marshal=false
                  +protobuf.as=Timestamp
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                type: object
                title: |-
                  Time is a wrapper around time.Time which supports correct
                  marshaling to YAML and JSON.  Wrappers are provided for many
                  of the factory methods that the time package offers.
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
              load_generators:
                type: array
                title: StringArray represents a one-dimensional array of the PostgreSQL
                  character types.
                items:
                  type: string
                x-go-package: github.com/lib/pq
              name:
                type: string
                x-go-name: Name
              qps:
                type: integer
                format: int64
                x-go-name: QPS
              request_body:
                type: string
                x-go-name: RequestBody
              request_cookies:
                type: string
                x-go-name: RequestCookies
              request_headers:
                type: string
                x-go-name: RequestHeaders
              schedule:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              service_mesh:
                type: string
                x-go-name: ServiceMesh
              total_results:
                type: integer
                format: int64
                x-go-name: TotalResults
              updated_at:
                description: |-
                  +protobuf.options.marshal=false
                  +protobuf.as=Timestamp
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                type: object
                title: |-
                  Time is a wrapper around time.Time which supports correct
                  marshaling to YAML and JSON.  Wrappers are provided for many
                  of the factory methods that the time package offers.
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
            x-go-package: github.com/layer5io/meshery/models
          x-go-name: Profiles
        total_count:
          type: integer
          format: uint64
          x-go-name: TotalCount
      x-go-package: github.com/layer5io/meshery/models
  performanceResultsResponseWrapper:
    description: Returns all performance results
    schema:
      description: PerformanceResultsAPIResponse response retruned by performance
        endpoint on meshery server
      type: object
      properties:
        page:
          type: integer
          format: uint64
          x-go-name: Page
        page_size:
          type: integer
          format: uint64
          x-go-name: PageSize
        results:
          type: array
          items:
            description: PerformanceResult represents the result of a performance
              test
            type: object
            properties:
              mesh:
                type: string
                x-go-name: Mesh
              meshery_id:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              name:
                type: string
                x-go-name: Name
              performance_profile:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
              runner_results:
                type: object
                properties:
                  ActualDuration:
                    type: integer
                    format: uint64
                    x-go-name: Duration
                  ActualQPS:
                    type: number
                    format: double
                    x-go-name: QPS
                  DurationHistogram:
                    type: object
                    properties:
                      Avg:
                        type: number
                        format: double
                        x-go-name: Average
                      Max:
                        type: number
                        format: double
                      Min:
                        type: number
                        format: double
                      Percentiles:
                        type: array
                        items:
                          type: object
                          properties:
                            Percentile:
                              type: number
                              format: double
                            Value:
                              type: number
                              format: double
                  StartTime:
                    type: string
                    format: date-time
                  URL:
                    type: string
                  load-generator:
                    type: string
                    x-go-name: LoadGenerator
                x-go-package: github.com/layer5io/meshery/models
              server_board_config:
                type: object
                x-go-name: ServerBoardConfig
              server_metrics:
                type: object
                x-go-name: ServerMatrics
              test_start_time:
                type: string
                format: date-time
                x-go-name: TestStartTime
              user_id:
                type: array
                title: UUID is an array type to represent the value of a UUID, as
                  defined in RFC-4122.
                items:
                  type: integer
                  format: uint8
                x-go-package: github.com/gofrs/uuid
            x-go-package: github.com/layer5io/meshery/models
          x-go-name: Results
        total_count:
          type: integer
          format: uint64
          x-go-name: TotalCount
      x-go-package: github.com/layer5io/meshery/models
  prometheusBoardImportRespWrapper:
    description: Response for prometheus board import
    schema:
      description: GrafanaBoard represents a Grafana board
      type: object
      properties:
        org_id:
          type: integer
          format: uint64
          x-go-name: OrgID
        panels:
          type: array
          items:
            $ref: '#/definitions/Panel'
          x-go-name: Panels
        slug:
          type: string
          x-go-name: Slug
        template_vars:
          type: array
          items:
            description: GrafanaTemplateVars represents template variables in a bboard
            type: object
            properties:
              datasource:
                description: GrafanaDataSource represents a Grafana datasource like
                  Prometheus
                type: object
                properties:
                  id:
                    type: integer
                    format: uint64
                    x-go-name: ID
                  name:
                    type: string
                    x-go-name: Name
                x-go-package: github.com/layer5io/meshery/models
              hide:
                type: integer
                format: uint8
                x-go-name: Hide
              name:
                type: string
                x-go-name: Name
              query:
                type: string
                x-go-name: Query
              value:
                type: object
                x-go-name: Value
            x-go-package: github.com/layer5io/meshery/models
          x-go-name: TemplateVars
        title:
          type: string
          x-go-name: Title
        uid:
          type: string
          x-go-name: UID
        uri:
          type: string
          x-go-name: URI
      x-go-package: github.com/layer5io/meshery/models
  prometheusConfigResponseWrapper:
    description: Returns prometheus configuration
    schema:
      description: Prometheus represents the prometheus session config
      type: object
      properties:
        prometheusURL:
          type: string
          x-go-name: PrometheusURL
        selectedPrometheusBoardsConfigs:
          type: array
          items:
            description: SelectedGrafanaConfig represents the selected boards, panels,
              and template variables
            type: object
            properties:
              board:
                description: GrafanaBoard represents a Grafana board
                type: object
                properties:
                  org_id:
                    type: integer
                    format: uint64
                    x-go-name: OrgID
                  panels:
                    type: array
                    items:
                      $ref: '#/definitions/Panel'
                    x-go-name: Panels
                  slug:
                    type: string
                    x-go-name: Slug
                  template_vars:
                    type: array
                    items:
                      description: GrafanaTemplateVars represents template variables
                        in a bboard
                      type: object
                      properties:
                        datasource:
                          description: GrafanaDataSource represents a Grafana datasource
                            like Prometheus
                          type: object
                          properties:
                            id:
                              type: integer
                              format: uint64
                              x-go-name: ID
                            name:
                              type: string
                              x-go-name: Name
                          x-go-package: github.com/layer5io/meshery/models
                        hide:
                          type: integer
                          format: uint8
                          x-go-name: Hide
                        name:
                          type: string
                          x-go-name: Name
                        query:
                          type: string
                          x-go-name: Query
                        value:
                          type: object
                          x-go-name: Value
                      x-go-package: github.com/layer5io/meshery/models
                    x-go-name: TemplateVars
                  title:
                    type: string
                    x-go-name: Title
                  uid:
                    type: string
                    x-go-name: UID
                  uri:
                    type: string
                    x-go-name: URI
                x-go-package: github.com/layer5io/meshery/models
              panels:
                type: array
                items:
                  $ref: '#/definitions/Panel'
                x-go-name: GrafanaPanels
              templateVars:
                type: array
                items:
                  type: string
                x-go-name: SelectedTemplateVars
            x-go-package: github.com/layer5io/meshery/models
          x-go-name: SelectedPrometheusBoardsConfigs
      x-go-package: github.com/layer5io/meshery/models
  prometheusStaticBoardRespWrapper:
    description: Returns Prometheus static board
    schema:
      type: object
      additionalProperties:
        description: GrafanaBoard represents a Grafana board
        type: object
        properties:
          org_id:
            type: integer
            format: uint64
            x-go-name: OrgID
          panels:
            type: array
            items:
              $ref: '#/definitions/Panel'
            x-go-name: Panels
          slug:
            type: string
            x-go-name: Slug
          template_vars:
            type: array
            items:
              description: GrafanaTemplateVars represents template variables in a
                bboard
              type: object
              properties:
                datasource:
                  description: GrafanaDataSource represents a Grafana datasource like
                    Prometheus
                  type: object
                  properties:
                    id:
                      type: integer
                      format: uint64
                      x-go-name: ID
                    name:
                      type: string
                      x-go-name: Name
                  x-go-package: github.com/layer5io/meshery/models
                hide:
                  type: integer
                  format: uint8
                  x-go-name: Hide
                name:
                  type: string
                  x-go-name: Name
                query:
                  type: string
                  x-go-name: Query
                value:
                  type: object
                  x-go-name: Value
              x-go-package: github.com/layer5io/meshery/models
            x-go-name: TemplateVars
          title:
            type: string
            x-go-name: Title
          uid:
            type: string
            x-go-name: UID
          uri:
            type: string
            x-go-name: URI
        x-go-package: github.com/layer5io/meshery/models
  v1ServicesMapResponseWrapper:
    description: Returns a map for v1 services
    schema:
      type: object
      additionalProperties:
        type: array
        items:
          description: |-
            Service is a named abstraction of software service (for example, mysql) consisting of local port
            (for example 3306) that the proxy listens on, and the selector that determines which pods
            will answer requests sent through the proxy.
          type: object
          properties:
            annotations:
              description: |-
                Annotations is an unstructured key value map stored with a resource that may be
                set by external tools to store and retrieve arbitrary metadata. They are not
                queryable and should be preserved when modifying objects.
                More info: http://kubernetes.io/docs/user-guide/annotations
                +optional
              type: object
              additionalProperties:
                type: string
              x-go-name: Annotations
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                +optional
              type: string
              x-go-name: APIVersion
            clusterName:
              description: |-
                The name of the cluster which the object belongs to.
                This is used to distinguish resources with same name and namespace in different clusters.
                This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
                +optional
              type: string
              x-go-name: ClusterName
            creationTimestamp:
              description: |-
                +protobuf.options.marshal=false
                +protobuf.as=Timestamp
                +protobuf.options.(gogoproto.goproto_stringer)=false
              type: object
              title: |-
                Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many
                of the factory methods that the time package offers.
              x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
            deletionGracePeriodSeconds:
              description: |-
                Number of seconds allowed for this object to gracefully terminate before
                it will be removed from the system. Only set when deletionTimestamp is also set.
                May only be shortened.
                Read-only.
                +optional
              type: integer
              format: int64
              x-go-name: DeletionGracePeriodSeconds
            deletionTimestamp:
              description: |-
                +protobuf.options.marshal=false
                +protobuf.as=Timestamp
                +protobuf.options.(gogoproto.goproto_stringer)=false
              type: object
              title: |-
                Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many
                of the factory methods that the time package offers.
              x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
            finalizers:
              description: |-
                Must be empty before the object is deleted from the registry. Each entry
                is an identifier for the responsible component that will remove the entry
                from the list. If the deletionTimestamp of the object is non-nil, entries
                in this list can only be removed.
                Finalizers may be processed and removed in any order.  Order is NOT enforced
                because it introduces significant risk of stuck finalizers.
                finalizers is a shared field, any actor with permission can reorder it.
                If the finalizer list is processed in order, then this can lead to a situation
                in which the component responsible for the first finalizer in the list is
                waiting for a signal (field value, external system, or other) produced by a
                component responsible for a finalizer later in the list, resulting in a deadlock.
                Without enforced ordering finalizers are free to order amongst themselves and
                are not vulnerable to ordering changes in the list.
                +optional
                +patchStrategy=merge
              type: array
              items:
                type: string
              x-go-name: Finalizers
            generateName:
              description: |-
                GenerateName is an optional prefix, used by the server, to generate a unique
                name ONLY IF the Name field has not been provided.
                If this field is used, the name returned to the client will be different
                than the name passed. This value will also be combined with a unique suffix.
                The provided value has the same validation rules as the Name field,
                and may be truncated by the length of the suffix required to make the value
                unique on the server.

                If this field is specified and the generated name exists, the server will
                NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
                ServerTimeout indicating a unique name could not be found in the time allotted, and the client
                should retry (optionally after the time indicated in the Retry-After header).

                Applied only if Name is not specified.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                +optional
              type: string
              x-go-name: GenerateName
            generation:
              description: |-
                A sequence number representing a specific generation of the desired state.
                Populated by the system. Read-only.
                +optional
              type: integer
              format: int64
              x-go-name: Generation
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                +optional
              type: string
              x-go-name: Kind
            labels:
              description: |-
                Map of string keys and values that can be used to organize and categorize
                (scope and select) objects. May match selectors of replication controllers
                and services.
                More info: http://kubernetes.io/docs/user-guide/labels
                +optional
              type: object
              additionalProperties:
                type: string
              x-go-name: Labels
            managedFields:
              description: |-
                ManagedFields maps workflow-id and version to the set of fields
                that are managed by that workflow. This is mostly for internal
                housekeeping, and users typically shouldn't need to set or
                understand this field. A workflow can be the user's name, a
                controller's name, or the name of a specific apply path like
                "ci-cd". The set of fields is always in the version that the
                workflow used when modifying the object.

                +optional
              type: array
              items:
                description: |-
                  ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource
                  that the fieldset applies to.
                type: object
                properties:
                  apiVersion:
                    description: |-
                      APIVersion defines the version of this resource that this field set
                      applies to. The format is "group/version" just like the top-level
                      APIVersion field. It is necessary to track the version of a field
                      set because it cannot be automatically converted.
                    type: string
                    x-go-name: APIVersion
                  fieldsType:
                    description: |-
                      FieldsType is the discriminator for the different fields format and version.
                      There is currently only one possible value: "FieldsV1"
                    type: string
                    x-go-name: FieldsType
                  fieldsV1:
                    description: |-
                      Each key is either a '.' representing the field itself, and will always map to an empty set,
                      or a string representing a sub-field or item. The string will follow one of these four formats:
                      'f:<name>', where <name> is the name of a field in a struct, or key in a map
                      'v:<value>', where <value> is the exact json formatted value of a list item
                      'i:<index>', where <index> is position of a item in a list
                      'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values
                      If a key maps to an empty Fields value, the field that key represents is part of the set.

                      The exact format is defined in sigs.k8s.io/structured-merge-diff
                    type: object
                    title: FieldsV1 stores a set of fields in a data structure like
                      a Trie, in JSON format.
                    x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                  manager:
                    description: Manager is an identifier of the workflow managing
                      these fields.
                    type: string
                    x-go-name: Manager
                  operation:
                    type: string
                    title: ManagedFieldsOperationType is the type of operation which
                      lead to a ManagedFieldsEntry being created.
                    x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                  time:
                    description: |-
                      +protobuf.options.marshal=false
                      +protobuf.as=Timestamp
                      +protobuf.options.(gogoproto.goproto_stringer)=false
                    type: object
                    title: |-
                      Time is a wrapper around time.Time which supports correct
                      marshaling to YAML and JSON.  Wrappers are provided for many
                      of the factory methods that the time package offers.
                    x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
              x-go-name: ManagedFields
            name:
              description: |-
                Name must be unique within a namespace. Is required when creating resources, although
                some resources may allow a client to request the generation of an appropriate name
                automatically. Name is primarily intended for creation idempotence and configuration
                definition.
                Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/identifiers#names
                +optional
              type: string
              x-go-name: Name
            namespace:
              description: |-
                Namespace defines the space within each name must be unique. An empty namespace is
                equivalent to the "default" namespace, but "default" is the canonical representation.
                Not all objects are required to be scoped to a namespace - the value of this field for
                those objects will be empty.

                Must be a DNS_LABEL.
                Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces
                +optional
              type: string
              x-go-name: Namespace
            ownerReferences:
              description: |-
                List of objects depended by this object. If ALL objects in the list have
                been deleted, this object will be garbage collected. If this object is managed by a controller,
                then an entry in this list will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
                +optional
                +patchMergeKey=uid
                +patchStrategy=merge
              type: array
              items:
                description: |-
                  OwnerReference contains enough information to let you identify an owning
                  object. An owning object must be in the same namespace as the dependent, or
                  be cluster-scoped, so there is no namespace field.
                type: object
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                    x-go-name: APIVersion
                  blockOwnerDeletion:
                    description: |-
                      If true, AND if the owner has the "foregroundDeletion" finalizer, then
                      the owner cannot be deleted from the key-value store until this
                      reference is removed.
                      Defaults to false.
                      To set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                      +optional
                    type: boolean
                    x-go-name: BlockOwnerDeletion
                  controller:
                    description: |-
                      If true, this reference points to the managing controller.
                      +optional
                    type: boolean
                    x-go-name: Controller
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                    x-go-name: Kind
                  name:
                    description: |-
                      Name of the referent.
                      More info: http://kubernetes.io/docs/user-guide/identifiers#names
                    type: string
                    x-go-name: Name
                  uid:
                    description: |-
                      UID is a type that holds unique ID values, including UUIDs.  Because we
                      don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                      intent and helps make sure that UIDs and names do not get conflated.
                    type: string
                    x-go-package: k8s.io/apimachinery/pkg/types
                x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
              x-go-name: OwnerReferences
            resourceVersion:
              description: |-
                An opaque value that represents the internal version of this object that can
                be used by clients to determine when objects have changed. May be used for optimistic
                concurrency, change detection, and the watch operation on a resource or set of resources.
                Clients must treat these values as opaque and passed unmodified back to the server.
                They may only be valid for a particular resource or set of resources.

                Populated by the system.
                Read-only.
                Value must be treated as opaque by clients and .
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                +optional
              type: string
              x-go-name: ResourceVersion
            selfLink:
              description: |-
                SelfLink is a URL representing this object.
                Populated by the system.
                Read-only.

                DEPRECATED
                Kubernetes will stop propagating this field in 1.20 release and the field is planned
                to be removed in 1.21 release.
                +optional
              type: string
              x-go-name: SelfLink
            spec:
              type: object
              title: ServiceSpec describes the attributes that a user creates on a
                service.
              properties:
                clusterIP:
                  description: |-
                    clusterIP is the IP address of the service and is usually assigned
                    randomly by the master. If an address is specified manually and is not in
                    use by others, it will be allocated to the service; otherwise, creation
                    of the service will fail. This field can not be changed through updates.
                    Valid values are "None", empty string (""), or a valid IP address. "None"
                    can be specified for headless services when proxying is not required.
                    Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if
                    type is ExternalName.
                    More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                    +optional
                  type: string
                  x-go-name: ClusterIP
                externalIPs:
                  description: |-
                    externalIPs is a list of IP addresses for which nodes in the cluster
                    will also accept traffic for this service.  These IPs are not managed by
                    Kubernetes.  The user is responsible for ensuring that traffic arrives
                    at a node with this IP.  A common example is external load-balancers
                    that are not part of the Kubernetes system.
                    +optional
                  type: array
                  items:
                    type: string
                  x-go-name: ExternalIPs
                externalName:
                  description: |-
                    externalName is the external reference that kubedns or equivalent will
                    return as a CNAME record for this service. No proxying will be involved.
                    Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
                    and requires Type to be ExternalName.
                    +optional
                  type: string
                  x-go-name: ExternalName
                externalTrafficPolicy:
                  description: Service External Traffic Policy Type string
                  type: string
                  x-go-package: k8s.io/api/core/v1
                healthCheckNodePort:
                  description: |-
                    healthCheckNodePort specifies the healthcheck nodePort for the service.
                    If not specified, HealthCheckNodePort is created by the service api
                    backend with the allocated nodePort. Will use user-specified nodePort value
                    if specified by the client. Only effects when Type is set to LoadBalancer
                    and ExternalTrafficPolicy is set to Local.
                    +optional
                  type: integer
                  format: int32
                  x-go-name: HealthCheckNodePort
                ipFamily:
                  description: |-
                    IPFamily represents the IP Family (IPv4 or IPv6). This type is used
                    to express the family of an IP expressed by a type (i.e. service.Spec.IPFamily)
                  type: string
                  x-go-package: k8s.io/api/core/v1
                loadBalancerIP:
                  description: |-
                    Only applies to Service Type: LoadBalancer
                    LoadBalancer will get created with the IP specified in this field.
                    This feature depends on whether the underlying cloud-provider supports specifying
                    the loadBalancerIP when a load balancer is created.
                    This field will be ignored if the cloud-provider does not support the feature.
                    +optional
                  type: string
                  x-go-name: LoadBalancerIP
                loadBalancerSourceRanges:
                  description: |-
                    If specified and supported by the platform, this will restrict traffic through the cloud-provider
                    load-balancer will be restricted to the specified client IPs. This field will be ignored if the
                    cloud-provider does not support the feature."
                    More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
                    +optional
                  type: array
                  items:
                    type: string
                  x-go-name: LoadBalancerSourceRanges
                ports:
                  description: |-
                    The list of ports that are exposed by this service.
                    More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                    +patchMergeKey=port
                    +patchStrategy=merge
                    +listType=map
                    +listMapKey=port
                    +listMapKey=protocol
                  type: array
                  items:
                    type: object
                    title: ServicePort contains information on service's port.
                    properties:
                      appProtocol:
                        description: |-
                          The application protocol for this port.
                          This field follows standard Kubernetes label syntax.
                          Un-prefixed names are reserved for IANA standard service names (as per
                          RFC-6335 and http://www.iana.org/assignments/service-names).
                          Non-standard protocols should use prefixed names such as
                          mycompany.com/my-custom-protocol.
                          Field can be enabled with ServiceAppProtocol feature gate.
                          +optional
                        type: string
                        x-go-name: AppProtocol
                      name:
                        description: |-
                          The name of this port within the service. This must be a DNS_LABEL.
                          All ports within a ServiceSpec must have unique names. When considering
                          the endpoints for a Service, this must match the 'name' field in the
                          EndpointPort.
                          Optional if only one ServicePort is defined on this service.
                          +optional
                        type: string
                        x-go-name: Name
                      nodePort:
                        description: |-
                          The port on each node on which this service is exposed when type=NodePort or LoadBalancer.
                          Usually assigned by the system. If specified, it will be allocated to the service
                          if unused or else creation of the service will fail.
                          Default is to auto-allocate a port if the ServiceType of this Service requires one.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                          +optional
                        type: integer
                        format: int32
                        x-go-name: NodePort
                      port:
                        description: The port that will be exposed by this service.
                        type: integer
                        format: int32
                        x-go-name: Port
                      protocol:
                        type: string
                        title: Protocol defines network protocols supported for things
                          like container ports.
                        x-go-package: k8s.io/api/core/v1
                      targetPort:
                        description: |-
                          +protobuf=true
                          +protobuf.options.(gogoproto.goproto_stringer)=false
                          +k8s:openapi-gen=true
                        type: object
                        title: |-
                          IntOrString is a type that can hold an int32 or a string.  When used in
                          JSON or YAML marshalling and unmarshalling, it produces or consumes the
                          inner type.  This allows you to have, for example, a JSON field that can
                          accept a name or number.
                          TODO: Rename to Int32OrString
                        properties:
                          IntVal:
                            type: integer
                            format: int32
                          StrVal:
                            type: string
                          Type:
                            type: integer
                            format: int64
                            title: Type represents the stored type of IntOrString.
                            x-go-package: k8s.io/apimachinery/pkg/util/intstr
                        x-go-package: k8s.io/apimachinery/pkg/util/intstr
                    x-go-package: k8s.io/api/core/v1
                  x-go-name: Ports
                publishNotReadyAddresses:
                  description: |-
                    publishNotReadyAddresses, when set to true, indicates that DNS implementations
                    must publish the notReadyAddresses of subsets for the Endpoints associated with
                    the Service. The default value is false.
                    The primary use case for setting this field is to use a StatefulSet's Headless Service
                    to propagate SRV records for its Pods without respect to their readiness for purpose
                    of peer discovery.
                    +optional
                  type: boolean
                  x-go-name: PublishNotReadyAddresses
                selector:
                  description: |-
                    Route service traffic to pods with label keys and values matching this
                    selector. If empty or not present, the service is assumed to have an
                    external process managing its endpoints, which Kubernetes will not
                    modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
                    Ignored if type is ExternalName.
                    More info: https://kubernetes.io/docs/concepts/services-networking/service/
                    +optional
                  type: object
                  additionalProperties:
                    type: string
                  x-go-name: Selector
                sessionAffinity:
                  description: Session Affinity Type string
                  type: string
                  x-go-package: k8s.io/api/core/v1
                sessionAffinityConfig:
                  type: object
                  title: SessionAffinityConfig represents the configurations of session
                    affinity.
                  properties:
                    clientIP:
                      type: object
                      title: ClientIPConfig represents the configurations of Client
                        IP based session affinity.
                      properties:
                        timeoutSeconds:
                          description: |-
                            timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                            The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                            Default value is 10800(for 3 hours).
                            +optional
                          type: integer
                          format: int32
                          x-go-name: TimeoutSeconds
                      x-go-package: k8s.io/api/core/v1
                  x-go-package: k8s.io/api/core/v1
                topologyKeys:
                  description: |-
                    topologyKeys is a preference-order list of topology keys which
                    implementations of services should use to preferentially sort endpoints
                    when accessing this Service, it can not be used at the same time as
                    externalTrafficPolicy=Local.
                    Topology keys must be valid label keys and at most 16 keys may be specified.
                    Endpoints are chosen based on the first topology key with available backends.
                    If this field is specified and all entries have no backends that match
                    the topology of the client, the service has no backends for that client
                    and connections should fail.
                    The special value "*" may be used to mean "any topology". This catch-all
                    value, if used, only makes sense as the last value in the list.
                    If this is not specified or empty, no topology constraints will be applied.
                    +optional
                  type: array
                  items:
                    type: string
                  x-go-name: TopologyKeys
                type:
                  description: Service Type string describes ingress methods for a
                    service
                  type: string
                  x-go-package: k8s.io/api/core/v1
              x-go-package: k8s.io/api/core/v1
            status:
              type: object
              title: ServiceStatus represents the current status of a service.
              properties:
                loadBalancer:
                  type: object
                  title: LoadBalancerStatus represents the status of a load-balancer.
                  properties:
                    ingress:
                      description: |-
                        Ingress is a list containing ingress points for the load-balancer.
                        Traffic intended for the service should be sent to these ingress points.
                        +optional
                      type: array
                      items:
                        description: traffic intended for the service should be sent
                          to an ingress point.
                        type: object
                        title: 'LoadBalancerIngress represents the status of a load-balancer
                          ingress point:'
                        properties:
                          hostname:
                            description: |-
                              Hostname is set for load-balancer ingress points that are DNS based
                              (typically AWS load-balancers)
                              +optional
                            type: string
                            x-go-name: Hostname
                          ip:
                            description: |-
                              IP is set for load-balancer ingress points that are IP based
                              (typically GCE or OpenStack load-balancers)
                              +optional
                            type: string
                            x-go-name: IP
                        x-go-package: k8s.io/api/core/v1
                      x-go-name: Ingress
                  x-go-package: k8s.io/api/core/v1
              x-go-package: k8s.io/api/core/v1
            uid:
              description: |-
                UID is a type that holds unique ID values, including UUIDs.  Because we
                don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                intent and helps make sure that UIDs and names do not get conflated.
              type: string
              x-go-package: k8s.io/apimachinery/pkg/types
          x-go-package: k8s.io/api/core/v1
securityDefinitions:
  token:
    type: apiKey
    name: token
    in: cookie
security:
- token:
  - '[]'
